            const match = raw.match(
                /^(https?:\/\/raw\.github(?:usercontent)?\.com\/[^\/]+\/[^\/]+\/)([^\/]+)\/(.*)$/
            )!;

            return {
                "type": "GITHUB-RAW URL",
                "baseUrlWithoutBranch": match[1]
                    .replace(
                        /^https?:\/\/raw\.github(?:usercontent)?/,
                        "https://raw.githubusercontent"
                    )
                    .replace(/\/$/, "")
                ,
                "branch": match[2],
                "pathToIndex": match[3]
            };

        }

        export function match(raw: string): boolean {
            return /^https?:\/\/raw\.github(?:usercontent)?\.com/.test(raw);
        }

    }

    /** e.g: https://deno.land/x/foo@1.2.3/mod.js */
    export type DenoLandUrl = {
        type: "DENO.LAND URL"
        isStd: boolean;
        baseUrlWithoutBranch: string;
        pathToIndex: string;
        branch?: string;
    };

    export namespace DenoLandUrl {

        export function parse(raw: string): DenoLandUrl {

            const isStd = /^https?:\/\/deno\.land\/std/.test(raw);

            const match = isStd ?
                raw.match(/^(https?:\/\/deno\.land\/std)([@\/].*)$/)! :
                raw.match(/^(https?:\/\/deno\.land\/x\/[^@\/]+)([@\/].*)$/)!
                ;

            // https://deno.land/std@master/node/querystring.ts
            // [1]: https://deno.land/std
            // [2]: @master/node/querystring.ts

            // https://deno.land/std/node/querystring.ts
            // [1]: https://deno.land/std
            // [2]: /node/querystring.ts

            //https://deno.land/x/foo@1.2.3/

To use `KeyboardController`, simply initialize it with an array of `UITextField` objects.

```swift
let fields = [field1!, field2!, field3!, field4!, field5!]
self.controller = KeyboardController(fields: fields)
```

You can interact with `KeyboardController` directly via the following methods:

```swift
func moveToNextField()
func moveToPreviousField()
func closeKeyboard()
```

`KeyboardController`, depending on a `returnKeyType` property of an `UITextField` instance, will:

* `UIReturnKeyNext` - move to next text field
* `UIReturnKeyDone` - close keyboard


### KeyboardControllerDelegate 

You could also take advantage of delegation methods:

```swift
func controllerDidHideKeyboard(controller: KeyboardController)
func controllerDidShowKeyboard(controller: KeyboardController)
func controllerWillHideKeyboard(controller: KeyboardController)
func controllerWillShowKeyboard(controller: KeyboardController)
```

by setting a `delegate` property of a `KeyboardController`:

```swift
self.keyboardController.delegate = self;
```


### UITextFieldDelegate 

There is also an option of setting a `textFieldDelegate` property of all textFields that are under control of `KeyboardController`:

```swift
self.keyboardController.textFieldDelegate = self;
```

This could be particulary useful if you would like to add individual behaviour to `UITextFields` objects.

```swift
func textFieldDidBeginEditing(_ textField: UITextField) {
    if (textField == self.field4) { self.moveViewBy(-10) }
    if (textField == self.field5) { self.moveViewBy(-200) }
}

func textFieldDidEndEditing(_ textField: UITextField) {
    if (textField == self.field4) { self.moveViewBy(10) }
    if (textField == self.field5) { self.moveViewBy(200) }
}
```

## Contributing

1. Fork it.
2. Create your feature branch (`git checkout -

  public function shouldAllowRestrictedParameter($parameter_name) {
    // Prevent false positives from file content when it is submitted via
    // drag-and-drop upload.
    return true;
  }

  /**
   * @phutil-external-symbol class PhabricatorStartup
   */
  public function handleRequest(AphrontRequest $request) {
    $viewer = $request->getViewer();

    // NOTE: Throws if valid CSRF token is not present in the request.
    $request->validateCSRF();

    $name = $request->getStr('name');
    $file_phid = $request->getStr('phid');
    // If there's no explicit view policy, make it very restrictive by default.
    // This is the correct policy for files dropped onto objects during
    // creation, comment and edit flows.
    $view_policy = $request->getStr('viewPolicy');
    if (!$view_policy) {
      $view_policy = $viewer->getPHID();
    }

    $is_chunks = $request->getBool('querychunks');
    if ($is_chunks) {
      $params = array(
        'filePHID' => $file_phid,
      );

      $result = id(new ConduitCall('file.querychunks', $params))
        ->setUser($viewer)
        ->execute();

      return id(new AphrontAjaxResponse())->setContent($result);
    }

    $is_allocate = $request->getBool('allocate');
    if ($is_allocate) {
      $params = array(
        'name' => $name,
        'contentLength' => $request->getInt('length'),
        'viewPolicy' => $view_policy,
      );

      $result = id(new ConduitCall('file.allocate', $params))
        ->setUser($viewer)
        ->execute();

      $file_phid = $result['filePHID'];
      if ($file_phid) {
        $file = $this->loadFile($file_phid);
        $result += $file->getDragAndDropDictionary();


testIncrementation(org.apache.commons.math.stat.descriptive.rank.MinTest)
testConsistency(org.apache.commons.math.stat.descriptive.rank.MinTest)
testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.rank.MinTest)
testEvaluation(org.apache.commons.math.stat.descriptive.rank.MinTest)
testPercentile(org.apache.commons.math.stat.descriptive.rank.PercentileTest)
testNISTExample(org.apache.commons.math.stat.descriptive.rank.PercentileTest)
testSingleton(org.apache.commons.math.stat.descriptive.rank.PercentileTest)
testSetQuantile(org.apache.commons.math.stat.descriptive.rank.PercentileTest)
test5(org.apache.commons.math.stat.descriptive.rank.PercentileTest)
testHighPercentile(org.apache.commons.math.stat.descriptive.rank.PercentileTest)
testSpecialValues(org.apache.commons.math.stat.descriptive.rank.PercentileTest)
testNullEmpty(org.apache.commons.math.stat.descriptive.rank.PercentileTest)
testEvaluation(org.apache.commons.math.stat.descriptive.rank.PercentileTest)
testSpecialValues(org.apache.commons.math.stat.descriptive.summary.ProductTest)
testMomentSmallSamples(org.apache.commons.math.stat.descriptive.summary.ProductTest)
testSerialization(org.apache.commons.math.stat.descriptive.summary.ProductTest)
testIncrementation(org.apache.commons.math.stat.descriptive.summary.ProductTest)
testConsistency(org.apache.commons.math.stat.descriptive.summary.ProductTest)
testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.summary.ProductTest)
testEvaluation(org.apache.commons.math.stat.descriptive.summary.ProductTest)
testSpecialValues(org.apache.commons.math.stat.descriptive.summary.SumLogTest)
testMomentSmallSamples(org.apache.commons.

{ config, pkgs, lib, ... }:

with lib;

let
  cfg = config.services.jackett;

in
{
  options = {
    services.jackett = {
      enable = mkEnableOption "Jackett";

      dataDir = mkOption {
        type = types.str;
        default = "/var/lib/jackett/.config/Jackett";
        description = "The directory where Jackett stores its data files.";
      };

      openFirewall = mkOption {
        type = types.bool;
        default = false;
        description = "Open ports in the firewall for the Jackett web interface.";
      };

      user = mkOption {
        type = types.str;
        default = "jackett";
        description = "User account under which Jackett runs.";
      };

      group = mkOption {
        type = types.str;
        default = "jackett";
        description = "Group under which Jackett runs.";
      };

      package = mkOption {
        type = types.package;
        default = pkgs.jackett;
        defaultText = "pkgs.jackett";
        description = "Jackett package to use.";
      };
    };
  };

  config = mkIf cfg.enable {
    systemd.tmpfiles.rules = [
      "d '${cfg.dataDir}' 0700 ${cfg.user} ${cfg.group} - -"
    ];

    systemd.services.jackett = {
      description = "Jackett";
      after = [ "network.target" ];
      wantedBy = [ "multi-user.target" ];

      serviceConfig = {
        Type = "simple";
        User = cfg.user;
        Group = cfg.group;
        ExecStart = "${cfg.package}/bin/Jackett --NoUpdates --DataFolder '${cfg.dataDir}'";
        Restart = "on-failure";
      };
    };

    networking.firewall = mkIf cfg.openFirewall {
      allowedTCPPorts = [ 9117 ];
    };

    users.users = mkIf (cfg.user == "jackett") {
      jackett = {
        group

---
title: "Delete androidStoreApp"
description: "Deletes a androidStoreApp."
author: "dougeby"
localization_priority: Normal
ms.prod: "intune"
doc_type: apiPageType
---

# Delete androidStoreApp

Namespace: microsoft.graph

> **Important:** Microsoft Graph APIs under the /beta version are subject to change; production use is not supported.

> **Note:** The Microsoft Graph API for Intune requires an [active Intune license](https://go.microsoft.com/fwlink/?linkid=839381) for the tenant.

Deletes a [androidStoreApp](../resources/intune-apps-androidstoreapp.md).

## Prerequisites
One of the following permissions is required to call this API. To learn more, including how to choose permissions, see [Permissions](/graph/permissions-reference).

|Permission type|Permissions (from most to least privileged)|
|:---|:---|
|Delegated (work or school account)|DeviceManagementApps.ReadWrite.All|
|Delegated (personal Microsoft account)|Not supported.|
|Application|DeviceManagementApps.ReadWrite.All|

## HTTP Request
<!-- {
  "blockType": "ignored"
}
-->
``` http
DELETE /deviceAppManagement/mobileApps/{mobileAppId}
DELETE /deviceAppManagement/mobileApps/{mobileAppId}/userStatuses/{userAppInstallStatusId}/app
DELETE /deviceAppManagement/mobileApps/{mobileAppId}/deviceStatuses/{mobileAppInstallStatusId}/app
```

## Request headers
|Header|Value|
|:---|:---|
|Authorization|Bearer &lt;token&gt; Required.|
|Accept|application/json|

## Request body
Do not supply a request body for this method.

## Response
If successful, this method returns a `204 No Content` response code.

## Example

### Request
Here is an example of the request.
``` http
DELETE https://graph.microsoft.com/beta/deviceAppManagement/mobileApps/{mobileAppId}
```

### Response
Here is an example of the response. Note: The response object shown here may

	/// Sender side of the neighbor packet channel.
	///
	/// Packets sent into this channel are processed by the `NeighborPacketWorker` and passed on to
	/// the underlying `GossipEngine`.
	neighbor_sender: periodic::NeighborPacketSender<B>,

	/// `NeighborPacketWorker` processing packets sent through the `NeighborPacketSender`.
	//
	// `NetworkBridge` is required to be cloneable, thus one needs to be able to clone its children,
	// thus one has to wrap `neighbor_packet_worker` with an `Arc` `Mutex`.
	neighbor_packet_worker: Arc<Mutex<periodic::NeighborPacketWorker<B>>>,

	/// Receiver side of the peer report stream populated by the gossip validator, forwarded to the
	/// gossip engine.
	//
	// `NetworkBridge` is required to be cloneable, thus one needs to be able to clone its children,
	// thus one has to wrap gossip_validator_report_stream with an `Arc` `Mutex`. Given that it is
	// just an `UnboundedReceiver`, one could also switch to a multi-producer-*multi*-consumer
	// channel implementation.
	gossip_validator_report_stream: Arc<Mutex<TracingUnboundedReceiver<PeerReport>>>,
}

impl<B: BlockT, N: Network<B>> Unpin for NetworkBridge<B, N> {}

impl<B: BlockT, N: Network<B>> NetworkBridge<B, N> {
	/// Create a new NetworkBridge to the given NetworkService. Returns the service
	/// handle.
	/// On creation it will register previous rounds' votes with the gossip
	/// service taken from the VoterSetState.
	pub(crate) fn new(
		service: N,
		config: crate::Config,
		set_state: crate::environment::SharedVoterSetState<B>,
		prometheus_registry: Option<&Registry>,
	) -> Self {
		let (validator, report_stream) = GossipValidator::new(
			config,
			set_state.clone(),
			prometheus_registry,
		);

		let validator = Arc::new(valid

@rem ##########################################################################

@rem Set local scope for the variables with windows NT shell
if "%OS%"=="Windows_NT" setlocal

@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
set DEFAULT_JVM_OPTS=

set DIRNAME=%~dp0
if "%DIRNAME%" == "" set DIRNAME=.
set APP_BASE_NAME=%~n0
set APP_HOME=%DIRNAME%

@rem Find java.exe
if defined JAVA_HOME goto findJavaFromJavaHome

set JAVA_EXE=java.exe
%JAVA_EXE% -version >NUL 2>&1
if "%ERRORLEVEL%" == "0" goto init

echo.
echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
echo.
echo Please set the JAVA_HOME variable in your environment to match the
echo location of your Java installation.

goto fail

:findJavaFromJavaHome
set JAVA_HOME=%JAVA_HOME:"=%
set JAVA_EXE=%JAVA_HOME%/bin/java.exe

if exist "%JAVA_EXE%" goto init

echo.
echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%
echo.
echo Please set the JAVA_HOME variable in your environment to match the
echo location of your Java installation.

goto fail

:init
@rem Get command-line arguments, handling Windowz variants

if not "%OS%" == "Windows_NT" goto win9xME_args
if "%@eval[2+2]" == "4" goto 4NT_args

:win9xME_args
@rem Slurp the command line arguments.
set CMD_LINE_ARGS=
set _SKIP=2

:win9xME_args_slurp
if "x%~1" == "x" goto execute

set CMD_LINE_ARGS=%*
goto execute

:4

import org.apache.log4j.Logger;

import com.trilead.ssh2.Connection;
import com.trilead.ssh2.Session;

public class SshTest {
    
    public static final Logger s_logger = Logger.getLogger(SshTest.class.getName());
    public static String host = "";
    public static String password = "password";
    public static String url = "http://google.com";
    
    public static void main (String[] args) {
        
        // Parameters
        List<String> argsList = Arrays.asList(args);
        Iterator<String> iter = argsList.iterator();
        while (iter.hasNext()) {
            String arg = iter.next();
            if (arg.equals("-h")) {
                host = iter.next();
            }   
            if (arg.equals("-p")) {
                password = iter.next();
            }  
            
            if (arg.equals("-u")) {
                url = iter.next();
            }  
        }
    
        if (host == null || host.equals("")) {
            s_logger.info("Did not receive a host back from test, ignoring ssh test");
            System.exit(2);
        }
        
        if (password == null){
            s_logger.info("Did not receive a password back from test, ignoring ssh test");
            System.exit(2);
        }

        try {
            s_logger.info("Attempting to SSH into host " + host);
            Connection conn = new Connection(host);
            conn.connect(null, 60000, 60000);

            s_logger.info("User + ssHed successfully into host " + host);

            boolean isAuthenticated = conn.authenticateWithPassword("root", password);

            if (isAuthenticated == false) {
                s_logger.info("Authentication failed for root with password" + password);
                System.exit(2);
            }
            
            String linuxCommand = "wget " + url;
            Session sess = conn.openSession();
            sess.execCommand(linuxCommand);
            sess.close();
            conn.close();

// 4

template<class Rt2, class R, class T,
    class B1, class B2, class B3, class B4,
    class A1, class A2, class A3, class A4, class A5>
    _bi::bind_t<Rt2, _mfi::BOOST_BIND_MF_NAME(mf4)<R, T, B1, B2, B3, B4>, typename _bi::list_av_5<A1, A2, A3, A4, A5>::type>
    BOOST_BIND(boost::type<Rt2>, R (BOOST_BIND_MF_CC T::*f) (B1, B2, B3, B4), A1 a1, A2 a2, A3 a3, A4 a4, A5 a5)
{
    typedef _mfi::BOOST_BIND_MF_NAME(mf4)<R, T, B1, B2, B3, B4> F;
    typedef typename _bi::list_av_5<A1, A2, A3, A4, A5>::type list_type;
    return _bi::bind_t<Rt2, F, list_type>(F(f), list_type(a1, a2, a3, a4, a5));
}

template<class Rt2, class R, class T,
    class B1, class B2, class B3, class B4,
    class A1, class A2, class A3, class A4, class A5>
    _bi::bind_t<Rt2, _mfi::BOOST_BIND_MF_NAME(cmf4)<R, T, B1, B2, B3, B4>, typename _bi::list_av_5<A1, A2, A3, A4, A5>::type>
    BOOST_BIND(boost::type<Rt2>, R (BOOST_BIND_MF_CC T::*f) (B1, B2, B3, B4) const, A1 a1, A2 a2, A3 a3, A4 a4, A5 a5)

  function inString(stream, state) {
    var escaped = false, next;
    while (next = stream.next()) {
      if (next == '"' && !escaped) { state.tokenize = base; break; }
      escaped = !escaped && next == "\\";
    }
    return "string";
  }

  function inComment(stream, state) {
    var next, last;
    while (next = stream.next()) {
      if (next == "#" && last == "|") { state.tokenize = base; break; }
      last = next;
    }
    type = "ws";
    return "comment";
  }

  return {
    startState: function () {
      return {ctx: {prev: null, start: 0, indentTo: 0}, tokenize: base};
    },

    token: function (stream, state) {
      if (stream.sol() && typeof state.ctx.indentTo != "number")
        state.ctx.indentTo = state.ctx.start + 1;

      type = null;
      var style = state.tokenize(stream, state);
      if (type != "ws") {
        if (state.ctx.indentTo == null) {
          if (type == "symbol" && assumeBody.test(stream.current()))
            state.ctx.indentTo = state.ctx.start + config.indentUnit;
          else
            state.ctx.indentTo = "next";
        } else if (state.ctx.indentTo == "next") {
          state.ctx.indentTo = stream.column();
        }
      }
      if (type == "open") state.ctx = {prev: state.ctx, start: stream.column(), indentTo: null};
      else if (type == "close") state.ctx = state.ctx.prev || state.ctx;
      return style;
    },

    indent: function (state, _textAfter) {
      var i = state.ctx.indentTo;
      return typeof i == "number" ? i : state.ctx.start + 1;
    },

    lineComment: ";;",
    blockCommentStart: "#|",
    blockComment

/* Header describing `ar' archive file format.
   Copyright (C) 1996 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

#ifndef _AR_H
#define _AR_H 1

#include <sys/cdefs.h>

/* Archive files start with the ARMAG identifying string.  Then follows a
   `struct ar_hdr', and as many bytes of member file data as its `ar_size'
   member indicates, for each member file.  */

#define ARMAG	"!<arch>\n"	/* String that begins an archive file.  */
#define SARMAG	8		/* Size of that string.  */

#define ARFMAG	"`\n"		/* String in ar_fmag at end of each header.  */

__BEGIN_DECLS

struct ar_hdr
  {
    char ar_name[16];		/* Member file name, sometimes / terminated. */
    char ar_date[12];		/* File date, decimal seconds since Epoch.  */
    char ar_uid[6], ar_gid[6];	/* User and group IDs, in ASCII decimal.  */
    char ar_mode[8];		/* File mode, in ASCII octal.  */
    char ar_size[10];		/* File size, in ASCII decimal.  */
    char ar_fmag[2];		/* Always contains

UPDATE quest_template_addon SET RequiredSkillID = 2557, RequiredSkillPoints = 100 WHERE (ID = 52227);
UPDATE quest_template_addon SET RequiredSkillID = 2557, RequiredSkillPoints = 150 WHERE (ID = 52226);
UPDATE quest_template_addon SET RequiredSkillID = 2557, RequiredSkillPoints = 150 WHERE (ID = 52228);
UPDATE quest_template_addon SET RequiredSkillID = 2565, RequiredSkillPoints = 50 WHERE (ID = 48752);
UPDATE quest_template_addon SET RequiredSkillID = 2565, RequiredSkillPoints = 50 WHERE (ID = 48764);
UPDATE quest_template_addon SET RequiredSkillID = 2565, RequiredSkillPoints = 150 WHERE (ID = 48767);
UPDATE quest_template_addon SET RequiredSkillID = 2565, RequiredSkillPoints = 150 WHERE (ID = 48770);
UPDATE quest_template_addon SET RequiredSkillID = 2565, RequiredSkillPoints = 50 WHERE (ID = 48752);
UPDATE quest_template_addon SET RequiredSkillID = 2565, RequiredSkillPoints = 150 WHERE (ID = 48761);
UPDATE quest_template_addon SET RequiredSkillID = 2565, RequiredSkillPoints = 50 WHERE (ID = 51568);
UPDATE quest_template_addon SET RequiredSkillID = 2565, RequiredSkillPoints = 150 WHERE (ID = 48768);
UPDATE quest_template_addon SET RequiredSkillID = 2565, RequiredSkillPoints = 150 WHERE (ID = 52044);
UPDATE quest_template_addon SET RequiredSkillID = 2565, RequiredSkillPoints = 150 WHERE (ID = 52049);
UPDATE quest_template_addon SET RequiredSkillID = 2565, RequiredSkillPoints = 150 WHERE (ID = 52050);
UPDATE quest_template_addon SET RequiredSkillID = 2565, RequiredSkillPoints = 150 WHERE (ID = 51380);
UPDATE quest_template_addon SET RequiredSkillID = 2549, RequiredSkillPoints = 50 WHERE (ID = 52050);
UPDATE quest_template_addon SET RequiredSkillID = 2549, RequiredSkillPoints = 150 WHERE (ID = 48754);
UPDATE quest

	template <typename T, precision P, template <typename, precision> class vecType>
	GLM_FUNC_QUALIFIER typename vecType<T, P>::bool_type greaterThan
	(
		vecType<T, P> const & x,
		vecType<T, P> const & y
	)
	{
		GLM_STATIC_ASSERT(std::numeric_limits<T>::is_iec559 || std::numeric_limits<T>::is_integer,
			"Invalid template instantiation of 'greaterThan', GLM vector types required floating-point or integer value types vectors");
		assert(x.length() == y.length());

		typename vecType<bool, P>::bool_type Result(vecType<bool, P>::_null);
		for(int i = 0; i < x.length(); ++i)
			Result[i] = x[i] > y[i];
		return Result;
	}

	template <typename T, precision P, template <typename, precision> class vecType>
	GLM_FUNC_QUALIFIER typename vecType<T, P>::bool_type greaterThanEqual
	(
		vecType<T, P> const & x,
		vecType<T, P> const & y
	)
	{
		GLM_STATIC_ASSERT(std::numeric_limits<T>::is_iec559 || std::numeric_limits<T>::is_integer,
			"Invalid template instantiation of 'greaterThanEqual', GLM vector types required floating-point or integer value types vectors");
		assert(x.length() == y.length());

		typename vecType<bool, P>::bool_type Result(vecType<bool, P>::_null);
		for(int i = 0; i < x.length(); ++i)
			Result[i] = x[i] >= y[i];
		return Result;
	}

	template <typename T, precision P, template <typename, precision> class vecType>
	GLM_FUNC_QUALIFIER typename vecType<T, P>::bool_type equal
	(
		vecType<T, P> const & x,
		vecType<T, P> const & y
	)
	

v_explicit
  = sp ( "vers" ( "ekre" / "ek" / abbrev? ) ) ![a-z] sp
    { return {"type": "v_explicit"} }

cv_sep
  = sp (":"+ / "." !(sp "." sp ".") ) sp

cv_sep_weak
  = sp ["'] sp / space

/* The opening regexp is overwritten during post-processing to allow flexibility on including the comma. */
sequence_sep
  = ([,;/:&\-\u2013\u2014~] / "." !(sp "." sp ".") / [ée]i "s" / "v" [öo]i / "vagy" / space)+
    { return "" }

range_sep
  = sp ([\-\u2013\u2014] sp / "k" [öo]i "v" sp )+

title
  = (cv_sep / sequence_sep)? val:"c" [íi]i "m"
    { return {type:"title", value: [val], "indices": [peg$savedPos, peg$currPos - 1]} }

in_book_of
  = sp ("from" / "of" / "in") sp ("the" sp "book" sp "of" sp)?

abbrev
  = sp "." !(sp "." sp ".")

/* EU-style separators, where "," is a cv separator and "." is a sequence separator. The sequence is post-processed into the grammar rather than specified here. */
eu_cv_sep
  = sp "," sp

/* Translations */
// Prevents a reference entirely enclosed in parentheses from incorrectly grabbing the closing parenthesis of the reference rather than just the closing parenthesis of the translation.
translation_sequence_enclosed
  = sp [\(\[] sp val:(translation (sequence_sep translation)*) sp [\)\]]
    { return {"type": "translation_sequence", "value": val, "indices": [peg$savedPos, peg$currPos - 1]} }

translation_sequence
  = sp ("," sp)? val:(translation (sequence_sep translation)*)
    { return {"type": "translation_sequence", "value": val, "indices": [peg$savedPos,

        // 1st Pass        
        // step through the input string and convert it into 
        // a logical sequence of steps, key, and charcodes to apply to the inputs
        var codes = parseCodes(value, settings.keyCodes[settings.keyBoard]);

        // 2nd Pass
        // Run the translated codes against each input through a realistic
        // and cancelable series of key down/press/up events        
        return this.each(function(){ triggerCodesOnField(codes, $(this), settings.delay, settings.global); });
    };
    
    $.fn.autotype.defaults = {
        version: '0.5.0',
        keyBoard: 'enUs',
        delay: 0,
        global: window,
        keyCodes: {
            enUs: { 'back':8,'ins':45,'del':46,'enter':13,'shift':16,'ctrl':17,'meta':224,
                'alt':18,'pause':19,'caps':20,'esc':27,'pgup':33,'pgdn':34,
                'end':35,'home':36,'left':37,'up':38,'right':39,'down':40,
                'printscr':44,'num0':96,'num1':97,'num2':98,'num3':99,'num4':100,
                'num5':101,'num6':102,'num7':103,'num8':104,'num9':105,
                'multiply':106,'add':107,'subtract':109,'decimal':110,
                'divide':111,'f1':112,'f2':113,'f3':114,'f4':115,'f5':116,
                'f6':117,'f7':118,'f8':119,'f9':120,'f10':121,'f11':122,
                'f12':123,'numlock':144,'scrolllock':145,'   ':9,' ':32,
                'tab':9,'space':32,'0':48,'1':49,'2':50,'3':51,'4':52,
                '5':53,'6':54,'7':55,'8':56,'9':57,')':48,'!':49,'@':50,
                '

	err = -ENOMEM;
	wh = kmalloc(sizeof(*wh) + nlen, GFP_NOFS);
	if (unlikely(!wh))
		goto out;

	err = 0;
	wh->wh_bindex = bindex;
	if (shwh)
		au_shwh_init_wh(wh, ino, d_type);
	str = &wh->wh_str;
	str->len = nlen;
	memcpy(str->name, name, nlen);
	hlist_add_head(&wh->wh_hash, au_name_hash(whlist, name, nlen));
	/* smp_mb(); */

out:
	return err;
}

static int append_deblk(struct au_vdir *vdir)
{
	int err;
	unsigned long ul;
	const unsigned int deblk_sz = vdir->vd_deblk_sz;
	union au_vdir_deblk_p p, deblk_end;
	unsigned char **o;

	err = -ENOMEM;
	o = au_krealloc(vdir->vd_deblk, sizeof(*o) * (vdir->vd_nblk + 1),
			GFP_NOFS, /*may_shrink*/0);
	if (unlikely(!o))
		goto out;

	vdir->vd_deblk = o;
	p.deblk = kmalloc(deblk_sz, GFP_NOFS);
	if (p.deblk) {
		ul = vdir->vd_nblk++;
		vdir->vd_deblk[ul] = p.deblk;
		vdir->vd_last.ul = ul;
		vdir->vd_last.p.deblk = p.deblk;
		deblk_end.deblk = p.deblk + deblk_sz;
		err = set_deblk_end(&p, &deblk_end);
	}

out:
	return err;
}

static int append_de(struct au_vdir *vdir, char *name, int nlen, ino_t ino,
		     unsigned int d_type

set testdir [file dirname $argv0]
source $testdir/tester.tcl

db eval {
  CREATE TABLE t1(a, b);
  INSERT INTO t1 VALUES(1, 'one');
  INSERT INTO t1 VALUES(2, 'two');
  INSERT INTO t1 VALUES(3, 'three');
}

set kwlist {
  abort
  after
  analyze
  asc
  attach
  before
  begin
  by
  cascade
  cast
  column
  conflict
  current_date
  current_time
  current_timestamp
  database
  deferred
  desc
  detach
  end
  each
  exclusive
  explain
  fail
  for
  glob
  if
  ignore
  immediate
  initially
  instead
  key
  like
  match
  of
  offset
  plan
  pragma
  query
  raise
  recursive
  regexp
  reindex
  release
  rename
  replace
  restrict
  rollback
  row
  savepoint
  temp
  temporary
  trigger
  vacuum
  view
  virtual
  with
  without
};
set exprkw {
  cast
  current_date
  current_time
  current_timestamp
  raise
}
foreach kw $kwlist {  
  do_test keyword1-$kw.1 {
    if {$kw=="if"} {
      db eval "CREATE TABLE \"$kw\"($kw $kw)"
    } else {
      db eval "CREATE TABLE ${kw}($kw $kw)"
    }
    db eval "INSERT INTO $kw VALUES(99)"
    db eval "INSERT INTO $kw SELECT a FROM t1"
    if {[lsearch $exprkw $kw]<0} {
      db eval "SELECT * FROM $kw ORDER BY $kw ASC"
    } else {
      db eval "SELECT * FROM $kw ORDER BY \"$kw\" ASC"
    }
  } {1 2 3 99}
  do_test keyword1-$kw.2 {
    if {$kw=="if"} {
      db eval "DROP TABLE \"$kw\

<div class="ttc" id="qio_8c_html_ad2b7b0e9eb6e217a36422de18570b4e3"><div class="ttname"><a href="qio_8c.html#ad2b7b0e9eb6e217a36422de18570b4e3">qio_printf</a></div><div class="ttdeci">ssize_t qio_printf(int fd, int timeoutms, const char *format,...)</div><div class="ttdoc">Formatted output to a file descriptor. </div><div class="ttdef"><b>Definition:</b> <a href="qio_8c_source.html#l00325">qio.c:325</a></div></div>
<div class="ttc" id="qio_8c_html_ab7ce64cc8cd837de47c91d1bdcb17cf5"><div class="ttname"><a href="qio_8c.html#ab7ce64cc8cd837de47c91d1bdcb17cf5">qio_gets</a></div><div class="ttdeci">ssize_t qio_gets(int fd, char *buf, size_t bufsize, int timeoutms)</div><div class="ttdoc">Read a line from a file descriptor into the buffer pointed to until either a terminating newline or E...</div><div class="ttdef"><b>Definition:</b> <a href="qio_8c_source.html#l00257">qio.c:257</a></div></div>
<div class="ttc" id="qio_8c_html_a2c00200ce1766b2b81dafd9b9f20f6d0"><div class="ttname"><a href="qio_8c.html#a2c00200ce1766b2b81dafd9b9f20f6d0">qio_puts</a></div><div class="ttdeci">ssize_t qio_puts(int fd, const char *str, int timeoutms)</div><div class="ttdoc">Writes the string and a trailing new

	// Clones a new service
	CloneService(request ServiceCloneRequest, serviceID *string) error

	// Deploy a new service
	DeployService(svc ServiceDeploymentRequest, serviceID *string) error

	// Update an existing service
	UpdateService(svc service.Service, _ *int) error

	// Migrate a service definition
	MigrateServices(request ServiceMigrationRequest, _ *int) error

	// Remove a service definition
	RemoveService(serviceID string, _ *int) error

	// Get a service from serviced
	GetService(serviceID string, svc *service.Service) error

	// Find a child service with the given name
	FindChildService(request FindChildRequest, svc *service.Service) error

	// Assign IP addresses to all services at and below the provided service
	AssignIPs(assignmentRequest addressassignment.AssignmentRequest, _ *int) (err error)

	// Get a list of tenant IDs
	GetTenantIDs(_ struct{}, tenantIDs *[]string) error

	//---------------------------------------------------------------------------
	//ServiceState CRUD

	// Schedule the given service to start
	StartService(request ScheduleServiceRequest, affected *int) error

	// Schedule the given service to restart
	RestartService(request ScheduleServiceRequest, affected *int) error

	// Schedule the given service to rebalance
	RebalanceService(request ScheduleServiceRequest, affected *int) error

	// Schedule the given service to stop
	StopService(request ScheduleServiceRequest, affected *int) error

	// Schedule the given service to pause
	PauseService(request ScheduleServiceRequest, affected *int) error

	// Stop a running instance of a service
	StopRunningInstance(request HostServiceRequest, _ *int) error

	// Wait for a particular service state
	WaitService(request WaitServiceRequest, _ *int) error

	// Computes the status of the service based on its service instances
	GetServiceStatus(serviceID string, status *[]service.Instance) error

	// Get logs for the given app
	GetServiceLogs(serviceID string, logs *string) error

	// Get logs for the given app
	GetServiceStateLogs(request ServiceStateRequest, logs *

input_driver = "xinput"
input_device = "Controller (Xbox One For Windows)"
input_device_display_name = "XBOX One Controller"

input_vendor_id = "1118"
input_product_id = "767"

input_b_btn = "0"
input_y_btn = "2"
input_select_btn = "7"
input_start_btn = "6"
input_up_btn = "h0up"
input_down_btn = "h0down"
input_left_btn = "h0left"
input_right_btn = "h0right"
input_a_btn = "1"
input_x_btn = "3"
input_l_btn = "4"
input_r_btn = "5"
input_l2_axis = "+4"
input_r2_axis = "+5"
input_l3_btn = "8"
input_r3_btn = "9"
input_l_x_plus_axis = "+0"
input_l_x_minus_axis = "-0"
input_l_y_plus_axis = "-1"
input_l_y_minus_axis = "+1"
input_r_x_plus_axis = "+2"
input_r_x_minus_axis = "-2"
input_r_y_plus_axis = "-3"
input_r_y_minus_axis = "+3"
input_menu_toggle_btn = "10"

input_b_btn_label = "A"
input_y_btn_label = "X"
input_select_btn_label = "View"
input_start_btn_label = "Menu"
input_up_btn_label = "D-Pad Up"
input_down_btn_label = "D-Pad Down"
input_left_btn_label = "D-Pad Left"
input_right_btn_label = "D-Pad Right"
input_a_btn_label = "B"
input_x_btn_label = "Y"
input_l_btn_label = "Left Bumper"
input_r_btn_label =

  var controller = {}

  controller.listaContatos = function(req, res) {
    
    Contato.find().populate('emergencia').exec()
    .then(
      function(contatos) {
         res.json(contatos); 
       },
       function(erro) {
         console.error(erro)
         res.status(500).json(erro);
       } 
    );    
  };
  
  controller.obtemContato = function(req, res) {

    var _id = req.params.id;
    Contato.findById(_id).exec()
    .then(
      function(contato) {
        if (!contato) throw new Error("Contato não encontrado");
        res.json(contato)     
      }, 
      function(erro) {
        console.log(erro);
        res.status(404).json(erro)
      }
    );    
  };

  controller.removeContato = function(req, res) { 

    var _id = sanitize(req.params.id);

    Contato.remove({"_id" : _id}).exec()
    .then(
      function() {
        res.end();  
      }, 
      function(erro) {
        return console.error(erro);
      }
    );
  };

  controller.salvaContato = function(req, res) {

    var _id = req.body._id;

    var dados = { 
      "nome" : req.body.nome, 
      "email" : req.body.email, 
      "emergencia" : req.body.emergencia || null
    };

    if(_id) {
     Contato.findByIdAndUpdate(_id, dados).exec()
     .then(
      function(contato) {
        res.json(contato);
      }, 
      function(erro) {
        console.error(erro)
        res.status(500).json(erro);
      }
     );
    } else {
      Contato.create(dados)
      .then(
        function(contato)

	this.SetMessage = function (message) { 
		this.message = message; 
		this.background.style.display = "inline";
		this.logoImage.style.display = "inline";
		this.progressFrame.style.display = "none";
		this.progressBar.style.display = "none";			
		this.Update();
	}

	this.Clear = function() {
		this.background.style.display = "none";
		this.logoImage.style.display = "none";
		this.progressFrame.style.display = "none";
		this.progressBar.style.display = "none";
	}

	this.Update = function() {
		this.background.style.top = this.dom.offsetTop + 'px';
		this.background.style.left = this.dom.offsetLeft + 'px';
		this.background.style.width = this.dom.offsetWidth + 'px';
		this.background.style.height = this.dom.offsetHeight + 'px';

		var logoImg = new Image();
		logoImg.src = this.logoImage.src;
		var progressFrameImg = new Image();
		progressFrameImg.src = this.progressFrame.src;

		this.logoImage.style.top = this.dom.offsetTop + (this.dom.offsetHeight * 0.5 - logoImg.height * 0.5) + 'px';
		this.logoImage.style.left = this.dom.offsetLeft + (this.dom.offsetWidth * 0.5 - logoImg.width * 0.5) + 'px';
		this.logoImage.style.width = logoImg.width+'px';
		this.logoImage.style.height = logoImg.height+'px';

		this.progressFrame.style.top = this.dom.offsetTop + (this.dom.offsetHeight * 0.5 + logoImg.height * 0.5 + 10) + 'px';
		this.progressFrame.style.left = this.dom.offsetLeft + (this.dom.offsetWidth * 0.5 - progressFrameImg.width * 0.5) + 'px';
		this.progressFrame.width = progressFrame

from mailchimp3.baseapi import BaseApi


class BatchWebhooks(BaseApi):
    """
    Manage webhooks for batch operations.
    """
    def __init__(self, *args, **kwargs):
        """
        Initialize the endpoint
        """
        super(BatchWebhooks, self).__init__(*args, **kwargs)
        self.endpoint = 'batch-webhooks'
        self.batch_webhook_id = None


    def create(self, data):
        """
        Configure a webhook that will fire whenever any batch request
        completes processing.

        :param data: The request body parameters
        :type data: :py:class:`dict`
        data = {
            "url": string*
        }
        """
        if 'url' not in data:
            raise KeyError('The batch webhook must have a valid url')
        response = self._mc_client._post(url=self._build_path(), data=data)
        if response is not None:
            self.batch_webhook_id = response['id']
        else:
            self.batch_webhook_id = None
        return response


    def all(self, get_all=False, **queryparams):
        """
        Get all webhooks that have been configured for batches.

        :param get_all: Should the query get all results
        :type get_all: :py:class:`bool`
        :param queryparams: The query string parameters
        queryparams['fields'] = []
        queryparams['exclude_fields'] = []
        queryparams['count'] = integer
        queryparams['offset'] = integer
        """
        self.batch_webhook_id = None
        if get_all:
            return self._iterate(url=self._build_path(), **queryparams)
        else:
            return self._mc_client._get(url=self._build_path(), **queryparams)


    def get(self, batch_webhook_id, **queryparams):
        """
        Get information about a specific batch webhook.

        :param batch_webhook_id: The unique id for the batch webhook.
        :

<ol>
  <li>
    <p>Some templates may require additional extensions to be installed to your organization. The demo generation process checks to see if these extensions are already installed. If the extension is already installed, a green check will be displayed in front of the extension name. If the extension is <strong>not</strong> installed, select the empty check boxes to install the extension(s) to your account. When ready, click on <strong>Create Project</strong> button.</p>

    <blockquote>
      <p>If you want to manually install the extensions,  click on the provided link for a specific extension, which takes you to the extension’s page on Azure DevOps Marketplace. From there, you can install the extension.</p>
    </blockquote>
  </li>
  <li>
    <p>Your project may take a couple of minutes for the Demo Generator to provision. When it completes, you will be provided with a link to the demo project.</p>
  </li>
</ol>

<p><img src="_img/projectcreated.png" alt="Image of Azure DevOps Demo Generator project created screen" /></p>

<ol>
  <li>Select the link to go to the new demo Azure DevOps Services project and confirm it was successfully provisioned.</li>
</ol>

<p><img src="_img/projecthomepage.png" alt="Image of Azure DevOps Demo Generator provision confirmation screen" /></p>

<blockquote>
  <p>You must provide your own information such as URLs, logins, password, and others for the configuration of demo endpoints that use Azure resources.</p>
</blockquote>

<hr />

<p>Next: <a href="/About-Azure-DevOps-Demo-Generator/Build-your-own-template">Building your own template</a></p>


      
    </div>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/anchor-js/4.1.0/anchor.min.js" integrity="sha256-lZaRhKri35AyJSypXXs4o6OPFTbTmUoltBbDCbdzegg=" crossorigin="anonymous"></script>
    <script

class check_configuration_ssl_allow_invalid_cert():
    """
    check_configuration_ssl_allow_invalid_cert:
    Bypasses the validation checks for TLS/SSL certificates on other servers in
    the cluster and allows the use of invalid certificates. When using the 
    allowInvalidCertificates setting, MongoDB logs as a warning the use of the 
    invalid certificate.

    MongoDB versions 2.6.4 and above, check the net.ssl.weakCertificateValidation configuration option.
    """
    # References:
    # https://docs.mongodb.org/v2.6/reference/configuration-options/#net.ssl.allowInvalidCertificates

    TITLE    = 'Allow Invalid Certificate'
    CATEGORY = 'Configuration'
    TYPE     = 'configuration_file'
    SQL         = None # SQL not needed... because this is NoSQL.

    verbose = False
    skip    = False
    result  = {}

    db      = None

    def do_check(self, configuration_file):
        option         = None
        version_number = self.db.server_info()['version']
        
        if LooseVersion(version_number) >= LooseVersion("2.6.4"):
            option = 'net.ssl.allowInvalidCertificates'
            value  = helper.get_yaml_config_value(configuration_file, option)

            if None == value:
                self.result['level']  = 'GREEN'
                self.result['output'] = '%s not found, not enabled.' % (option)
            elif False == value:
                self.result['level']  = 'GREEN'
                self.result['output'] = '%s is (%s) not enabled.' % (option, value)
            else:
                self.result['level']  = 'RED'
                self.result['output'] = '%s is (%s) enabled.' % (option, value)

        else:
            self.result['level']  = 'GRAY'
            self.result['output'] = 'This check does not apply to MongoDB versions below 2.6.4.'

        return self.result

    def __init__(self, parent):
        print('Performing check:

void EllipsePosition::setD() {
    // set (s,t) to angle corresponding to diangle
    // see: http://www.freesteel.co.uk/wpblog/2009/06/encoding-2d-angles-without-trigonometry/
    // see: http://www.anderswallin.net/2010/07/radians-vs-diamondangle/
    // return P2( (a < 2 ? 1-a : a-3),
    //           (a < 3 ? ((a > 1) ? 2-a : a) : a-4)
    double d = diangle;
    assert( !std::isnan(d) );
    while ( d > 4.0 ) // make d a diangle in [0,4]
        d -= 4.0;
    while ( d < 0.0)
        d+=4.0;
        
    assert( d >= 0.0 && d <= 4.0 ); // now we should be in [0,4]
    Point p( (d < 2 ? 1-d : d-3) ,
             (d < 3 ? ((d > 1) ? 2-d : d) : d-4) );

    // now we have a vector pointing in the right direction
    // but it is not normalized
    p.normalize();
    s = p.x;
    t = p.y;
    assert( this->isValid() );
}

// check that s and t values are OK
bool EllipsePosition::isValid() const {
    if ( isZero_tol( square(s) + square(t) - 1.0 ) )
        return true;
    else {
        std::cout << " EllipsePosition=" << *this << "\n";
        std::cout << " square(s) + square(t) - 1.0 = " << square(s) + square(t) - 1.0 << " !!\n";
        return false;
    }
}

EllipsePosition& EllipsePosition::operator=(const EllipsePosition &pos)  {
    s = pos.s;
    t = pos.t;
    diangle = pos.diangle;


<xmax>530</xmax>
<ymax>817</ymax>
</bndbox>
<lm>
<x1>501.929</x1>
<y1>781.946</y1>
<x2>521.661</x2>
<y2>782.326</y2>
<x3>510.656</x3>
<y3>786.5</y3>
<x4>503.446</x4>
<y4>800.161</y4>
<x5>515.589</x5>
<y5>799.402</y5>
<visible>0</visible>
<blur>0.66</blur>
</lm>
<has_lm>1</has_lm>
</object>
<object>
<name>face</name>
<pose>Unspecified</pose>
<truncated>1</truncated>
<difficult>0</difficult>
<bndbox>
<xmin>563</xmin>
<ymin>717</ymin>
<xmax>621</xmax>
<ymax>787</ymax>
</bndbox>
<lm>
<x1>566.75</x1>
<y1>738.241</y1>
<x2>589.29</x2>
<y2>740.893</y2>
<x3>571.17</x3>
<y3>752.826</y3>
<x4>574.263</x4>
<y4>766.527</y4>
<x5>588.406</x5>
<y5>766.969</y5>
<visible>0</visible>
<blur>0.66</blur>
</lm>
<has_lm>1</has_lm>
</object>
<object>
<name>face</name>
<pose>Unspecified</pose>
<truncated>1</truncated>
<difficult>0</difficult>
<bndbox>
<xmin>771</xmin>
<ymin

https://github.com/aymericdamien/TopDeepLearning
https://github.com/hunkim/DeepLearningZeroToAll
https://github.com/nlintz/TensorFlow-Tutorials/
https://github.com/tensorflow/tensorflow
https://github.com/BVLC/caffe
https://github.com/jcjohnson/neural-style
https://github.com/google/deepdream
https://github.com/fchollet/keras
https://github.com/Rochester-NRT/RocAlphaGo
https://github.com/karpathy/char-rnn
https://github.com/hunkim/word-rnn-tensorflow
https://github.com/karpathy/neuraltalk
https://github.com/tflearn/tflearn
https://github.com/tensorflow/playground
https://github.com/pkmital/tensorflow_tutorials
https://github.com/openai/gym
https://github.com/hunkim/DeepLearningStars
https://github.com/ujjwalkarn/Machine-Learning-Tutorials
https://github.com/ritchieng/tensorflow-aws-ami
https://github.com/nivwusquorum/tensorflow-deepq
https://github.com/sjchoi86/Tensorflow-101
https://github.com/donnemartin/data-science-ipython-notebooks
https://github.com/karpathy/convnetjs
https://github.com/taizan/PaintsChainer
https://github.com/pytorch/pytorch
https://github.com/baidu/Paddle
https://github.com/zsdonghao/tensorlayer
https://github.com/Theano/Theano
https://github.com/Microsoft/CNTK
https://github.com/torch/torch7
https://github.com/dmlc/mxnet
https://github.com/awjuliani/DeepRL-Agents
https://github.com/tiny-dnn/tiny-dnn
https://github.com/caffe2/caffe2
https://github.com/Nerv

   /* H = OMAC_1K(header) */
   zeromem(buf, MAXBLOCKSIZE);
   buf[blklen - 1] = 1;

   if ((err = omac_init(&eax->headeromac, cipher, key, keylen)) != CRYPT_OK) {
      goto LBL_ERR; 
   }

   /* omac the [1]_n */
   if ((err = omac_process(&eax->headeromac, buf, blklen)) != CRYPT_OK) {
      goto LBL_ERR; 
   }
   /* omac the header */
   if (headerlen != 0) {
      if ((err = omac_process(&eax->headeromac, header, headerlen)) != CRYPT_OK) {
          goto LBL_ERR; 
      }
   }

   /* note we don't finish the headeromac, this allows us to add more header later */

   /* setup the CTR mode */
   if ((err = ctr_start(cipher, eax->N, key, keylen, 0, CTR_COUNTER_BIG_ENDIAN, &eax->ctr)) != CRYPT_OK) {
      goto LBL_ERR; 
   }

   /* setup the OMAC for the ciphertext */
   if ((err = omac_init(&eax->ctomac, cipher, key, keylen)) != CRYPT_OK) { 
      goto LBL_ERR; 
   }

   /* omac [2]_n */
   zeromem(buf, MAXBLOCKSIZE);
   buf[blklen-1] = 2;
   if ((err = omac_process(&eax->ctomac, buf, blklen)) != CRYPT_OK) {
      goto LBL_ERR; 
   }

   err = CRYPT_OK;
LBL_ERR:
#ifdef LTC_CLEAN_STACK
   zeromem(buf,  MAXBLOCKSIZE);
   zeromem(omac, sizeof(*omac));
#endif

   XFREE(omac);
   XFREE(buf);

   return err;
}

#endif 

/* $Source: /cvs/libtom/libtom

// RUN: %target-run-simple-swift
// REQUIRES: executable_test

// FIXME: the test is too slow when the standard library is not optimized.
// REQUIRES: optimized_stdlib

import StdlibUnittest
import StdlibCollectionUnittest

var SliceTests = TestSuite("Collection")

let prefix: [Int] = [-9999, -9998, -9997]
let suffix: [Int] = []

func makeCollection(elements: [OpaqueValue<Int>])
  -> MutableRangeReplaceableBidirectionalSlice<DefaultedMutableRangeReplaceableBidirectionalCollection<OpaqueValue<Int>>> {
  var baseElements = prefix.map(OpaqueValue.init)
  baseElements.append(contentsOf: elements)
  baseElements.append(contentsOf: suffix.map(OpaqueValue.init))
  let base = DefaultedMutableRangeReplaceableBidirectionalCollection(elements: baseElements)
  let startIndex = base.index(
    base.startIndex,
    offsetBy: numericCast(prefix.count))
  let endIndex = base.index(
    base.startIndex,
    offsetBy: numericCast(prefix.count + elements.count))
  return MutableRangeReplaceableBidirectionalSlice(
    base: base,
    bounds: startIndex..<endIndex)
}

func makeCollectionOfEquatable(elements: [MinimalEquatableValue])
  -> MutableRangeReplaceableBidirectionalSlice<DefaultedMutableRangeReplaceableBidirectionalCollection<MinimalEquatableValue>> {
  var baseElements = prefix.map(MinimalEquatableValue.init)
  baseElements.append(contentsOf: elements)
  baseElements.append(contentsOf: suffix.map(MinimalEquatableValue.init))
  let base = DefaultedMutableRangeReplaceableBidirectionalCollection(elements: baseElements)
  let startIndex = base.index(
    base.startIndex,
    offsetBy: numericCast(prefix.count))
  let endIndex = base.index(
    base.startIndex,
    offsetBy: numericCast(prefix.count + elements.count))
  return MutableRangeReplace

                            // currently being displayed.
                            if(!event.getMessageId().equals(m.getId()))
                                return false;

                            // If the reaction is an Emote we get the Snowflake,
                            // otherwise we get the unicode value.
                            String re = event.getReaction().getReactionEmote().isEmote()
                                ? event.getReaction().getReactionEmote().getId()
                                : event.getReaction().getReactionEmote().getName();

                            // If the value we got is not registered as a button to
                            // the ButtonMenu being displayed we return false.
                            if(!choices.contains(re))
                                return false;

                            // Last check is that the person who added the reaction
                            // is a valid user.
                            return isValidUser(event.getUser(), event.isFromGuild() ? event.getGuild() : null);
                        }, (MessageReactionAddEvent event) -> {
                            // What happens next is after a valid event
                            // is fired and processed above.

                            // Preform the specified action with the ReactionEmote
                            action.accept(event.getReaction().getReactionEmote());
                            finalAction.accept(m);
                        }, timeout, unit, () -> finalAction.accept(m));
                    });
                }
            }
        });
    }

    // Generates a ButtonMenu message
    private Message getMessage()
    {
        MessageBuilder mbuilder = new MessageBuilder();
        if(text!=null)
            mbuilder.append(text);
        if(description!=null)
            mbuilder.setEmbed(new EmbedBuilder().setColor(color).setDescription(description).build());
        return mbuilder.build();
    }

    /**
     * The {@link com.jagrosh.jdautilities.menu.Menu.Builder Menu.Builder} for
     * a {@link com.jagrosh.jdautilities.menu.ButtonMenu ButtonMenu}.
     *
     * @author John Grosh
     */
    public static class Builder extends Menu.Builder<Builder, ButtonMenu>
    {
        

    "type" : "gradient"
  },
  "output" : {
    "type" : "png",
    "filename" : "ff_stereo_hfov_45_0-v2"
  },
  "pano" : {
    "width" : 2048,
    "height" : 1024,
    "pad_top" : 0,
    "pad_bottom" : 0,
    "hfov" : 45,
    "blend_zenith" : true,
    "blend_nadir" : true,
    "proj" : "stereographic",
    "global_yaw" : 0,
    "global_pitch" : 0,
    "global_roll" : 0,
    "inputs" : [
      {
        "width" : 1920,
        "height" : 1080,
        "hfov" : 275.871,
        "filename" : "procedural:checker(size=120,color1=000000,color2=ee2222,color3=222222)",
        "proj" : "ff_fisheye",
        "yaw" : 0,
        "pitch" : 7.03159,
        "roll" : -50.4692,
        "crop_left" : 341,
        "crop_right" : 1547,
        "crop_top" : -60,
        "crop_bottom" : 1142,
        "viewpoint_model" : "hugin",
        "translation_x" : 0,
        "translation_y" : 0,
        "translation_z" : 0,
        "viewpoint_pan" : 0,
        "viewpoint_tilt" : 0,
        "ev" : 0,
        "red_corr" : 1,
        "blue_corr" : 1,
        "response" : "emor",
        "emor_a" : 0,
        "emor_b" : 0,
        "emor_c" : 0,
        "emor_d" : 0,
        "emor_e" : 0,
        "gamma" : 1,
        "relative_to_cro

    public static bool IsXREnabled() {
      #if UNITY_2017_2_OR_NEWER
      return XRSettings.enabled;
      #else
      return VRSettings.enabled;
      #endif
    }

    public static bool IsXRDevicePresent() {
      #if UNITY_2020_1_OR_NEWER
      return XRSettings.isDeviceActive;
      #elif UNITY_2017_2_OR_NEWER
      return XRDevice.isPresent;
      #else
      return VRDevice.isPresent;
      #endif
    }

    static bool outputPresenceWarning = false;
    public static bool IsUserPresent(bool defaultPresence = true) {
      #if UNITY_2019_3_OR_NEWER
        var devices = new List<InputDevice>();
        InputDevices.GetDevicesWithCharacteristics(InputDeviceCharacteristics.HeadMounted, devices);
        if (devices.Count == 0 && !outputPresenceWarning) {
          Debug.LogWarning("No head-mounted devices found. Possibly no HMD is available to the XR system.");
          outputPresenceWarning = true;
        }
        if (devices.Count != 0) {
          var device = devices[0];
          if (device.TryGetFeatureValue(CommonUsages.userPresence, out var userPresent)) {
            return userPresent;
          }
        }
      #elif UNITY_2017_2_OR_NEWER
        var userPresence = XRDevice.userPresence;
        if (userPresence == UserPresenceState.Present) {
          return true;
        } else if (!outputPresenceWarning && userPresence == UserPresenceState.Unsupported) {
          Debug.LogWarning("XR UserPresenceState unsupported (XR support is probably disabled).");
          outputPresenceWarning = true;
        }
      #else
        if (!outputPresenceWarning){
          Debug.LogWarning("XR UserPresenceState is only supported in 2017.2 and newer.");
          outputPresenceWarning = true;
        }
      #endif
      return defaultPresence;
    }

    public static Vector3 GetXRNodeCenterEyeLocalPosition() {


			jp = mock(JvmFormalParameter.class);
			when(jp.getName()).thenReturn("firstarg");
			ref = getType(getParseHelper(), "java.lang.String");
			when(jp.getParameterType()).thenReturn(ref);
			JvmAnnotationType annotationType = mock(JvmAnnotationType.class);
			when(annotationType.getQualifiedName()).thenReturn(DefaultValue.class.getName());
			JvmAnnotationReference annotationRef = mock(JvmAnnotationReference.class);
			when(annotationRef.getAnnotation()).thenReturn(annotationType);
			when(jp.getAnnotations()).thenReturn(ECollections.singletonEList(annotationRef));
			when(jp.eIsSet(ArgumentMatchers.any())).thenAnswer((invocation) -> {
				if (Objects.equals(TypesPackage.Literals.JVM_ANNOTATION_TARGET__ANNOTATIONS,
						invocation.getArguments()[0])) {
					return Boolean.TRUE;
				}
				return Boolean.FALSE;
			});
			this.jvmParameters.add(jp);

			jp = mock(JvmFormalParameter.class);
			when(jp.getName()).thenReturn("secondarg");
			ref = getType(getParseHelper(), "int");
			when(jp.getParameterType()).thenReturn(ref);
			when(jp.getAnnotations()).thenReturn(ECollections.<JvmAnnotationReference>emptyEList());
			this.jvmParameters.add(jp);

			jp = mock(JvmFormalParameter.class);
			when(jp.getName()).thenReturn("thirdarg");
			ref = getType(getParseHelper(), "float");
			when(jp.getParameterType()).thenReturn(ref);
			annotationType = mock(JvmAnnotationType.class);
			when(annotationType.getQualifiedName()).thenReturn(DefaultValue.class.getName());
			annotationRef = mock(JvmAnnotationReference.class);
			when(annotationRef.getAnnotation()).thenReturn(annotationType);
			when(jp.getAnnotations()).thenReturn(ECollections.singletonEList(annotationRef));
			when(jp.eIsSet(ArgumentMatchers.any())).

//========= Copyright Valve Corporation, All rights reserved. ============//
//
// Purpose: 
//
//=============================================================================//

#ifndef C_PIXEL_VISIBILITY_H
#define C_PIXEL_VISIBILITY_H
#ifdef _WIN32
#pragma once
#endif


const float PIXELVIS_DEFAULT_PROXY_SIZE = 2.0f;
const float PIXELVIS_DEFAULT_FADE_TIME = 0.0625f;

typedef int pixelvis_handle_t;
struct pixelvis_queryparams_t
{
	pixelvis_queryparams_t()
	{
		bSetup = false;
	}

	void Init( const Vector &origin, float proxySizeIn = PIXELVIS_DEFAULT_PROXY_SIZE, float proxyAspectIn = 1.0f, float fadeTimeIn = PIXELVIS_DEFAULT_FADE_TIME )
	{
		position = origin;
		proxySize = proxySizeIn;
		proxyAspect = proxyAspectIn;
		fadeTime = fadeTimeIn;
		bSetup = true;
		bSizeInScreenspace = false;
	}

	Vector		position;
	float		proxySize;
	float		proxyAspect;
	float		fadeTime;
	bool		bSetup;
	bool		bSizeInScreenspace;
};

float PixelVisibility_FractionVisible( const pixelvis_queryparams_t &params, pixelvis_handle_t *queryHandle );
float StandardGlowBlend( const pixelvis_queryparams_t &params, pixelvis_handle_t *queryHandle, int rendermode, int renderfx, int alpha, float *pscale );

void PixelVisibility_ShiftVisibilityViews( int iSourceViewID, int iDestViewID ); //mainly needed by portal mod to avoid a pop in visibility when teleporting the player

void PixelVisibility_EndCurrentView();
void PixelVisibility_EndScene();
float GlowSightDistance( const Vector &glowOrigin, bool bShouldTrace );

// returns true if the video hardware is doing the tests, false is traceline is doing so.
bool PixelVisibility_IsAvailable();



/* Begin PBXGroup section */
		713A345D86B5BC86D158B68F /* Frameworks */ = {
			isa = PBXGroup;
			children = (
				3F045DD4639F4F9836B1E8D6 /* Pods_Bob.framework */,
			);
			name = Frameworks;
			sourceTree = "<group>";
		};
		9CB57B9B45EC322A11ED8865 /* Pods */ = {
			isa = PBXGroup;
			children = (
				DA7129FC389066F3A2227458 /* Pods-Bob.debug.xcconfig */,
				3A08EDDF832035FD57B6A226 /* Pods-Bob.release.xcconfig */,
			);
			path = Pods;
			sourceTree = "<group>";
		};
		C90BE30A239F38EB00ADE88B /* BobHelper */ = {
			isa = PBXGroup;
			children = (
				C90BE30B239F38EB00ADE88B /* AppDelegate.h */,
				C90BE30C239F38EB00ADE88B /* AppDelegate.m */,
				C90BE30E239F38EB00ADE88B /* ViewController.h */,
				C90BE30F239F38EB00ADE88B /* ViewController.m */,
				C90BE311239F38EC00ADE88B /* Assets.xcassets */,
				C90BE313239F38EC00ADE88B /* Main.storyboard */,
				C90BE316239F38EC00ADE88B /* Info.plist */,
				C90BE317239F38EC00ADE88B /* main.m */,
				C90BE319239F38EC00ADE88B /* BobHelper.entitlements */,
			);
			path = BobHelper;
			sourceTree = "<group>";
		};
		C9889F5E23AA0FC700C2D127 /* Google */ = {
			isa = PBXGroup;
			children = (
				C9889F5F23AA0FDA00C2D127 /* GoogleTranslate.h */,
				C9889F6023AA0FDA00

    /**
     * @covers \Magento\Paypal\Model\Hostedpro\Request::setAmount()
     * @param $subtotal
     * @param $total
     * @param $tax
     * @param $shipping
     * @param $discount
     * @dataProvider amountWithoutTaxDataProvider
     */
    public function testSetAmountWithoutTax($total, $subtotal, $tax, $shipping, $discount)
    {
        $expectation = [
            'subtotal' => $subtotal,
            'total' => $total,
            'tax' => $tax,
            'shipping' => $shipping,
            'discount' => abs($discount)
        ];

        static::assertFalse($this->taxData->priceIncludesTax());

        $payment = $this->getMockBuilder(Payment::class)
            ->disableOriginalConstructor()
            ->getMock();

        $order = $this->getMockBuilder(Order::class)
            ->disableOriginalConstructor()
            ->getMock();

        $payment->expects(static::once())
            ->method('getBaseAmountAuthorized')
            ->willReturn($total);

        $order->expects(static::once())
            ->method('getPayment')
            ->willReturn($payment);

        $order->expects(static::once())
            ->method('getBaseDiscountAmount')
            ->willReturn($discount);

        $order->expects(static::once())
            ->method('getBaseTaxAmount')
            ->willReturn($tax);

        $order->expects(static::once())
            ->method('getBaseShippingAmount')
            ->willReturn($shipping);

        $order->expects(static::once())
            ->method('getBaseSubtotal')
            ->willReturn($subtotal);
        $this->_model->setAmount($order);

        static::assertEquals($expectation, $this->_model->getData());
    }

    /**
     * @covers \Magento\Paypal\Model\Hostedpro\Request::setAmount()
     * @param $total
     * @param $subtotal
     * @param $tax

    // Argument vector
    vector<MxArray> rhs(prhs, prhs+nrhs);
    int id = rhs[0].toInt();
    string method(rhs[1].toString());

    // Constructor is called. Create a new object from argument
    if (method == "new") {
        nargchk(nrhs>=2 && (nrhs%2)==0 && nlhs<=1);
        BinaryDescriptor::Params parameters;
        for (int i=2; i<nrhs; i+=2) {
            string key(rhs[i].toString());
            if (key == "KSize")
                parameters.ksize_ = rhs[i+1].toInt();
            else if (key == "NumOfOctave")
                parameters.numOfOctave_ = rhs[i+1].toInt();
            else if (key == "ReductionRatio")
                parameters.reductionRatio = rhs[i+1].toInt();
            else if (key == "WidthOfBand")
                parameters.widthOfBand_ = rhs[i+1].toInt();
            else
                mexErrMsgIdAndTxt("mexopencv:error",
                    "Unrecognized option %s", key.c_str());
        }
        obj_[++last_id] = BinaryDescriptor::createBinaryDescriptor(parameters);
        plhs[0] = MxArray(last_id);
        mexLock();
        return;
    }

    // Big operation switch
    Ptr<BinaryDescriptor> obj = obj_[id];
    if (obj.empty())
        mexErrMsgIdAndTxt("mexopencv:error", "Object not found id=%d", id);
    if (method == "delete") {
        nargchk(nrhs==2 && nlhs==0);
        obj_.erase(id);
        mexUnlock();
    }
    else if (method == "clear") {
        nargchk(nrhs==2 && nlhs==0);
        obj->clear();
    }
    else if (method == "load") {
        nargchk(nrhs>=3 &&

*>
*> If the elements of x are all zero and alpha is real, then tau = 0
*> and H is taken to be the unit matrix.
*>
*> Otherwise  1 <= real(tau) <= 2  and  abs(tau-1) <= 1 .
*> \endverbatim
*
*  Arguments:
*  ==========
*
*> \param[in] N
*> \verbatim
*>          N is INTEGER
*>          The order of the elementary reflector.
*> \endverbatim
*>
*> \param[in,out] ALPHA
*> \verbatim
*>          ALPHA is COMPLEX
*>          On entry, the value alpha.
*>          On exit, it is overwritten with the value beta.
*> \endverbatim
*>
*> \param[in,out] X
*> \verbatim
*>          X is COMPLEX array, dimension
*>                         (1+(N-2)*abs(INCX))
*>          On entry, the vector x.
*>          On exit, it is overwritten with the vector v.
*> \endverbatim
*>
*> \param[in] INCX
*> \verbatim
*>          INCX is INTEGER
*>          The increment between elements of X. INCX > 0.
*> \endverbatim
*>
*> \param[out] TAU
*> \verbatim
*>          TAU is COMPLEX
*>          The value tau.
*> \endverbatim
*
*  Authors:
*  ========
*
*> \author Univ. of Tennessee 
*> \author Univ. of California Berkeley 
*> \author Univ. of Colorado Denver 
*> \author NAG Ltd. 
*
*> \date November 2011
*
*> \ingroup complexOTHERauxiliary
*
*  =====================================================================
      SUBROUTINE CLARFG( N, ALPHA, X, INCX, TAU )
*
*  -- LAPACK auxiliary routine (version 3.4.0) --
*  -- LAPACK is a software package provided by Univ. of Tennessee,    --
*  -- Univ. of California Berkeley, Univ. of Colorado Denver and NAG Ltd..--
*     November 2011
*
*     .. Scalar Arguments ..
      INTEGER            INCX, N


#include <cstddef>
#include <boost/system/error_code.hpp>
#include <boost/asio/detail/socket_types.hpp>

#include <boost/asio/detail/push_options.hpp>

namespace boost {
namespace asio {
namespace detail {
namespace descriptor_ops {

// Descriptor state bits.
enum
{
  // The user wants a non-blocking descriptor.
  user_set_non_blocking = 1,

  // The descriptor has been set non-blocking.
  internal_non_blocking = 2,

  // Helper "state" used to determine whether the descriptor is non-blocking.
  non_blocking = user_set_non_blocking | internal_non_blocking,

  // The descriptor may have been dup()-ed.
  possible_dup = 4
};

typedef unsigned char state_type;

template <typename ReturnType>
inline ReturnType error_wrapper(ReturnType return_value,
    boost::system::error_code& ec)
{
  ec = boost::system::error_code(errno,
      boost::asio::error::get_system_category());
  return return_value;
}

BOOST_ASIO_DECL int open(const char* path, int flags,
    boost::system::error_code& ec);

BOOST_ASIO_DECL int close(int d, state_type& state,
    boost::system::error_code& ec);

BOOST_ASIO_DECL bool set_user_non_blocking(int d,
    state_type& state, bool value, boost::system::error_code& ec);

BOOST_ASIO_DECL bool set_internal_non_blocking(int d,
    state_type& state, bool value, boost::system::error_code& ec);

typedef iovec buf;

BOOST_ASIO_DECL std::size_t sync_read(int d, state_type state, buf* bufs,
    std::size_t count, bool all_empty, boost::system::error_code& ec);

BOOST_ASIO_DECL bool non_blocking_read(int d, buf* bufs, std::size_t count,

/*

    These files are distributed with PhotoFlow - http://aferrero2707.github.io/PhotoFlow/

 */


#ifndef CACHE_BUFFER_H
#define CACHE_BUFFER_H

#include <math.h>

#include <string>
#include <list>
#include <vector>
#include <iostream>
#include <fstream>


#include <vips/vips.h>
//#include <vips/vips>

#include "pftypes.hh"

#include "format_info.hh"

#include "property.hh"

#include "imagepyramid.hh"


namespace PF 
{

  class CacheBuffer
  {
    // Image to be cached
    VipsImage* image;
    // Image associate to the disk buffer
    VipsImage* cached;

    ImagePyramid pyramid;

    std::string filename;
    int fd;
    guchar* memarray;
    bool memarray_assigned;

    // Flag indicating if the cache buffer has already been initialized
    // Used by the layer manager to write buffers upon image loading/exporting
    bool initialized;

    //Flag indicating if the processing is completed
    bool completed;

    // Coordinates of the tile being processed
    int step_x, step_y;

    void step_cb(int x0, int y0, guchar* buf);

  public:
    CacheBuffer();

    virtual ~CacheBuffer()
    {
      if( cached )
        PF_UNREF( cached, "~CacheBuffer() cached image unref" );
    }

    bool is_initialized() { return initialized; }
    void set_initialized( bool flag ) { initialized = flag; }

    VipsImage* get_image() { return image; }
    void set_image( VipsImage* img ) { image = img; }

    ImagePyramid& get_pyramid() { return pyramid; }

    void reset( bool reinitialize=false );
    bool is_completed() { return completed; }

    // Save data tile-by-tile
    void step();

    // Save all data to file
    void write();


		<id name="conceptSourceId" type="java.lang.Integer" column="concept_source_id" unsaved-value="0">
			<generator class="native">
				<param name="sequence">concept_reference_source_concept_source_id_seq</param>
			</generator>
		</id>

		<property name="uuid" type="java.lang.String"
			column="uuid" length="38" unique="true" />

		<property name="name" type="java.lang.String"
			column="name" length="50" not-null="true" />
		<property name="description" type="java.lang.String"
			column="description" length="1024" not-null="true" />
		<property name="hl7Code" type="java.lang.String"
			column="hl7_code" length="50" />
		<property name="uniqueId" type="java.lang.String"
				  column="unique_id" length="250" unique="true" />

		<property name="dateCreated" type="java.util.Date"
			column="date_created" not-null="true" length="19" />
		<property name="retired" type="boolean" column="retired" not-null="true"/>
		<property name="dateRetired" type="java.util.Date"
			column="date_retired" length="19" />
		<property name="retireReason" type="java.lang.String"
			column="retire_reason" length="255" />

		<!-- Associations -->
		<!-- bi-directional many-to-one association to User -->
		<many-to-one name="creator" class="org.openmrs.User"
			not-null="true">
			<column name="creator" />
		</many-to-one>
		
		<many-to-one name="retiredBy" class="org.openmrs.User"
			column="retired_by" />

		<many-to-one name="changedBy" class="org.openmrs.User" column="changed_by"/>
		<property name="dateChanged" type="java.util.

#define MAVLINK_MSG_ID_LED_CONTROL_CRC 72
#define MAVLINK_MSG_ID_186_CRC 72

#define MAVLINK_MSG_LED_CONTROL_FIELD_CUSTOM_BYTES_LEN 24

#if MAVLINK_COMMAND_24BIT
#define MAVLINK_MESSAGE_INFO_LED_CONTROL { \
    186, \
    "LED_CONTROL", \
    6, \
    {  { "target_system", NULL, MAVLINK_TYPE_UINT8_T, 0, 0, offsetof(mavlink_led_control_t, target_system) }, \
         { "target_component", NULL, MAVLINK_TYPE_UINT8_T, 0, 1, offsetof(mavlink_led_control_t, target_component) }, \
         { "instance", NULL, MAVLINK_TYPE_UINT8_T, 0, 2, offsetof(mavlink_led_control_t, instance) }, \
         { "pattern", NULL, MAVLINK_TYPE_UINT8_T, 0, 3, offsetof(mavlink_led_control_t, pattern) }, \
         { "custom_len", NULL, MAVLINK_TYPE_UINT8_T, 0, 4, offsetof(mavlink_led_control_t, custom_len) }, \
         { "custom_bytes", NULL, MAVLINK_TYPE_UINT8_T, 24, 5, offsetof(mavlink_led_control_t, custom_bytes) }, \
         } \
}
#else
#define MAVLINK_MESSAGE_INFO_LED_CONTROL { \
    "LED_CONTROL", \
    6, \
    {  { "target_system", NULL, MAVLINK_TYPE_UINT8_T, 0, 0, offsetof(mavlink_led_control_t, target_system) }, \
         { "target_component", NULL, MAVLINK_TYPE_UINT8_T, 0, 1, offsetof(mavlink_led_control_t, target_component) }, \
         { "instance", NULL, MAVLINK_TYPE_UINT8_T, 0, 2,

        [Fact]
        public async Task TestTwoElementsAsync()
        {
            var testCode = @"public delegate void Foo();
public delegate void Bar();
";

            var fixedCode = new[]
            {
                ("/0/Test0.cs", @"public delegate void Foo();
"),
                ("Bar.cs", @"public delegate void Bar();
"),
            };

            DiagnosticResult expected = Diagnostic().WithLocation(2, 22);
            await VerifyCSharpFixAsync(testCode, this.GetSettings(), expected, fixedCode, CancellationToken.None).ConfigureAwait(false);
        }

        [Fact]
        public async Task TestTwoGenericElementsAsync()
        {
            var testCode = @"public delegate void Foo();
public delegate void Bar<T1, T2, T3>(T1 x, T2 y, T3 z);
";

            var fixedCode = new[]
            {
                ("/0/Test0.cs", @"public delegate void Foo();
"),
                ("Bar.cs", @"public delegate void Bar<T1, T2, T3>(T1 x, T2 y, T3 z);
"),
            };

            DiagnosticResult expected = Diagnostic().WithLocation(2, 22);
            await VerifyCSharpFixAsync(testCode, this.GetSettings(), expected, fixedCode, CancellationToken.None).ConfigureAwait(false);
        }

        [Fact]
        public async Task TestTwoElementsWithRuleDisabledAsync()
        {
            this.SettingsConfiguration = SA1402SettingsConfiguration.ConfigureAsNonTopLevelType;

            var testCode = @"public delegate void Foo();
public delegate void Bar();
";

            await VerifyCSharpDiagnosticAsync(testCode, this.GetSettings(), DiagnosticResult.EmptyDiagnosticResults, CancellationToken.None).ConfigureAwait(false);
        }

        [Fact]
        public async Task TestTwoElementsWithDefaultRuleConfigurationAsync()
        {
            this.SettingsConfiguration = SA1402SettingsConfiguration.KeepDefaultConfiguration;

            var testCode = @"public delegate void Foo();
public delegate void Bar();
";

            await VerifyCSharpDiagnosticAsync(testCode, this.GetSettings(),

# OPTIONS
**--help**
  Print usage statement

**--config**=""
  Specifies the location of the Docker client configuration files. The default is '~/.docker'.

**-D**, **--debug**=*true*|*false*
  Enable debug mode. Default is false.

**-H**, **--host**=[*unix:///var/run/docker.sock*]: tcp://[host]:[port][path] to bind or
unix://[/path/to/socket] to use.
  The socket(s) to bind to in daemon mode specified using one or more
  tcp://host:port/path, unix:///path/to/socket, fd://* or fd://socketfd.
  If the tcp port is not specified, then it will default to either `2375` when
  `--tls` is off, or `2376` when `--tls` is on, or `--tlsverify` is specified.

**-l**, **--log-level**="*debug*|*info*|*warn*|*error*|*fatal*"
  Set the logging level. Default is `info`.

**--tls**=*true*|*false*
  Use TLS; implied by --tlsverify. Default is false.

**--tlscacert**=*~/.docker/ca.pem*
  Trust certs signed only by this CA.

**--tlscert**=*~/.docker/cert.pem*
  Path to TLS certificate file.

**--tlskey**=*~/.docker/key.pem*
  Path to TLS key file.

**--tlsverify**=*true*|*false*
  Use TLS and verify the remote (daemon: verify client, client: verify daemon).
  Default is false.

**-v**, **--version**=*true*|*false*
  Print version information and quit. Default is false.

# COMMANDS

Use "docker help" or "docker --help" to get an overview of available commands.

# EXAMPLES
For specific client examples please see the man page for the specific Docker
command. For example:

    man docker-run

# HISTORY

/*
     Reads the given number of uncompressed bytes from the compressed file.
   If the input file was not in gzip format, gzread copies the given number
   of bytes into the buffer.
     gzread returns the number of uncompressed bytes actually read (0 for
   end of file, -1 for error). */

/*
     Writes the given number of uncompressed bytes into the compressed file.
   gzwrite returns the number of uncompressed bytes actually written
   (0 in case of error).
*/

/*
     Converts, formats, and writes the args to the compressed file under
   control of the format string, as in fprintf. gzprintf returns the number of
   uncompressed bytes actually written (0 in case of error).
*/

/*
      Writes the given null-terminated string to the compressed file, excluding
   the terminating null character.
      gzputs returns the number of characters written, or -1 in case of error.
*/

/*
      Reads bytes from the compressed file until len-1 characters are read, or
   a newline character is read and transferred to buf, or an end-of-file
   condition is encountered.  The string is then terminated with a null
   character.
      gzgets returns buf, or Z_NULL in case of error.
*/

/*
      Writes c, converted to an unsigned char, into the compressed file.
   gzputc returns the value that was written, or -1 in case of error.
*/

/*
      Reads one byte from the compressed file. gzgetc returns this byte
   or -1 in case of end of file or error.
*/

/*
     Flushes all pending output into the compressed file. The parameter
   flush is as in the deflate() function. The return value is the zlib
   error number (see function gzerror below). gzflush returns Z_OK if
   the flush parameter is Z_FINISH and all output could be flushed.
     gzflush should be called only when strictly necessary because it can
   degrade compression.
*/

/*
      Sets the starting position for the next gzread or gzwrite on the
   given compressed file. The offset represents a number of bytes in the
   uncomp

  private[this] val workflowLevel = RudderConfig.workflowLevelService
  private[this] val linkUtil      = RudderConfig.linkUtil

  private[this] def displayPendingChangeRequest(xml:NodeSeq, crs:Box[Seq[ChangeRequest]] ) : NodeSeq = {
    crs match {
      case eb: EmptyBox =>
        val e = eb ?~! "Error when trying to lookup pending change request"
        logger.error(e.messageChain)
        e.rootExceptionCause.foreach { ex =>
          logger.error("Exception was:", ex)
        }
        <span class="error">{e.messageChain}</span>
      case Full(crs) if(crs.size == 0) =>
        NodeSeq.Empty
      case Full(crs) =>
        // Need to fold the Element into one parent, or it behaves strangely (repeat the parent ...)
        val pendingChangeRequestLink =crs.foldLeft(NodeSeq.Empty) {
          (res,cr) => res ++
          {
            if (CurrentUser.checkRights(AuthorizationType.Validator.Read)||CurrentUser.checkRights(AuthorizationType.Deployer.Read)||cr.owner == CurrentUser.actor.name) {
              <li><a href={linkUtil.baseChangeRequestLink(cr.id)}>CR #{cr.id}: {cr.info.name}</a></li>
            } else {
              <li>CR #{cr.id}</li>
          } }
        }
        ("#changeRequestList *+" #> pendingChangeRequestLink ).apply(xml)
    }

  }

  private type checkFunction[T] = (T,Boolean) => Box[Seq[ChangeRequest]]

  private[this] def checkChangeRequest[T] (
      xml   : NodeSeq
    , id    : T
    , check : checkFunction[T]
  ): NodeSeq = {
    if (RudderConfig.configService.rudder_workflow_enabled().toBox.getOrElse(false)) {
      val crs = check(id,true)
      displayPendingChangeRequest(xml,crs)
    }  else {
      // Work

	<div class="desc">
		<p></p>
		<div class="longdesc">
			<p>拖拽到目标节点时，设置是否允许移动到目标节点前面的操作。<span class="highlight_red">[setting.edit.enable = true 时生效]</span></p>
			<p class="highlight_red">拖拽目标是 根 的时候，不触发 prev 和 next，只会触发 inner</p>
			<p class="highlight_red">此功能主要作用是对拖拽进行适当限制（辅助箭头），需要结合 next、inner 一起使用，才能实现完整功能。</p>
			<p>默认值：true</p>
		</div>
	</div>
	<h3>Boolean 格式说明</h3>
	<div class="desc">
	<p> true / false 分别表示 允许 / 不允许 移动到目标节点前面</p>
	</div>
	<h3>Function 参数说明</h3>
	<div class="desc">
	<h4><b>treeId</b><span>String</span></h4>
	<p>对应 zTree 的 <b class="highlight_red">treeId</b>，便于用户操控（多棵树拖拽时，是目标节点所在树的 treeId）</p>
	<h4 class="topLine"><b>treeNodes</b><span>Array(JSON)</span></h4>
	<p>被拖拽的节点 JSON 数据集合</p>
	<h4 class="topLine"><b>targetNode</b><span>JSON</span></h4>
	<p>拖拽时的目标节点 JSON 数据对象</p>
	<h

     * `range` operator emits a range of sequential integers, in order, where you
     * select the `start` of the range and its `length`. By default, uses no
     * IScheduler and just delivers the notifications synchronously, but may use
     * an optional IScheduler to regulate those deliveries.
     *
     * @example <caption>Emits the numbers 1 to 10</caption>
     * var numbers = Rx.Observable.range(1, 10);
     * numbers.subscribe(x => console.log(x));
     *
     * @see {@link timer}
     * @see {@link interval}
     *
     * @param {number} [start=0] The value of the first integer in the sequence.
     * @param {number} [count=0] The number of sequential integers to generate.
     * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling
     * the emissions of the notifications.
     * @return {Observable} An Observable of numbers that emits a finite range of
     * sequential integers.
     * @static true
     * @name range
     * @owner Observable
     */
    static create(start = 0, count = 0, scheduler) {
        return new RangeObservable(start, count, scheduler);
    }
    static dispatch(state) {
        const { start, index, count, subscriber } = state;
        if (index >= count) {
            subscriber.complete();
            return;
        }
        subscriber.next(start);
        if (subscriber.closed) {
            return;
        }
        state.index = index + 1;
        state.start = start + 1;
        this.schedule(state);
    }
    /** @deprecated internal use only */ _subscribe(subscriber) {
        let index = 0;
        let start = this.start;
        const count = this._count;
        const scheduler = this.scheduler;
        if (scheduler) {
            return scheduler.schedule(RangeObservable.dispatch, 0, {
                index, count, start, subscriber
            });
        }
        else {
            do {
                

import {checkIfInsideAStrictModeTree} from '../utils'
import getUpdateInfo from '../getUpdateInfo'

export default function patchClassComponent(ClassComponent, displayName, React, options, ownerDataMap){
  class WDYRPatchedClassComponent extends ClassComponent{
    constructor(props, context){
      super(props, context)

      this._WDYR = {
        renderNumber: 0
      }

      const origRender = super.render || this.render
      // this probably means render is an arrow function or this.render.bind(this) was called on the original class
      const renderIsABindedFunction = origRender !== ClassComponent.prototype.render
      if(renderIsABindedFunction){
        this.render = () => {
          WDYRPatchedClassComponent.prototype.render.apply(this)
          return origRender()
        }
      }
    }
    render(){
      this._WDYR.renderNumber++

      if(!('isStrictMode' in this._WDYR)){
        this._WDYR.isStrictMode = checkIfInsideAStrictModeTree(this)
      }

      // in strict mode- ignore every other render
      if(!(this._WDYR.isStrictMode && this._WDYR.renderNumber % 2 === 1)){
        if(this._WDYR.prevProps){
          const updateInfo = getUpdateInfo({
            Component: ClassComponent,
            displayName,
            prevProps: this._WDYR.prevProps,
            prevState: this._WDYR.prevState,
            nextProps: this.props,
            nextState: this.state,
            options,
            ownerDataMap
          })

          options.notifier(updateInfo)
        }

        this._WDYR.prevProps = this.props
        this._WDYR.prevState = this.state
      }

      return super.render ? super.render() : null
    }
  }

  try{
    WDYRPatchedClassComponent.displayName = displayName
  }catch(e){
    // not crucial if displayName couldn't be set
  }

  defaults(WDYRPatchedClassComponent, ClassComponent)

  return WDYRPatchedClass

    <licenses>
        <license>
            <name>Apache 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
        </license>
    </licenses>

    <scm>
        <url>http://github.com/JoanZapata/android-pdfview/</url>
        <connection>scm:git:git://github.com/JoanZapata/android-pdfview.git</connection>
        <developerConnection>scm:git:ssh://git@github.com/JoanZapata/android-pdfview.git</developerConnection>
        <tag>HEAD</tag>
    </scm>

    <developers>
        <developer>
            <name>Joan Zapata</name>
            <email>zapata.joan@gmail.com</email>
            <url>http://joanzapata.com</url>
        </developer>
    </developers>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven-compiler-plugin.version>3.0</maven-compiler-plugin.version>
        <java.version>1.6</java.version>
        <android-maven-plugin.version>3.8.2</android-maven-plugin.version>
        <android.version>4.1.1.4</android.version>
        <api.platform>16</api.platform>
        <androidannotations.version>2.7</androidannotations.version>
        <actionBarSherlock.version>4.2.0</actionBarSherlock.version>
        <maven-jarsigner.version>1.2</maven-jarsigner.version>
        <maven-license.version>1.10.b1</maven-license.version>
        <password />
    </properties>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>com.jayway.maven.plugins.android.generation2</groupId>
                    <artifactId>android-maven-plugin</artifactId>
                    <

    def parley(self):
        """Alternate taking turns, until both agents have made a choice
        (indicated by a turn starting with <selection>)
        """
        if self.first_turn:
            # Use NegotiationTeacher to load data for us
            data = (
                self.task.episodes[self.num_negotiations % len(self.task.episodes)]
                .strip()
                .split()
            )
            self.num_negotiations += 1

            for agent, tag in zip(self.agents, ['input', 'partner_input']):
                (book_cnt, book_val, hat_cnt, hat_val, ball_cnt, ball_val) = get_tag(
                    data, tag
                )
                action = {}
                action['text'] = WELCOME_MESSAGE.format(
                    book_cnt=book_cnt,
                    book_val=book_val,
                    hat_cnt=hat_cnt,
                    hat_val=hat_val,
                    ball_cnt=ball_cnt,
                    ball_val=ball_val,
                )

                action['items'] = {
                    "book_cnt": book_cnt,
                    "book_val": book_val,
                    "hat_cnt": hat_cnt,
                    "hat_val": hat_val,
                    "ball_cnt": ball_cnt,
                    "ball_val": ball_val,
                }

                agent.observe(validate(action))
            self.first_turn = False
        else:
            self.turns += 1

            for _index, agent in enumerate(self.agents):
                if agent in self.choices:
                    # This agent has already made a choice
                    continue

                try:
                    act = agent.act(timeout=None)
                except TypeError:
                    act = agent.act()  # not MTurkAgent

                for other_agent in self.agents:
                    if other_agent != agent:
                        other_agent.observe(validate(act))

                if act["text"].startswith("<selection>") and self.turns > 1:
                    # Making a choice
                    self.choices

    def test_flush_expired_trusts_with_trustor_id(self):
        roles = [{"id": "member"},
                 {"id": "other"},
                 {"id": "browser"}]
        trust_ref1 = core.new_trust_ref(
            self.user_foo['id'], self.user_two['id'],
            project_id=self.project_bar['id'])
        trust_ref1['expires_at'] = \
            timeutils.utcnow() - datetime.timedelta(minutes=1)
        trust_ref2 = core.new_trust_ref(
            self.user_two['id'], self.user_two['id'],
            project_id=self.project_bar['id'])
        trust_ref2['expires_at'] = \
            timeutils.utcnow() - datetime.timedelta(minutes=5)

        trust_data = PROVIDERS.trust_api.create_trust(trust_ref1['id'],
                                                      trust_ref1, roles)
        self.assertIsNotNone(trust_data)
        trust_data = PROVIDERS.trust_api.create_trust(trust_ref2['id'],
                                                      trust_ref2, roles)
        self.assertIsNotNone(trust_data)

        PROVIDERS.trust_api.flush_expired_and_soft_deleted_trusts(
            trustor_user_id=self.user_foo['id'],
            date=datetime.datetime.utcnow())
        trusts = self.trust_api.list_trusts()
        self.assertEqual(len(trusts), 1)
        self.assertEqual(trust_ref2['id'], trusts[0]['id'])

    def test_non_expired_soft_deleted_trusts(self):
        roles = [{"id": "member"},
                 {"id": "other"},
                 {"id": "browser"}]
        trust_ref1 = core.new_trust_ref(
            self.user_foo['id'], self.user_two['id'],
            project_id=self.project_bar['id'])
        trust_ref1

// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`features/virtualized-table/VirtualizedTable should successfully render a VirtualizedTable 1`] = `
<VirtualizedTable
  intl={
    Object {
      "formatDate": [Function],
      "formatMessage": [Function],
      "formatRelativeTime": [Function],
    }
  }
  rowData={
    Array [
      Object {
        "description": "description1",
        "name": "name1",
      },
      Object {
        "description": "description2",
        "name": "name2",
      },
      Object {
        "description": "description3",
        "name": "name3",
      },
    ]
  }
>
  <Column
    cellDataGetter={[Function]}
    cellRenderer={[Function]}
    dataKey="name"
    defaultSortDirection="ASC"
    flexGrow={0}
    flexShrink={1}
    headerRenderer={[Function]}
    label="Name"
    style={Object {}}
    width={100}
  />
  <Column
    cellDataGetter={[Function]}
    cellRenderer={[Function]}
    dataKey="description"
    defaultSortDirection="ASC"
    flexGrow={0}
    flexShrink={1}
    headerRenderer={[Function]}
    label="Description"
    style={Object {}}
    width={100}
  />
</VirtualizedTable>
`;

exports[`features/virtualized-table/VirtualizedTable should successfully render a VirtualizedTable 2`] = `
<AutoSizer
  disableHeight={true}
  disableWidth={false}
  onResize={[Function]}
  style={Object {}}
>
  <Component />
</AutoSizer>
`;

exports[`features/virtualized-table/VirtualizedTable should successfully render a VirtualizedTable 3`] = `
<WindowScroller
  onResize={[Function]}
  onScroll={[Function]}
  scrollElement={[Window]}
  scrollingResetTimeInterval={150}
  serverHeight

package com.azhon.mvvm.linkage;

import android.os.Bundle;
import android.widget.SeekBar;

import androidx.lifecycle.ViewModelProviders;

import com.azhon.basic.base.BaseFragment;
import com.azhon.mvvm.R;
import com.azhon.mvvm.databinding.FragmentLinkageBinding;

/**
 * 项目名:    TODO-MVVM
 * 包名       com.azhon.mvvm.linkage
 * 文件名:    LinkageFragment
 * 创建时间:  2019-03-29 on 20:24
 * 描述:     TODO DataBinding #setLifecycleOwner()使用示例
 *
 * @author 阿钟
 */

public class LinkageFragment extends BaseFragment<LinkageViewModel, FragmentLinkageBinding>
        implements SeekBar.OnSeekBarChangeListener {

    public static LinkageFragment newInstance() {
        Bundle args = new Bundle();
        LinkageFragment fragment = new LinkageFragment();
        fragment.setArguments(args);
        return fragment;
    }

    @Override
    protected int onCreate() {
        return R.layout.fragment_linkage;
    }

    @Override
    protected void initView() {
        dataBinding.skII.setOnSeekBarChangeListener(this);
    }

    @Override
    protected void initData() {
        dataBinding.setModel(viewModel);
        //允许绑定观察ViewModel中的LiveData数据，当LiveData数据更新时，布局会自动更新数据
        dataBinding.setLifecycleOwner(this);
    }

    @Override
    protected LinkageViewModel initViewModel() {
        return ViewModelProviders.of(getActivity()).get(LinkageViewModel.class);
    }

    @Override
    protected void showError(Object obj) {

    }

    @Override
    public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {
        viewModel.getProgress().setValue(progress);
    }

    @Override
    public

      <option name="TEST_OBJECT" value="CLASS" />
      <option name="VM_PARAMETERS" value="-ea" />
      <option name="PARAMETERS" />
      <option name="WORKING_DIRECTORY" value="$MODULE_DIR$" />
      <option name="OUTPUT_DIRECTORY" />
      <option name="ANNOTATION_TYPE" />
      <option name="ENV_VARIABLES" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <option name="TEST_SEARCH_SCOPE">
        <value defaultName="singleModule" />
      </option>
      <option name="USE_DEFAULT_REPORTERS" value="false" />
      <option name="PROPERTIES_FILE" />
      <envs />
      <properties />
      <listeners />
    </configuration>
    <configuration name="&lt;template&gt;" type="Applet" default="true" selected="false">
      <option name="MAIN_CLASS_NAME" />
      <option name="HTML_FILE_NAME" />
      <option name="HTML_USED" value="false" />
      <option name="WIDTH" value="400" />
      <option name="HEIGHT" value="300" />
      <option name="POLICY_FILE" value="$APPLICATION_HOME_DIR$/bin/appletviewer.policy" />
      <option name="VM_PARAMETERS" />
    </configuration>
    <configuration default="true" type="JUnit" factoryName="JUnit">
      <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea" />
      <module name="" />
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="PACKAGE_NAME" />
      <option name="MAIN_CLASS_NAME" />
      <option name="METHOD_NAME" />
      <option name="TEST_OBJECT" value="class" />
      <option name="VM_PARAMETERS" value="-ea"

"""Constants and membership tests for ASCII characters"""

NUL     = 0x00  # ^@
SOH     = 0x01  # ^A
STX     = 0x02  # ^B
ETX     = 0x03  # ^C
EOT     = 0x04  # ^D
ENQ     = 0x05  # ^E
ACK     = 0x06  # ^F
BEL     = 0x07  # ^G
BS      = 0x08  # ^H
TAB     = 0x09  # ^I
HT      = 0x09  # ^I
LF      = 0x0a  # ^J
NL      = 0x0a  # ^J
VT      = 0x0b  # ^K
FF      = 0x0c  # ^L
CR      = 0x0d  # ^M
SO      = 0x0e  # ^N
SI      = 0x0f  # ^O
DLE     = 0x10  # ^P
DC1     = 0x11  # ^Q
DC2     = 0x12  # ^R
DC3     = 0x13  # ^S
DC4     = 0x14  # ^T
NAK     = 0x15  # ^U
SYN     = 0x16  # ^V
ETB     = 0x17  # ^W
CAN     = 0x18  # ^X
EM      = 0x19  # ^Y
SUB     = 0x1a  # ^Z
ESC     = 0x1b  # ^[
FS      = 0x1c  # ^\
GS      = 0x1d  # ^]
RS      = 0x1e  # ^^
US      = 0x1f  # ^_
SP      = 0x20  # space
DEL     = 0x7f  # delete

controlnames = [
"NUL", "SOH", "STX", "ETX", "EOT", "ENQ", "ACK", "BEL",
"BS",  "HT",  "LF",  "VT",  "FF",  "CR",  "SO",  "SI",
"DLE", "DC1",

	<h1 class="graphed">{{ username }} <small>{{ num_weeks }} weeks of data</small></h1>
	
	{% if flashes %}
		<ul class="flashes">
			{% for flash in flashes %}
				<li>{{ flash }}</li>
			{% endfor %}
		</ul>
	{% endif %}
	
	<div class="sfeature">
		<a href="artists/">
			<img src="/static/images/artists_64.png" class="front" /> <br />
			<p>Artist histories &raquo;</p>
		</a>
	</div>
	
	<div class="sfeature">
		<a href="timeline/">
			<img src="/static/images/timeline2_64.png" class="front" /> <br />
			<p>Quick Timeline &raquo;</p>
		</a>
	</div>
	
	<div class="sfeature">
		<a href="posters/">
			<img src="/static/images/posters_64.png" class="front" /> <br />
			<p>Timeline Posters &raquo;</p>
		</a>
	</div>
	
	<div class="sfeature">
		<a href="export/">
			<img src="/static/images/export_64.png" class="front" /> <br />
			<p>Data Export &raquo;</p>
		</a>
	</div>
	
	{% if lfuser.external_allowed %}
	<div class="sfeature">
		<a href="sigs/">
			<img src="/static/images/sigs_64.png" class="front" /> <br />
			<p>Signature Images &raquo;</p>
		</a>
	</div>
	{% endif %}
	
	<!--<div class="sfeature">
		<a href="premium/">
			<img src="/static/images/premium_64.png" class="front" /> <br />
			<p>LastGraph Premium &raquo;</p>
		</a>
	</div>-->
	
	<div class="sfeature">
		<a href="

    "width": 75.655,
    "x": 0.9770000000000001,
    "y": 0.14
  },
  "hasClippingMask": true,
  "isClosed": true,
  "isFixedToViewport": false,
  "isFlippedHorizontal": false,
  "isFlippedVertical": false,
  "isLocked": false,
  "isVisible": true,
  "layerListExpandedType": 1,
  "name": "a",
  "nameIsFixed": false,
  "pointRadiusBehaviour": 1,
  "points": [
    {
      "_class": "curvePoint",
      "cornerRadius": 0,
      "curveFrom": "{1, 1}",
      "curveMode": 1,
      "curveTo": "{1, 1}",
      "hasCurveFrom": false,
      "hasCurveTo": false,
      "point": "{1, 1}"
    },
    {
      "_class": "curvePoint",
      "cornerRadius": 0,
      "curveFrom": "{0, 1}",
      "curveMode": 1,
      "curveTo": "{0, 1}",
      "hasCurveFrom": false,
      "hasCurveTo": false,
      "point": "{0, 1}"
    },
    {
      "_class": "curvePoint",
      "cornerRadius": 0,
      "curveFrom": "{0, 0}",
      "curveMode": 1,
      "curveTo": "{0, 0}",
      "hasCurveFrom": false,
      "hasCurveTo": false,
      "point": "{0, 0}"
    },
    {
      "_class": "curvePoint",
      "cornerRadius": 0,
      "curveFrom": "{1, 0}",
      "curveMode": 1,
      "curveTo": "{1, 0}",
      "hasCurveFrom": false,
      "hasCurveTo": false,
      "point": "{1, 0}"
    }
  ],
  "resizingConstraint": 63,
  "resizingType": 0,
  "rotation": 0,
  "shouldBreakMaskChain": false

// =================================================================================================
// Copyright 2011 Twitter, Inc.
// -------------------------------------------------------------------------------------------------
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this work except in compliance with the License.
// You may obtain a copy of the License in the LICENSE file, or at:
//
//  http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// =================================================================================================

package com.twitter.common.stats;

import com.google.common.base.Preconditions;

public class PrintableHistogram {
  private double[] bucketBoundaries;
  private int[] bucketCounts;
  private int totalCount = 0;

  /**
   * Creates a histogram with the given bucket boundaries.  The boundaries
   * 0 and infinity are implicitly added.
   *
   * @param buckets Boundaries for histogram buckets.
   */
  public PrintableHistogram(double ... buckets) {
    Preconditions.checkState(buckets[0] != 0);

    bucketBoundaries = new double[buckets.length + 2];
    bucketBoundaries[0] = 0;
    bucketCounts = new int[buckets.length + 2];
    for (int i = 0; i < buckets.length; i++) {
      if (i > 0) {
        Preconditions.checkState(buckets[i] > buckets[i - 1],
            "Bucket %f must be greater than %f.", buckets[i], buckets[i - 1]);
      }
      bucketCounts[i] = 0;
      bucketBoundaries[i + 1] = buckets[i];
    }

    bucketBoundaries[bucketBoundaries.length - 1] = Integer.MAX_VALUE;
  }

  public void addValue(double value) {
    addValue(value, 1);
  }

  public void addValue(double value, int count) {
    Preconditions.checkState(value >= 0);
    Pre

  before do
    class << helper
      include Haml, Haml::Helpers
    end
    helper.init_haml_helpers
  end

  describe "#card_classes" do

    it "returns an array of structural class names for the given properties" do
      result = helper.card_classes(
        tall_listing?: true,
        double?: true,
        cover?: true,
        kind: "article"
      )

      result.should include("card--list--tall")
      result.should include("card--column--tall")
      result.should include("card--column--double")
      result.should include("card--cover")
      result.should include("card--article")

      result = helper.card_classes(
        short?: true,
        cover?: true,
        fixed?: true
      )

      result.should include("card--list--short")
      result.should include("card--column--single")
      result.should include("card--column--short")
      result.should include("card--fixed")
    end

    describe "returns an array of content class names for the given properties" do

      it "should add 'has' class names when given content" do
        result = helper.card_classes(
          image_url: "path/to/image",
          author_name: "Joe Bloggs",
          price_tag: {
            price: 123,
            currency: "£"
          }
        )

        result.should include("card--has-img")
        result.should include("card--has-footer")
        result.should include("card--has-price")
      end

      it "should add 'no' class names when given no content" do
        result = helper.card_classes(
          image_url: nil,
          meta_description: nil
        )

        result.should include("card--no-img")
        result.should include("card--no-footer")
        result.should include("card--no-price")
      end

    end

  end

  describe "#card_href_for_test_variation" do
    let(:var)   { nil }
    let(:url)   { "/

  



  <h2>Примеры</h2>
    <pre class="prettyprint">POST /api/hostgroups/636252244/puppetclass_ids
{
  &quot;puppetclass_id&quot;: 281110143,
  &quot;hostgroup_class&quot;: {
    &quot;puppetclass_id&quot;: 281110143
  }
}
200
{
  &quot;hostgroup_id&quot;: 636252244,
  &quot;puppetclass_id&quot;: 281110143
}</pre>

  <h2>Параметры</h2>
  <table class='table'>
    <thead>
      <tr>
        <th>Имя параметра</th>
        <th>Описание</th>
      </tr>
    </thead>
    <tbody>
        <tr style='background-color:rgb(255,255,255);'>
    <td>
      <strong>location_id </strong><br>
      <small>
        необязательно
        
      </small>
    </td>
    <td>
      
<p>Ограничить местоположением</p>

        <p><strong>Validations:</strong></p>
        <ul>
            <li>
<p>Must be a Integer</p>
</li>
        </ul>

    </td>

  </tr>

  
  <tr style='background-color:rgb(255,255,255);'>
    <td>
      <strong>organization_id </strong><br>
      <small>
        необязательно
        
      </small>
    </td>
    <td>
      
<p>Ограничить организацией</p>

        <p><strong>Validations:</strong></p>
        <ul>
            <li>
<p>Must be a Integer</p>
</li>
        </ul>

    </td>

  </tr

    "chat.message-history": "訊息紀錄",
    "chat.message-deleted": "訊息已刪除",
    "chat.options": "聊天設定",
    "chat.pop-out": "彈出聊天視窗",
    "chat.minimize": "最小化",
    "chat.maximize": "最大化",
    "chat.seven_days": "7天",
    "chat.thirty_days": "30天",
    "chat.three_months": "3個月",
    "chat.delete_message_confirm": "您確定刪除此訊息嗎？",
    "chat.retrieving-users": "搜尋使用者",
    "chat.manage-room": "管理聊天室",
    "chat.add-user-help": "在這裡搜尋更多使用者。選中之後加入到聊天中，新使用者在加入聊天之前看不到聊天訊息。只有聊天室所有者（<i class=\"fa fa-star text-warning\"></i>）可以從聊天室中移除使用者。",
    "chat.confirm-chat-with-dnd-user": "該使用者已將其狀態設置為 DnD（請勿打擾）。 您仍希望與其聊天嗎？",
    "chat.rename-room": "重新命名房間",
    "chat.rename-placeholder": "在這裡輸入房間名字",
    "chat.rename-help": "這裡設定的房間名字能夠被房間內所有人都看到。",
    "chat.leave": "離開聊天室",
    "chat.leave-prompt": "您確定要離開聊天室？",


<div role="navigation" aria-label="breadcrumbs navigation">

  <ul class="wy-breadcrumbs">
    
      <li><a href="index.html">Docs</a> &raquo;</li>
        
      <li>supplychainpy.bot package</li>
    
    
      <li class="wy-breadcrumbs-aside">
        
            
            <a href="_sources/supplychainpy.bot.rst.txt" rel="nofollow"> View page source</a>
          
        
      </li>
    
  </ul>

  
  <hr/>
</div>
          <div role="main" class="document" itemscope="itemscope" itemtype="http://schema.org/Article">
           <div itemprop="articleBody">
            
  <div class="section" id="supplychainpy-bot-package">
<h1>supplychainpy.bot package<a class="headerlink" href="#supplychainpy-bot-package" title="Permalink to this headline">¶</a></h1>
<div class="section" id="submodules">
<h2>Submodules<a class="headerlink" href="#submodules" title="Permalink to this headline">¶</a></h2>
</div>
<div class="section" id="module-supplychainpy.bot.dash">
<span id="supplychainpy-bot-dash-module"></span><h2>supplychainpy.bot.dash module<a class="headerlink" href="#module-supplychainpy.bot.dash" title="Permalink to this headline">¶</a></h2>
<dl class="class">
<dt id="supplychainpy.bot.dash.ChatBot">
<em class="property">class </em><code class="descclassname">supplychainpy.bot.dash.</code><code class="descname">ChatBot</code><a class="headerlink" href="#supplychainpy.bot.dash.ChatBot" title="Permalink to this definition">¶</a></dt>
<dd><p>Bases: <code class="xref py py-

        uri = '/identitypools/{0}'.format(identity_pool_id)
        return self.make_request('GET', uri, expected_status=200)

    def describe_identity_usage(self, identity_pool_id, identity_id):
        """
        Gets usage information for an identity, including number of
        datasets and data usage.

        :type identity_pool_id: string
        :param identity_pool_id: A name-spaced GUID (for example, us-
            east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE) created by Amazon
            Cognito. GUID generation is unique within a region.

        :type identity_id: string
        :param identity_id: A name-spaced GUID (for example, us-
            east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE) created by Amazon
            Cognito. GUID generation is unique within a region.

        """

        uri = '/identitypools/{0}/identities/{1}'.format(
            identity_pool_id, identity_id)
        return self.make_request('GET', uri, expected_status=200)

    def get_identity_pool_configuration(self, identity_pool_id):
        """
        Gets the configuration settings of an identity pool.

        :type identity_pool_id: string
        :param identity_pool_id: A name-spaced GUID (for example, us-
            east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE) created by Amazon
            Cognito. This is the ID of the pool for which to return a
            configuration.

        """

        uri = '/identitypools/{0}/configuration'.format(identity_pool_id)
        return self.make_request('GET', uri, expected_status=200)

    def list_datasets(self, identity_pool_id, identity_id, next_token=None,
                      max_results=None):
        """
        Lists datasets for an identity. The credentials used to make
        this API call need to have access

UNAME := $(shell uname)
ifeq ($(UNAME), Darwin)
	LIBRARY_FILE=libpyvex.dylib
	STATIC_LIBRARY_FILE=libpyvex.a
	LDFLAGS=-Wl,-install_name,@rpath/$(LIBRARY_FILE)
endif
ifeq ($(UNAME), Linux)
	LIBRARY_FILE=libpyvex.so
	STATIC_LIBRARY_FILE=libpyvex.a
	LDFLAGS=-Wl,-soname,$(LIBRARY_FILE)
endif
ifeq ($(UNAME), NetBSD)
	LIBRARY_FILE=libpyvex.so
	STATIC_LIBRARY_FILE=libpyvex.a
	LDFLAGS=-Wl,-soname,$(LIBRARY_FILE)
endif
ifeq ($(findstring MINGW,$(UNAME)), MINGW)
	LIBRARY_FILE=pyvex.dll
	STATIC_LIBRARY_FILE=libpyvex.a
	LDFLAGS=
endif

# deeply evil
# https://www.cmcrossroads.com/article/gnu-make-meets-file-names-spaces-them
sp =$(null) $(null)
qs = $(subst ?,$(sp),$1)
sq = $(subst $(sp),?,$1)

CC=gcc
AR=ar
INCFLAGS=-I "$(VEX_INCLUDE_PATH)"
CFLAGS=-g -O2 -Wall -shared -fPIC -std=c99 $(INCFLAGS)

OBJECTS=pyvex.o logging.o analysis.o postprocess.o
HEADERS=pyvex.h

all: $(LIBRARY_FILE) $(STATIC_LIBRARY_FILE)

%.o: %.c
	$(CC) -c $(CFLAGS) $<

$(LIBRARY_FILE): $(OBJECTS) $(HEADERS) $(call sq,$(VEX_LIB_PATH)/libvex.a)
	$(CC) $(CFLAGS) -o $(LIBRARY_FILE) $(OBJECTS) "$(VEX_LIB_PATH)/libvex.a" $(LDFLAGS)

$(STATIC_LIBRARY_FILE): $(OBJECTS) $(HEADERS) $(call sq,$(VEX_LIB_PATH)/libvex.a

    jade: {
      dev: {
        options: {
          pretty: true
        },
        files: {
          'temp/_template.html': 'src/abn_tree_template.jade',
          'test/tests_page.html': 'test/tests_page.jade'
        }
      },
      bs2_ng115_test_page: {
        files: {
          'test/bs2_ng115_test_page.html': 'test/test_page.jade'
        },
        options: {
          pretty: true,
          data: {
            bs: "2",
            ng: "1.1.5"
          }
        }
      },
      bs3_ng115_test_page: {
        files: {
          'test/bs3_ng115_test_page.html': 'test/test_page.jade'
        },
        options: {
          pretty: true,
          data: {
            bs: "3",
            ng: "1.1.5"
          }
        }
      },
      bs2_ng120_test_page: {
        files: {
          'test/bs2_ng120_test_page.html': 'test/test_page.jade'
        },
        options: {
          pretty: true,
          data: {
            bs: "2",
            ng: "1.2.12"
          }
        }
      },
      bs3_ng120_test_page: {
        files: {
          'test/bs3_ng120_test_page.html': 'test/test_page.jade'
        },
        options: {
          pretty: true,
          data: {
            bs: "3",
            ng: "1.2.12"
          }
        }
      }
    },
    "string-replace": {
      dev: {
        files: {
          'temp/_directive.coffee': 'src/abn_tree_directive.coffee'
        },
        options: {
          replacements: [
            {
              pattern: "{html}",

# -*- mode: autoconf -*-
#
# gtk-doc.m4 - configure macro to check for gtk-doc
# Copyright (C) 2003 James Henstridge
#               2007-2017  Stefan Sauer
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# As a special exception, the above copyright owner gives unlimited
# permission to copy, distribute and modify the configure scripts that
# are the output of Autoconf when processing the Macro. You need not
# follow the terms of the GNU General Public License when using or
# distributing such scripts, even though portions of the text of the
# Macro appear in them. The GNU General Public License (GPL) does govern
# all other use of the material that constitutes the Autoconf Macro.

# serial 2

dnl Usage:
dnl   GTK_DOC_CHECK([minimum-gtk-doc-version])
AC_DEFUN([GTK_DOC_CHECK],
[
  AC_REQUIRE([PKG_PROG_PKG_CONFIG])
  AC_BEFORE([AC_PROG_LIBTOOL],[$0])dnl setup libtool first
  AC_BEFORE([AM_PROG_LIBTOOL],[$0])dnl setup libtool first

  ifelse([$1],[],[gtk_doc_requires="gtk-doc"],[gtk_doc_requires="gtk-doc >= $1"])
  AC_MSG_CHECKING([for gtk-doc])
  PKG_CHECK_EXISTS([$gtk_doc_requires],[have_gtk_doc=yes],[have_gtk_doc=no])
  AC_MSG_RESULT($

#ifndef NCSJPCDEFS_H
#define NCSJPCDEFS_H

//
// Disable dll-interface warning, compiler gives it on protected/private members.
// Disable truncated name mangling warning
//
#ifdef _MSC_VER
#pragma warning( disable : 4251 4786 4717 4275 4163)
#endif

//
// Remove unnecessary stubs to reduce binary size
//
#define NCSJPC_LEAN_AND_MEAN


#ifndef NCSDEFS_H
#include "NCSDefs.h"
#endif // NCSDEFS_H

#if defined(WIN32)&&!defined(_WIN32_WCE)&&((defined(_X86_) && defined(_MSC_FULL_VER) && (_MSC_FULL_VER >= 12008804))||(defined(_AMD64_) && defined(_MSC_VER) && _MSC_VER >= 1400))
//
// X86 "Multi Media Intrinsics" - ie, MMX, SSE, SSE2 optimisations
//
// Only defined if Win32, X86 and VC6 Processor Pack or newer _OR_ AMD64 and >= VS.NET 2005/AMD64 PlatformSDK compiler (ie, SSE intrinsics support in the compiler)
//
#define NCSJPC_X86_MMI
#if !defined(_AMD64_)
#define NCSJPC_X86_MMI_MMX

// Prevent mmintrin.h from being included
//#define _MMINTRIN_H_INCLUDED
#endif

#endif

//
// Use LCMS for ICC->RGB conversions, supports both
// restricted and full ICC profiles.
//
#define NCSJPC_USE_LCMS

//
// Use TinyXML for XML DOM Parsing
//
#define NCSJPC_USE_TINYXML

//
// Include ECW Decompression in lib
//
#define NCSJPC_ECW_SUPPORT

//
// Include ECW Compression in lib
//
#define ECW_COMPRESS

#ifndef NCSJPC_EXPORT
#define NCSJPC_EXPORT NCS_EXPORT
#endif // NCSJPC_EXPORT
#ifndef

/*
 * Copyright (c) 1995, 2015, Oracle and/or its affiliates. All rights reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Oracle designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Oracle in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
 * or visit www.oracle.com if you need additional information or have any
 * questions.
 */
package java.awt;

import javax.accessibility.*;

/**
 * {@code Panel} is the simplest container class. A panel
 * provides space in which an application can attach any other
 * component, including other panels.
 * <p>
 * The default layout manager for a panel is the
 * {@code FlowLayout} layout manager.
 *
 * @author      Sami Shaio
 * @see     java.awt.FlowLayout
 * @since   1.0
 */
public class Panel extends Container implements Accessible {
    private static final String base = "panel";
    private static int nameCounter = 0;

    /*
     * JDK 1.1 serialVersionUID
     */
     private static final long serialVersionUID = -2728009084054400034L;

    /**
     * Creates a new panel using the default layout manager.
     * The default layout manager for all panels is the
     * {@code FlowLayout} class.
     */
    public Panel()

class Api{
  // 小册
  static const String XIAOCE = 'https://xiaoce-timeline-api-ms.juejin.im/v1/getListByLastTime';//?uid=&client_id=&token=&src=web&pageNum=1
  static const String BANNER_STORAGE = 'https://banner-storage-ms.juejin.im/v1/web/page/aanner?position=hero&platform=web&page=0&pageSize=20&src=web';
  // 首页list
  static const String RANK_LIST = 'https://timeline-merger-ms.juejin.im/v1/get_entry_by_rank';
  // 沸点
  static const String PINS_LIST = 'https://short-msg-ms.juejin.im/v1/pinList/recommend';
  // 小册导航
  static const String BOOK_NAV = 'https://xiaoce-timeline-api-ms.juejin.im/v1/getNavList';
  static const String BOOK_LIST = 'https://xiaoce-timeline-api-ms.juejin.im/v1/getListByLastTime';

  // 开源库
  static const String REPOS_LIST = 'https://repo-ms.juejin.im/v1/getCustomRepos';

  // 活动
  static const String ACTIVITY_CITY = 'https://event-storage-api-ms.juejin.im/v1/getCityList';
  static const String ACTIVITY_LIST = 'https://event-storage-api-ms.juejin.im/v2/getEventList';

  //登陆
  static const String LOGIN = 'https://juejin.im/auth/type/phoneNumber';
  
  static const PinsListSubscribed = 'https://short-msg-ms.juejin.im/v1/pinList/dynamic?uid=59be059c5188256c6d77cf2e&device_id=1541234434

// Copyright 2018 The Draco Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#include "draco/io/file_utils.h"

#include "draco/io/file_reader_factory.h"
#include "draco/io/file_reader_interface.h"
#include "draco/io/file_writer_factory.h"
#include "draco/io/file_writer_interface.h"
#include "draco/io/parser_utils.h"

namespace draco {

bool SplitPath(const std::string &full_path, std::string *out_folder_path,
               std::string *out_file_name) {
  const auto pos = full_path.find_last_of("/\\");
  if (pos != std::string::npos) {
    if (out_folder_path) {
      *out_folder_path = full_path.substr(0, pos);
    }
    if (out_file_name) {
      *out_file_name = full_path.substr(pos + 1, full_path.length());
    }
  } else {
    if (out_folder_path) {
      *out_folder_path = ".";
    }
    if (out_file_name) {
      *out_file_name = full_path;
    }
  }
  return true;
}

std::string ReplaceFileExtension(const std::string &in_file_name,
                                 const std::string &new_extension) {
  const auto pos = in_file_name.find_last_of(".");
  if (pos

import java.sql.SQLException;
import java.util.List;

import javax.persistence.Cache;
import javax.persistence.EntityManagerFactory;
import javax.sql.DataSource;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springbyexample.mvc.test.AbstractProfileTest;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.ApplicationContext;
import org.springframework.core.io.Resource;
import org.springframework.jdbc.datasource.init.ResourceDatabasePopulator;
import org.springframework.test.context.ContextConfiguration;

/**
 * Base class for REST controller tests.
 *
 * @author David Winterfeldt
 */
@ContextConfiguration({ "classpath:/org/springbyexample/web/mvc/rest-controller-test-context.xml" })
public abstract class AbstractRestControllerTest extends AbstractProfileTest {

    final Logger logger = LoggerFactory.getLogger(AbstractRestControllerTest.class);

    @Autowired
    private EmbeddedJetty embeddedJetty;

    /**
     * Reset the DB before each test.
     */
    @Override
    protected void doInit() {
        reset();
    }

    /**
     * Reset the database and entity manager cache.
     */
    protected void reset() {
        resetSchema();
        resetCache();

        logger.info("DB schema and entity manager cache reset.");
    }

    /**
     * Resets DB schema.
     */
    private void resetSchema() {
        ApplicationContext ctx = embeddedJetty.getApplicationContext();
        DataSource dataSource = ctx.getBean(DataSource.class);
        @SuppressWarnings("unchecked")
        List<Resource> databaseScripts = (List<Resource>) ctx.getBean("databaseScriptsList");

        Connection con = null;
        ResourceDatabasePopulator resourceDatabasePopulator = new ResourceDatabasePopulator();

        try {
            con = dataSource.getConnection();

            resourceDatabasePopulator.setScripts(databaseScripts.toArray(new Resource[0]));

            resourceDatabase

func CheckRangeStringRunes(pass *analysis.Pass) (interface{}, error) {
	for _, ssafn := range pass.ResultOf[buildssa.Analyzer].(*buildssa.SSA).SrcFuncs {
		fn := func(node ast.Node) bool {
			rng, ok := node.(*ast.RangeStmt)
			if !ok || !IsBlank(rng.Key) {
				return true
			}

			v, _ := ssafn.ValueForExpr(rng.X)

			// Check that we're converting from string to []rune
			val, _ := v.(*ssa.Convert)
			if val == nil {
				return true
			}
			Tsrc, ok := val.X.Type().(*types.Basic)
			if !ok || Tsrc.Kind() != types.String {
				return true
			}
			Tdst, ok := val.Type().(*types.Slice)
			if !ok {
				return true
			}
			TdstElem, ok := Tdst.Elem().(*types.Basic)
			if !ok || TdstElem.Kind() != types.Int32 {
				return true
			}

			// Check that the result of the conversion is only used to
			// range over
			refs := val.Referrers()
			if refs == nil {
				return true
			}

			// Expect two refs: one for obtaining the length of the slice,
			// one for accessing the elements
			if len(FilterDebug(*refs)) != 2 {
				// TODO(dh): right now, we check that only one place
				// refers to our slice. This will miss cases such as
				// ranging over the slice twice. Ideally, we'd ensure that
				// the slice is only used for ranging over (without
				// accessing the key), but that is harder to do because in
				// SSA form, ranging over a slice looks like an ordinary
				// loop with index increments and slice accesses. We'd
				// have to look at the associated AST node to check that
				// it's a range statement.
				return true
			}

			pass.Reportf(rng.Pos(), "should range over string, not

    @Test(expected = UnsupportedOperationException.class)
    public void shouldRejectSetByte() {
        unmodifiableBuffer(EMPTY_BUFFER).setByte(0, (byte) 0);
    }

    @Test(expected = UnsupportedOperationException.class)
    public void shouldRejectSetShort() {
        unmodifiableBuffer(EMPTY_BUFFER).setShort(0, (short) 0);
    }

    @Test(expected = UnsupportedOperationException.class)
    public void shouldRejectSetMedium() {
        unmodifiableBuffer(EMPTY_BUFFER).setMedium(0, 0);
    }

    @Test(expected = UnsupportedOperationException.class)
    public void shouldRejectSetInt() {
        unmodifiableBuffer(EMPTY_BUFFER).setInt(0, 0);
    }

    @Test(expected = UnsupportedOperationException.class)
    public void shouldRejectSetLong() {
        unmodifiableBuffer(EMPTY_BUFFER).setLong(0, 0);
    }

    @Test(expected = UnsupportedOperationException.class)
    public void shouldRejectSetBytes1() throws IOException {
        unmodifiableBuffer(EMPTY_BUFFER).setBytes(0, (InputStream) null, 0);
    }

    @Test(expected = UnsupportedOperationException.class)
    public void shouldRejectSetBytes2() throws IOException {
        unmodifiableBuffer(EMPTY_BUFFER).setBytes(0, (ScatteringByteChannel) null, 0);
    }

    @Test(expected = UnsupportedOperationException.class)
    public void shouldRejectSetBytes3() {
        unmodifiableBuffer(EMPTY_BUFFER).setBytes(0, (byte[]) null, 0, 0);
    }

    @Test(expected = UnsupportedOperationException.class)
    public void shouldRejectSetBytes4() {
        unmodifiableBuffer(EMPTY_BUFFER).setBytes(0, (ChannelBuffer) null, 0, 0);
    }

    @Test(expected = UnsupportedOperationException.class)
    public void shouldRejectSetBytes5() {
        unmodifiableBuffer(EMPTY_BUFFER).setBytes(0, (ByteBuffer) null

    Random.seed!(1793) # now use deviations
    out_dev = impulse_responses(dsgevar, jlddata["data"], deviations = true, normalize_rotation = false)

    Random.seed!(1793) # flip shock
    out_dev_flip = impulse_responses(dsgevar, jlddata["data"], deviations = true,
                                     flip_shocks = true, normalize_rotation = false)

    Random.seed!(1793) # draw shock
    out_dev_draw = impulse_responses(dsgevar, jlddata["data"], deviations = true,
                                     draw_shocks = true, normalize_rotation = false)

    @test @test_matrix_approx_eq jlddata["rotation_irf_by_shock"] out
    @test @test_matrix_approx_eq jlddata["flip_rotation_irf_by_shock"] out_flip
    @test @test_matrix_approx_eq out out_MM1
    @test !(out ≈ out_MM2)
    @test @test_matrix_approx_eq out out_X̂
    @test @test_matrix_approx_eq jlddata["rotation_irf_draw_shock"] out_draw
    @test @test_matrix_approx_eq out_dev jlddata["deviations_rotation_irf_by_shock"]
    @test @test_matrix_approx_eq out_dev_draw jlddata["deviations_rotation_irf_draw_shock"]
    @test @test_matrix_approx_eq out_dev -out_dev_flip
end

@testset "Impulse responses of a VAR approximation to a DSGE (or λ = ∞)" begin
    m = AnSchorfheide()
    m <= Setting(:impulse_response_horizons, 10)
    Random.seed!(1793)
    observables = [:obs_gdp, :obs_nominalrate, :z_t]

    shocks = collect(keys(m.exogenous_shocks))
    fp = dirname(@__FILE__)
    jlddata = load(joinpath(fp, "../../../reference/var_approx_dsge_irfs

/**
 * Calculates the enclosing bounding box of 3 vertices (a triangle). If the
 * triangle is partly outside the screen, it will be clipped appropriately.
 *
 * Todo: If it is fully outside the screen, check what happens, but it works.
 *
 * @param[in] v0 First vertex.
 * @param[in] v1 Second vertex.
 * @param[in] v2 Third vertex.
 * @param[in] viewport_width Screen width.
 * @param[in] viewport_height Screen height.
 * @return A bounding box rectangle.
 */
template <typename T, glm::precision P = glm::defaultp>
core::Rect<int> calculate_clipped_bounding_box(const glm::tvec2<T, P>& v0, const glm::tvec2<T, P>& v1,
                                               const glm::tvec2<T, P>& v2, int viewport_width,
                                               int viewport_height)
{
    /* Old, producing artifacts:
    t.minX = max(min(t.v0.position[0], min(t.v1.position[0], t.v2.position[0])), 0.0f);
    t.maxX = min(max(t.v0.position[0], max(t.v1.position[0], t.v2.position[0])), (float)(viewportWidth - 1));
    t.minY = max(min(t.v0.position[1], min(t.v1.position[1], t.v2.position[1])), 0.0f);
    t.maxY = min(max(t.v0.position[1], max(t.v1.position[1], t.v2.position[1])), (float)(viewportHeight -
    1));*/

    using std::ceil;
    using std::floor;
    using std::max;
    using std::min;
    // Readded this comment after merge: What about rounding, or rather the conversion from double to int?
    const int minX = max(min(floor(v0[0]), min(floor(

; RUN: %lli %s > /dev/null


define i32 @main() {
	%double1 = fadd double 0.000000e+00, 0.000000e+00		; <double> [#uses=6]
	%double2 = fadd double 0.000000e+00, 0.000000e+00		; <double> [#uses=6]
	%float1 = fadd float 0.000000e+00, 0.000000e+00		; <float> [#uses=6]
	%float2 = fadd float 0.000000e+00, 0.000000e+00		; <float> [#uses=6]
	%test49 = fcmp oeq float %float1, %float2		; <i1> [#uses=0]
	%test50 = fcmp oge float %float1, %float2		; <i1> [#uses=0]
	%test51 = fcmp ogt float %float1, %float2		; <i1> [#uses=0]
	%test52 = fcmp ole float %float1, %float2		; <i1> [#uses=0]
	%test53 = fcmp olt float %float1, %float2		; <i1> [#uses=0]
	%test54 = fcmp une float %float1, %float2		; <i1> [#uses=0]
	%test55 = fcmp oeq double %double1, %double2		; <i1> [#uses=0]
	%test56 = fcmp oge double %double1, %double2		; <i1> [#uses=0]
	%test57 = fcmp ogt double %double1, %double2		; <i1> [#uses=0]
	%test58 = fcmp ole double %double1, %double2		; <i1> [#uses=0]
	%test59 = fcmp olt double %double1, %double2		; <i1> [#uses=0]
	%test60 = fcmp une double %double1, %double2		; <i1> [#uses=0]
	ret

#define FEAT_DCEP_WIN		2


static int32 feat_size[1];
static int32 basefeatlen;

int32 feat_1s_c_dd_cepsize ( int32 veclen )
{
    basefeatlen = veclen;
    feat_size[0] = veclen+veclen;
    return (veclen);
}


int32 feat_1s_c_dd_featsize (int32 **size)
{
    *size = feat_size;
    return N_FEAT;
}


/*
 * Feature vectors computed from input mfc vectors using this window (+/- window).
 */
int32 feat_1s_c_dd_window_size ( void )
{
    return (FEAT_DCEP_WIN+1);
}


void feat_1s_c_dd_cep2feat (float32 **mfc, float32 **feat)
{
    float32 *f;
    float32 *w1, *w_1, *_w1, *_w_1;
    float32 d1, d2;
    int32 i, j;
    
    /* CEP */
    memcpy (feat[0], mfc[0], basefeatlen * sizeof(float32));
    
    /* 
     * D2CEP: (mfc[w+1] - mfc[-w+1]) - (mfc[w-1] - mfc[-w-1]), 
     * where w = FEAT_DCEP_WIN 
     */
    f = feat[0] + basefeatlen;

    w1   = mfc[ FEAT_DCEP_WIN+1];
    _w1  = mfc[-FEAT_DCEP_WIN+1];
    w_1  = mfc[ FEAT_DCEP_WIN-1];
    _w_1 = mfc[-FEAT_DCEP_WIN-1];

    for (i = 0; i < basefeatlen; i++) {
	d1 =  w1[i] -  _w1[i];
	d2 = w_1[i] - _w_

device_eclash=Устройство хранения с таким именем уже существует
device_emedia=Отсутствует название типа носителя
device_edevice=Отсутствует или недействительно архивное устройство или каталог
device_echild=Этот клиент не может быть удален, так как он используется $1 
storagestatus_title=Состояние демона хранилища
storagestatus_err=Не удалось получить состояние из $1 : $2 
storagestatus_msg=Статус от $1 : $2 
storagestatus_show=Показать статус демона хранилища:
storagestatus_ok=Ok
label_title=Объем метки
label_header=Детали тома для маркировки
label_storage=Демон хранения для метки
label_pool=Создать в пуле
label_label=Новое название лейбла
label_ok=Ярлык сейчас
label_return=форма этикетки
label_run=Маркировка тома с $2 на демоне хранения $1 ..
label_estorage=.. демон хранения не найден!
label_eexists=.. указанный ярлык уже существует.
label_efailed=.. маркировка не удалась! Проверьте сообщение об ошибке выше по причине.
label_done=.. маркировка успешна.
label_epool=.. не смог найти бассейн!
label_err=Сбой ярлыка
label_elabel=Метка не в

  --nosetboot
    do not set target as default boot device when rebooting. --noboot is deprecated

  --noreboot
    do not reboot after install

.prop
  .prop should have valid lua syntax for a table of keys and their values: e.g. "{label='OpenOS'}"
  All fields are optional, as is the .prop file

  label:string
    Declares an identifying name of the installation. This is displayed by install during source selection and also can be used on the commandline: e.g. (where {label="tape"} is given) `install tape`. If setlabel is true, this value is used for the target filesystem label. --label overrides this value. Note that install uses a case insensitive search: e.g. install TAPE works the same as install tape.

  setlabel:boolean
    Determines whether the install should set the target filesystem's label. If .prop does not define a label and the user does not define a command line --label=LABEL, setlabel has no action. --nosetlabel overrides this value

  setboot:boolean
    Determines if the target filesystem should be set as the machine's default boot device. Default is false, overriden by --nosetboot

  reboot:boolean
    Determines if the machine should reboot after the install completes. Overriden by --noreboot

  ignore:boolean
    If true, the installer will skip the source filesystem and not include it for selection

  EXAMPLE:
    {label='OpenOS', setlabel=true, setboot=true, reboot=true}

.install ENVIRONMENT
  A loot disc can optionally provide a custom installation script at the root of the source filesytem selected for installation. The script must be named ".install"
  When provided, the default install action is replaced by executation of this script. The default action is to copy all source files to the destination
  A table of configuration options, named `install`, is provided in _ENV
  These are the keys and their descriptions of that table

  _ENV.install.from:
    This is the path of the selected source filesystem to install from. It should be the path to the executing .install
    example: /mnt/ABC/.install is executing, thus _ENV.install.from is "/m

	are permitted provided that the following conditions are met:

	    * Redistributions of source code must retain the above copyright notice,
	      this list of conditions and the following disclaimer.
	    * Redistributions in binary form must reproduce the above copyright notice,
	      this list of conditions and the following disclaimer in the documentation
	      and/or other materials provided with the distribution.
	    * Neither the name of the Launch4j nor the names of its contributors
	      may be used to endorse or promote products derived from this software without
	      specific prior written permission.

	THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
	"AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
	LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
	A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
	CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
	EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
	PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
	PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
	LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
	NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
	SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

/*
 * Created on Jul 19, 2006
 */
package net.sf.launch4j.formimpl;

import java.io.File;
import java.util.prefs.Preferences;

import javax.swing.JFileChooser;

/**
 * @author Copyright (C) 2006 Grzegorz Kowal
 */
public class FileChooser extends JFileChooser {
	private final Preferences _prefs;
	private final String _key;

	public FileChooser(Class clazz) {
		_prefs = Preferences.userNodeForPackage(clazz);
		_key = "currentDir-"
			+ clazz.getName().substring(clazz.getName().lastIndexOf('.') + 1);
		String path = _prefs.get(_key, null);
		if (path != null) {
			setCurrentDirectory(new File(path));

//===----------------------------------------------------------------------===//
//
// This source file is part of the Swift.org open source project
//
// Copyright (c) 2014 - 2017 Apple Inc. and the Swift project authors
// Licensed under Apache License v2.0 with Runtime Library Exception
//
// See https://swift.org/LICENSE.txt for license information
// See https://swift.org/CONTRIBUTORS.txt for the list of Swift project authors
//
//===----------------------------------------------------------------------===//

%{
stringSubscriptComment = """
  /// Subscripting strings with integers is not available.
  ///
  /// The concept of "the `i`th character in a string" has
  /// different interpretations in different libraries and system
  /// components.  The correct interpretation should be selected
  /// according to the use case and the APIs involved, so `String`
  /// cannot be subscripted with an integer.
  ///
  /// Swift provides several different ways to access the character
  /// data stored inside strings.
  ///
  /// - `String.utf8` is a collection of UTF-8 code units in the
  ///   string. Use this API when converting the string to UTF-8.
  ///   Most POSIX APIs process strings in terms of UTF-8 code units.
  ///
  /// - `String.utf16` is a collection of UTF-16 code units in
  ///   string.  Most Cocoa and Cocoa touch APIs process strings in
  ///   terms of UTF-16 code units.  For example, instances of
  ///   `NSRange` used with `NSAttributedString` and
  ///   `NSRegularExpression` store substring offsets and lengths in
  ///   terms of UTF-16 code units.
  ///
  /// - `String.unicodeScalars` is a collection of Unicode scalars.
  ///   Use this API when you are performing low-level manipulation
  ///   of character data.
  ///
  /// - `String.characters` is a collection of extended grapheme
  ///   clusters, which are an approximation of user-perceived
  ///   characters.
  ///
  /// Note that when processing strings that contain human-readable
  /// text, character-by-character processing should be avoided to
  /// the largest extent

      <trans-unit id="StringListProperty|Aliases|DisplayName">
        <source>Aliases</source>
        <target state="translated">Aliases</target>
        <note />
      </trans-unit>
      <trans-unit id="StringProperty|Guid|DisplayName">
        <source>CLSID</source>
        <target state="translated">CLSID</target>
        <note />
      </trans-unit>
      <trans-unit id="StringProperty|Guid|Description">
        <source>The GUID of the COM server.</source>
        <target state="translated">O GUID do servidor COM.</target>
        <note />
      </trans-unit>
      <trans-unit id="StringProperty|Identity|Description">
        <source>Security identity of the referenced assembly (see System.Reflection.Assembly.Evidence or System.Security.Policy.Evidence).</source>
        <target state="translated">Identidade de segurança do assembly referenciado (veja System.Reflection.Assembly.Evidence ou System.Security.Policy.Evidence).</target>
        <note />
      </trans-unit>
      <trans-unit id="StringProperty|Identity|DisplayName">
        <source>Identity</source>
        <target state="translated">Identidade</target>
        <note />
      </trans-unit>
      <trans-unit id="StringProperty|Lcid|DisplayName">
        <source>Locale</source>
        <target state="translated">Localidade</target>
        <note />
      </trans-unit>
      <trans-unit id="StringProperty|Lcid|Description">
        <source>The LCID of the COM server.</source>
        <target state="translated">O LCID do servidor COM.</target>
        <note />
      </trans-unit>
      <trans-unit id="IntProperty|VersionMajor|DisplayName">
        <source>Major Version</source>
        <target state="translated">Versão Principal</target>
        <note />
      </trans-unit>
      <trans-unit id="IntProperty|VersionMinor|DisplayName">
        <source>Minor Version</source>
        <

#include <climits>
#include <vector>
#include "third_party/googletest/src/googletest/include/gtest/gtest.h"
#include "test/codec_factory.h"
#include "test/encode_test_driver.h"
#include "test/i420_video_source.h"
#include "test/util.h"

namespace {

class ActiveMapTest
    : public ::libaom_test::CodecTestWith2Params<libaom_test::TestMode, int>,
      public ::libaom_test::EncoderTest {
 protected:
  static const int kWidth = 208;
  static const int kHeight = 144;

  ActiveMapTest() : EncoderTest(GET_PARAM(0)) {}
  virtual ~ActiveMapTest() {}

  virtual void SetUp() {
    InitializeConfig();
    SetMode(GET_PARAM(1));
    cpu_used_ = GET_PARAM(2);
  }

  virtual void PreEncodeFrameHook(::libaom_test::VideoSource *video,
                                  ::libaom_test::Encoder *encoder) {
    if (video->frame() == 0) {
      encoder->Control(AOME_SET_CPUUSED, cpu_used_);
    } else if (video->frame() == 3) {
      aom_active_map_t map = aom_active_map_t();
      /* clang-format off */
      uint8_t active_map[9 * 13] = {
        1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0,
        1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0,
        1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0,
        1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0,
        0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1,
        0, 0, 0, 0, 1,

/*
 * Copyright 1999-2019 Alibaba Group Holding Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.alibaba.chaosblade.exec.plugin.jvm.script.groovy;

import java.io.IOException;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.alibaba.chaosblade.exec.plugin.jvm.script.base.CompiledScript;
import com.alibaba.chaosblade.exec.plugin.jvm.script.base.ExecutableScript;
import com.alibaba.chaosblade.exec.plugin.jvm.script.base.ScriptEngine;
import com.alibaba.chaosblade.exec.plugin.jvm.script.base.ScriptException;

import groovy.lang.Binding;
import groovy.lang.GroovyClassLoader;
import groovy.lang.GroovyCodeSource;
import groovy.lang.Script;
import org.codehaus.groovy.ast.ClassCodeExpressionTransformer;
import org.codehaus.groovy.ast.ClassNode;
import org.codehaus.groovy.ast.expr.ConstantExpression;
import org.codehaus.groovy.ast.expr.Expression;
import org.codehaus.groovy.classgen.GeneratorContext;
import org.codehaus.groovy.control.CompilationFailedException;
import org.codehaus.groovy.control.CompilePhase;
import org.codehaus.gro

import com.sleepycat.je.Durability;
import com.sleepycat.je.EnvironmentConfig;

public class BJEConfig
{
	// public static final long DEFAULT_STORE_CACHE = 20*1024*1024; // 20MB
	public static final long DEFAULT_STORE_CACHE = 100 * 1024 * 1024; // 100MB
																		// Alain
																		// for
																		// tests
	public static final int DEFAULT_NUMBER_OF_STORAGE_CACHES = 1;

	private EnvironmentConfig envConfig;
	private DatabaseConfig dbConfig;

	private void resetDefaults(boolean readOnly)
	{
		envConfig.setReadOnly(readOnly);
		dbConfig.setReadOnly(readOnly);

		envConfig.setAllowCreate(!readOnly);
		dbConfig.setAllowCreate(!readOnly);

		// envConfig.setCacheSize(DEFAULT_STORE_CACHE);
		envConfig.setCachePercent(30);

		envConfig.setConfigParam(EnvironmentConfig.LOG_FILE_MAX,
				Long.toString(10000000 * 10l));
		envConfig.setConfigParam(
				EnvironmentConfig.CLEANER_LOOK_AHEAD_CACHE_SIZE,
				Long.toString(1024 * 1024));
		envConfig.setConfigParam(EnvironmentConfig.CLEANER_READ_SIZE,
				Long.toString(1024 * 1024));
	}

	public BJEConfig()
	{
		envConfig = new EnvironmentConfig();
		dbConfig = new DatabaseConfig();
		resetDefaults(false);
	}

	public EnvironmentConfig getEnvironmentConfig()
	{
		return envConfig;
	}

	public DatabaseConfig getDatabaseConfig()
	{
		return dbConfig;
	}

	public void configureTransactional()
	{
		envConfig.setTransactional(true);
		dbConfig.setTransactional(true);

		// envConfig.setLockDetectMode(LockDetectMode.RANDOM);

		Durability defaultDurability = new Durability(
				Durability.SyncPolicy.WRITE_NO_SYNC,
				Durability.SyncPolicy.NO_SYNC, // unused by non-HA applications.

/*
 * Copyright 2000-2009 JetBrains s.r.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.intellij.openapi.vcs.changes.actions;

import com.intellij.openapi.actionSystem.AnActionEvent;
import com.intellij.openapi.vcs.VcsDataKeys;
import com.intellij.openapi.vcs.changes.Change;
import com.intellij.openapi.vcs.changes.ChangeList;
import com.intellij.openapi.vcs.versionBrowser.CommittedChangeList;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

public abstract class RevertSelectedChangesAction extends RevertCommittedStuffAbstractAction {
  public static class Revert extends RevertSelectedChangesAction {
    public Revert() {
      super(true);
    }
  }

  public static class Apply extends RevertSelectedChangesAction {
    public Apply() {
      super(false);
    }
  }

  protected RevertSelectedChangesAction(boolean reverse) {
    super(reverse);
  }

  @Override
  protected boolean isEnabled(@NotNull AnActionEvent e) {
    return super.isEnabled(e) && allSelectedChangeListsAreRevertable(e);
  }

  private static boolean allSelectedChangeListsAreRevertable(@NotNull AnActionEvent e) {
    ChangeList[] changeLists = e.getData(VcsDataKeys.CHANGE_LISTS);
    if (changeLists == null) {
      return true;
    }
    for (ChangeList list :

  This software is covered by US Patent No. 8,185,551.
  This software is covered by US Patent No. 8,489,638.

PATENT RIGHTS GRANT:

  "THIS IMPLEMENTATION" means the copyrightable works distributed by
  Tokutek as part of the Fractal Tree project.

  "PATENT CLAIMS" means the claims of patents that are owned or
  licensable by Tokutek, both currently or in the future; and that in
  the absence of this license would be infringed by THIS
  IMPLEMENTATION or by using or running THIS IMPLEMENTATION.

  "PATENT CHALLENGE" shall mean a challenge to the validity,
  patentability, enforceability and/or non-infringement of any of the
  PATENT CLAIMS or otherwise opposing any of the PATENT CLAIMS.

  Tokutek hereby grants to you, for the term and geographical scope of
  the PATENT CLAIMS, a non-exclusive, no-charge, royalty-free,
  irrevocable (except as stated in this section) patent license to
  make, have made, use, offer to sell, sell, import, transfer, and
  otherwise run, modify, and propagate the contents of THIS
  IMPLEMENTATION, where such license applies only to the PATENT
  CLAIMS.  This grant does not include claims that would be infringed
  only as a consequence of further modifications of THIS
  IMPLEMENTATION.  If you or your agent or licensee institute or order
  or agree to the institution of patent litigation against any entity
  (including a cross-claim or counterclaim in a lawsuit) alleging that
  THIS IMPLEMENTATION constitutes direct or contributory patent
  infringement, or inducement of patent infringement, then any rights
  granted to you under this License shall terminate as of the date
  such litigation is filed.  If you or your agent or exclusive
  licensee institute or order or agree to the institution of a PATENT
  CHALLENGE, then Tokutek may terminate any rights granted to you
  under this License.
*/

#ident "Copyright (c) 2007-2013 Tokutek Inc.  All rights reserved."
#ident "The technology is licensed by the Massachusetts Institute of Technology,

/** @file Rect.h
	@author Jukka Jylänki

	This work is released to Public Domain, do whatever you want with it.
*/
#pragma once

#include <vector>

struct RectSize
{
	int width;
	int height;
};

struct Rect
{
	int x;
	int y;
	int width;
	int height;
};

/// Performs a lexicographic compare on (rect short side, rect long side).
/// @return -1 if the smaller side of a is shorter than the smaller side of b, 1 if the other way around.
///   If they are equal, the larger side length is used as a tie-breaker.
///   If the rectangles are of same size, returns 0.
int CompareRectShortSide(const Rect &a, const Rect &b);

/// Performs a lexicographic compare on (x, y, width, height).
int NodeSortCmp(const Rect &a, const Rect &b);

/// Returns true if a is contained in b.
inline bool IsContainedIn(const Rect &a, const Rect &b)
{
	return a.x >= b.x && a.y >= b.y 
		&& a.x+a.width <= b.x+b.width 
		&& a.y+a.height <= b.y+b.height;
}

class DisjointRectCollection
{
public:
	std::vector<Rect> rects;

	bool Add(const Rect &r)
	{
		// Degenerate rectangles are ignored.
		if (r.width == 0 || r.height == 0)
			return true;

		if (!Disjoint(r))
			return false;
		rects.push_back(r);
		return true;
	}

	void Clear()
	{
		rects.clear();
	}

	bool Disjoint(const Rect &r) const
	{
		// Degenerate rectangles are ignored.
		if (r.width == 0 || r.height == 0)
			return true;

		for(std::size_t i = 0; i < rects.size(); ++i)
			if

	/* Set the LNB polarity */
	if (state->config->lnb_polarity)
		cx24123_writereg(state, 0x32,
			cx24123_readreg(state, 0x32) | 0x02);

	if (state->config->dont_use_pll)
		cx24123_repeater_mode(state, 1, 0);

	return 0;
}

static int cx24123_set_voltage(struct dvb_frontend *fe,
			       enum fe_sec_voltage voltage)
{
	struct cx24123_state *state = fe->demodulator_priv;
	u8 val;

	val = cx24123_readreg(state, 0x29) & ~0x40;

	switch (voltage) {
	case SEC_VOLTAGE_13:
		dprintk("setting voltage 13V\n");
		return cx24123_writereg(state, 0x29, val & 0x7f);
	case SEC_VOLTAGE_18:
		dprintk("setting voltage 18V\n");
		return cx24123_writereg(state, 0x29, val | 0x80);
	case SEC_VOLTAGE_OFF:
		/* already handled in cx88-dvb */
		return 0;
	default:
		return -EINVAL;
	}

	return 0;
}

/* wait for diseqc queue to become ready (or timeout) */
static void cx24123_wait_for_diseqc(struct cx24123_state *state)
{
	unsigned long timeout = jiffies + msecs_to_jiffies(200);
	while (!(cx24123_readreg(state, 0x29) & 0x40)) {
		if (time_after(jiffies, timeout)) {
			err("%s: diseqc queue not ready, " \
				"command may be lost.\n", __func__);
			break;
		}
		msleep(10);
	}
}

static int cx24123_send_diseqc_msg(struct dvb_frontend *fe,
	struct dvb_diseqc_master_cmd *

      template <class T1, class T2>
      struct promote_args_2
      { // Promote, if necessary, & pick the wider of the two floating-point types.
        // for both parameter types, if integral promote to double.
        typedef typename promote_arg<T1>::type T1P; // T1 perhaps promoted.
        typedef typename promote_arg<T2>::type T2P; // T2 perhaps promoted.

        typedef typename mpl::if_<
          typename mpl::and_<is_floating_point<T1P>, is_floating_point<T2P> >::type, // both T1P and T2P are floating-point?
          typename mpl::if_< typename mpl::or_<is_same<long double, T1P>, is_same<long double, T2P> >::type, // either long double?
            long double, // then result type is long double.
            typename mpl::if_< typename mpl::or_<is_same<double, T1P>, is_same<double, T2P> >::type, // either double?
            double, // result type is double.
          float // else result type is float.
          >::type
          >::type,
          // else one or the other is a user-defined type:
          typename mpl::if_< typename mpl::and_<mpl::not_<is_floating_point<T2P> >, ::boost::is_convertible<T1P, T2P> >, T2P, T1P>::type>::type type;
      }; // promote_arg2
      // These full specialisations reduce mpl::if_ usage and speed up
      // compilation:
      template <> struct promote_args_2<float, float> { typedef float type; };
      template <> struct promote_args_2<double, double>{ typedef double type; };
      template <> struct promote_args_2<long double, long double> { typedef long double type; };
      template <> struct promote_args_2<int, int> {  typedef double type; };
      template <> struct promote_args_2<int, float> {  typedef double type; };
      template <> struct

		add_action( 'created_term', [ $this, 'action_sync_on_update' ] );
		add_action( 'edited_terms', [ $this, 'action_sync_on_update' ] );
		add_action( 'added_term_meta', [ $this, 'action_queue_meta_sync' ], 10, 2 );
		add_action( 'deleted_term_meta', [ $this, 'action_queue_meta_sync' ], 10, 2 );
		add_action( 'updated_term_meta', [ $this, 'action_queue_meta_sync' ], 10, 2 );
		add_action( 'delete_term', [ $this, 'action_sync_on_delete' ] );
		add_action( 'set_object_terms', [ $this, 'action_sync_on_object_update' ], 10, 2 );
	}

	/**
	 * Sync ES index with changes to the term being saved
	 *
	 * @param int $term_id Term ID.
	 * @since 3.1
	 */
	public function action_sync_on_update( $term_id ) {
		if ( $this->kill_sync() ) {
			return;
		}

		if ( ! current_user_can( 'edit_term', $term_id ) ) {
			return;
		}

		if ( apply_filters( 'ep_term_sync_kill', false, $term_id ) ) {
			return;
		}

		do_action( 'ep_sync_term_on_transition', $term_id );

		$this->sync_queue[ $term_id ] = true;

		// Find all terms in the hierarchy so we resync those as well
		$term      = get_term( $term_id );
		$children  = get_term_children( $term_id, $term->taxonomy );
		$ancestors = get_ancestors( $term_id, $term->taxonomy, 'taxonomy' );
		$hierarchy = array_merge( $ancestors, $children );

		foreach ( $hierarchy as $hierarchy_term_id ) {
			if (

/** \file
 * \brief Computes the orthogonal representation of a planar
 *        representation of a UML graph using the simple flow
 *        approach.
 *
 * \author Karsten Klein
 *
 * \par License:
 * This file is part of the Open Graph Drawing Framework (OGDF).
 *
 * \par
 * Copyright (C)<br>
 * See README.md in the OGDF root directory for details.
 *
 * \par
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * Version 2 or 3 as published by the Free Software Foundation;
 * see the file LICENSE.txt included in the packaging of this file
 * for details.
 *
 * \par
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * \par
 * You should have received a copy of the GNU General Public
 * License along with this program; if not, see
 * http://www.gnu.org/copyleft/gpl.html
 */

#pragma once

#include <ogdf/orthogonal/OrthoRep.h>
#include <ogdf/uml/PlanRepUML.h>


namespace ogdf {

class OGDF_EXPORT OrthoShaper
{
public:
	//! Types of network nodes: nodes and faces
	enum class NetworkNodeType { low, high, inner, outer };

	OrthoShaper() {
		setDefaultSettings();
	}

	~OrthoShaper() { }

	// Given a planar representation for a UML graph and its planar
	// combinatorial embedding, call() produces an orthogonal
	// representation using Tamassias bend minimization algorithm
	// with a flow network where every flow unit defines 90 degree angle
	// in traditional mode.

	void call(PlanRepUML &PG,
		CombinatorialEmbedding &E,
		OrthoRep &OR,
		bool fourPlanar = true);

	void call(PlanRep &PG,
		CombinatorialEmbedding &E,

        track wgEncodeLicrHistoneMefH3k27acMAdult8wksC57bl6StdPk
        parent wgEncodeLicrHistoneViewPeaks off
        shortLabel MEF 8w H3K27a
        longLabel MEF 8w H3K27ac Histone Modifications by ChIP-seq Peaks from ENCODE/LICR 
        subGroups view=Peaks age=1ADULT8WKS factor=H3K27AC cellType=MEF control=STD sex=M strain=C57BL6 
        type broadPeak
        color 65,105,225
        # subId=5728 dateSubmitted=2012-02-15

        track wgEncodeLicrHistoneLiverH3k27acMAdult8wksC57bl6StdPk
        parent wgEncodeLicrHistoneViewPeaks 
        shortLabel Lv 8w H3K27a 
        longLabel Liver 8w H3K27ac Histone Modifications by ChIP-seq Peaks from ENCODE/LICR
        subGroups view=Peaks age=1ADULT8WKS factor=H3K27AC cellType=LIVER control=STD sex=M strain=C57BL6 
        type broadPeak
        color 230,159,0
        # subId=5727 dateSubmitted=2012-02-15

        track wgEncodeLicrHistoneKidneyH3k27acMAdult8wksC57bl6StdPk
        parent wgEncodeLicrHistoneViewPeaks off
        shortLabel Kdy 8w H3K27a 
        longLabel Kidney 8w H3K27ac Histone Modifications by ChIP-seq Peaks from ENCODE/LICR 
        subGroups view=Peaks age=1ADULT8WKS factor=H3K27AC cellType=KIDNEY control=STD sex=M strain=C57BL6 
        type broadPeak
        color 204,121,167
        # subId=5726 dateSubmitted=2012-02-15

        track wgEncodeLicrHistoneSmintH3k04me3MAdult8wksC57bl6StdPk
        parent wgEncodeLicrHistoneViewPeaks off

#include "../cases.h"

template <class T>
void
test(const std::complex<T>& c, std::complex<T> x)
{
    assert(exp(c) == x);
}

template <class T>
void
test()
{
    test(std::complex<T>(0, 0), std::complex<T>(1, 0));
}

void test_edges()
{
    const unsigned N = sizeof(testcases) / sizeof(testcases[0]);
    for (unsigned i = 0; i < N; ++i)
    {
        std::complex<double> r = exp(testcases[i]);
        if (testcases[i].real() == 0 && testcases[i].imag() == 0)
        {
            assert(r.real() == 1.0);
            assert(r.imag() == 0);
            assert(std::signbit(testcases[i].imag()) == std::signbit(r.imag()));
        }
        else if (std::isfinite(testcases[i].real()) && std::isinf(testcases[i].imag()))
        {
            assert(std::isnan(r.real()));
            assert(std::isnan(r.imag()));
        }
        else if (std::isfinite(testcases[i].real()) && std::isnan(testcases[i].imag()))
        {
            assert(std::isnan(r.real()));
            assert(std::isnan(r.imag()));
        }
        else if (std::isinf(testcases[i].real()) && testcases[i].real() > 0 && testcases[i].imag() == 0)
        {
            assert(std::isinf(r.real()));
            assert(r.real() > 0);
            assert(r.imag() == 0);
            assert(std::signbit(testcases[i].imag()) == std::signbit(r.imag()));
        }
        else if (std::isinf(testcases[i].real()) && testcases[i].real() < 0 && std::isinf(testcases[i].imag()))
        {
            assert(r

        "total_routes": 8,
        "total_reserved_ports": 20
      },
      "relationships": {
        "organizations": {
          "data": {
            "guid": "9b370018-c38e-44c9-86d6-155c76801104"
          }
        },
        "spaces": {
          "data": [
            {
              "guid": "45bb0018-c38e-44c9-86d6-155c76803600"
            }
          ]
        }
      },
      "links": {
        "self": {
          "href": "https://api.example.org/v3/space_quotas/f919ef8a-e333-472a-8172-baaf2c30d301"
        },
        "organization": {
          "href": "https://api.example.org/v3/organizations/9b370018-c38e-44c9-86d6-155c76801104"
        }
      }
    },
    {
      "guid": "554bcf32-7032-4cb0-92bc-738f9d2089d3",
      "created_at": "2017-05-04T17:00:41Z",
      "updated_at": "2017-05-04T17:00:41Z",
      "name": "sancho-panza",
      "apps": {
        "total_memory_in_mb": 2048,
        "per_process_memory_in_mb": 1024,
        "total_instances": 5,
        "per_app_tasks": 2
      },
      "services": {
        "paid_services_allowed": true,
        "total_service_instances": 10,
        "total_service_keys": 20
      },
      "routes": {
        "total_routes": 8,
        "total_reserved_ports": 4
      },
      "relationships": {
        "organizations": {
          "data": {
            "guid": "9b370018-c38e-44c9-86d

\input psfig+
\include{spec-macros}

\addtolength{\oddsidemargin}{-.5in}
\addtolength{\evensidemargin}{-.5in}
\addtolength{\textwidth}{1in}
\addtolength{\topmargin}{-.5in}
\addtolength{\textheight}{1.0in}

\begin{document}

\maketitle

\parindent 0pc
\parskip   1pc

\pagebreak
\tableofcontents

\if\doOverviewAndConventions y
 \part{Overview and Conventions}
 \if\doOverview y \input{overview.tex} \else \blankchapter{Overview} \fi
 \if\doConventions y \input{conventions.tex} \else \blankchapter{Conventions} \fi
\else
 \blankpart{Overview and Conventions}
 \addtocounter{chapter}{2}
 \fi

\if\doGeometrySubstrate y
 \part{Geometry Substrate}
 \if\doGeometry y \input{geometry.tex} \else \blankchapter{Geometry} \fi
 \if\doBoundRect y \input{bounding-rectangles.tex} \else \blankchapter{Bounding Rectangles} \fi
 \if\doTransformations y \input{transformations.tex} \else \blankchapter{Transformations} \fi
\else
 \blankpart{Geometry Substrate}
 \addtocounter{chapter}{3}
 \fi

\if\doWindowingSubstrate y
 \part{Windowing Substrate}
 \input{silica.tex}
\else
 \blankpart{Windowing Substrate}
 \addtocounter{chapter}{5}
 \fi

\if\doBasicOutputFacilities y
 \part{Basic Output Facilities}
 \if\doDrawingOptions y \input{drawing-options.tex} \else \blankchapter{Drawing Options} \fi
 \if\doTextStyles y \input{text-styles.tex} \else \blankchapter{Text Styles} \fi
 \if\doGraphics y \input{graphics.tex} \else \blankchapter{Graphics} \fi
 \if\doColor y \input

The interfaces that Windows Driver Frameworks (WDF) provides to drivers are object-based. The framework defines several objects. These objects export [methods](framework-object-methods.md) (functions) and [properties](framework-object-properties.md) (data) that drivers can access. Framework objects also initiate [events](framework-object-events.md), which drivers can support by providing event callback functions.

Framework-based drivers never directly access framework objects. Instead, drivers reference the objects by *handles*, which the driver passes as input to object methods.

All framework objects have the following characteristics:

<a href="" id="reference-count"></a>*Reference count*  
The framework maintains a count of the number of references to each object. When the framework creates an object, it sets the object's reference count to one. When the framework has finished using an object, it decrements the reference count. The framework cannot delete the object until the reference count is decremented to zero, so drivers can prevent the deletion of an object by incrementing its reference count.

<a href="" id="context-space"></a>*Context space*  
Framework-based drivers can create object-specific context space for every framework object that the driver receives or creates. Drivers should store all object-specific data in an object's context space. For more information about context space, see [Framework Object Context Space](framework-object-context-space.md).

<a href="" id="deletion-callback-functions"></a>*Deletion callback functions*  
Drivers can register callback functions that the framework calls when it is deleting an object. The callback functions can remove driver-assigned resources, such as object-specific memory allocations. For more information about these callback functions, see [Framework Object Life Cycle](framework-object-life-cycle.md).

<a href="" id="parent-object"></a>*Parent object*  
All framework objects can have a parent object. The framework designates a default parent object for most objects. When a driver creates an object, it can designate a parent object that overrides the object's default parent object. To designate an object's parent object, drivers set the **ParentObject** member of the object's [**WDF\_OBJECT\_ATTRIBUTES**](/windows-hardware/drivers/ddi/wdfobject/ns-w

instance ExplGet m s => ExplGet m (Identity s) where
  {-# INLINE explGet #-}
  explGet (Identity s) e = Identity <$> explGet s e
  {-# INLINE explExists  #-}
  explExists  (Identity s) = explExists s

instance ExplSet m s => ExplSet m (Identity s) where
  {-# INLINE explSet #-}
  explSet (Identity s) e (Identity x) = explSet s e x
instance ExplMembers m s => ExplMembers m (Identity s) where
  {-# INLINE explMembers #-}
  explMembers (Identity s) = explMembers s
instance ExplDestroy m s => ExplDestroy m (Identity s) where
  {-# INLINE explDestroy #-}
  explDestroy (Identity s) = explDestroy s

T.makeInstances [2..8]

-- | Pseudocomponent indicating the absence of @a@.
--   Mainly used as e.g. @cmap $ \(a, Not b) -> c@ to iterate over entities with an @a@ but no @b@.
--   Can also be used to delete components, like @cmap $ \a -> (Not :: Not a)@ to delete every @a@ component.
data Not a = Not

-- | Pseudostore used to produce values of type @Not a@, inverts @explExists@, and destroys instead of @explSet@.
newtype NotStore s = NotStore s

instance Component c => Component (Not c) where
  type Storage (Not c) = NotStore (Storage c)

instance (Has w m c) => Has w m (Not c) where
  {-# INLINE getStore #-}
  getStore = NotStore <$> getStore

type instance Elem (NotStore s) = Not (Elem s)

instance ExplGet m s => ExplGet m (NotStore s) where
  {-# INLINE explGet #-}
  explGet _ _ = return Not
  {-# INLINE explExists #-}
  explExists (NotStore sa) ety = not <$> explExists sa ety

instance ExplDestroy m s => ExplSet m (NotStore s) where

        it("detects changes in 'renamingItem'", () => {
            nextState.renamingItem = true;

            expect(directoryListModel.stateChanged(prevState, nextState))
                .to.be.true;
        });

        it("detects changes in 'selectedIndex'", () => {
            nextState.selectedIndex = 1;

            expect(directoryListModel.stateChanged(prevState, nextState))
                .to.be.true;
        });

        it("detects changes in 'showHiddenItems'", () => {
            nextState.showHiddenItems = true;

            expect(directoryListModel.stateChanged(prevState, nextState))
                .to.be.true;
        });

        it("detects changes in 'isGotoOpen'", () => {
            nextState.isGotoOpen = true;

            expect(directoryListModel.stateChanged(prevState, nextState))
                .to.be.true;
        });
    });

    describe("propsChanged method", () => {
        let prevProps: IDirectoryListProps;
        let nextProps: IDirectoryListProps;

        let directoryManager: IMock<IDirectoryManager>;

        const statusNotifier = {} as IStatusNotifier;

        beforeEach(() => {
            directoryManager = Mock.ofType<IDirectoryManager>();

            const commonProps: IDirectoryListProps = {
                columnSizes: {
                    createdOn: 0,
                    lastModified: 25,
                    name: 50,
                    size: 25
                },
                directoryManager: directoryManager.object,
                id: "left",
                isSelectedPane: false,
                path: "/path/to/directory",
                sendPathUp: (path: string) => { },
                sendSelectedPaneUp: (paneToSelect: DirectoryPaneSide) => { },
                settingsManager: settingsManager.object,
                statusNotifier,
                theme: applicationTheme
            };

            prevProps = JSON.parse(JSON.stringify(commonProps));
            nextProps = JSON.parse(JSON.stringify(commonProps));
        });

        it("returns false when nothing has changed", () => {
            const result = directoryListModel.props

                    report.properties.chart.dataColumns = yKeys;


                    var customObjectData = xKeys[0];
                    report.properties.chart.dataAxis = {elementName:customObjectData.elementName,
                        queryName:'query1',
                        elementLabel:customObjectData.objectLabel,
                        id:customObjectData.id,
                        type:'bar',
                        color:'#000000'}

                    repaintReport(report,mode);
                }
            }

            if ( report.reportType == 'indicator')
            {
                //reportModel.prepareReport(report,'reportLayout',$scope.mode);
                repaintReport(report,mode);
            }
        }
    }


    this.getReportDataNextPage = function(report,page)
    {
        getReportDataNextPage(report,page);
    }

    function getReportDataNextPage(report,page)
    {

        queryModel.getQueryDataNextPage(report.query,page, function(data,sql,query, fromCache, executionTime){
                report.query.data.push.apply(report.query.data, data);
                report.query.fromCache = (fromCache);
                report.query.executionTime = (executionTime) ? executionTime : 0;
            });
    }

    this.repaintReport = function(report,mode)
    {
        this.report = report;
        repaintReport(report,mode);
    }

    function repaintReport(report,mode)
    {
        var data = report.query.data;

        if (data.length != 0)
            {
        switch(report.reportType)
            {
                case "grid":
                    {

                      //generateGrid(report,mode);
                      if (report.properties.grid && report.properties.grid.refresh)
                          report.properties.grid.refresh();
                    }
                    break;
                case "vertical-grid":
                    {
                      if (report.properties.verticalGrid && report.properties.verticalGrid.refresh)
                          report.properties.verticalGrid.refresh();
                    }
                    break;
                case 'chart-line':
                case 'chart-donut':
                case

var SetCache = require('./_SetCache'),
    arrayIncludes = require('./_arrayIncludes'),
    arrayIncludesWith = require('./_arrayIncludesWith'),
    arrayMap = require('./_arrayMap'),
    baseUnary = require('./_baseUnary'),
    cacheHas = require('./_cacheHas');

/** Used as the size to enable large array optimizations. */
var LARGE_ARRAY_SIZE = 200;

/**
 * The base implementation of methods like `_.difference` without support
 * for excluding multiple arrays or iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {Array} values The values to exclude.
 * @param {Function} [iteratee] The iteratee invoked per element.
 * @param {Function} [comparator] The comparator invoked per element.
 * @returns {Array} Returns the new array of filtered values.
 */
function baseDifference(array, values, iteratee, comparator) {
  var index = -1,
      includes = arrayIncludes,
      isCommon = true,
      length = array.length,
      result = [],
      valuesLength = values.length;

  if (!length) {
    return result;
  }
  if (iteratee) {
    values = arrayMap(values, baseUnary(iteratee));
  }
  if (comparator) {
    includes = arrayIncludesWith;
    isCommon = false;
  }
  else if (values.length >= LARGE_ARRAY_SIZE) {
    includes = cacheHas;
    isCommon = false;
    values = new SetCache(values);
  }
  outer:
  while (++index < length) {
    var value = array[index],
        computed = iteratee == null ? value : iteratee(value);

    value = (comparator || value !== 0) ? value : 0;
    if (isCommon && computed === computed) {
      var valuesIndex = valuesLength;
      while (valuesIndex--) {
        if (values[valuesIndex] === computed) {
          continue outer;
        }
      }
      result.push(value);
    

The difference between this and the standard 'many' construct is that this one
returns any errors reported by the item parser.
-}
manyUntilChar :: Char       -- ^ The end character
              -> Parser a   -- ^ The item parser
              -> Parser [a]
manyUntilChar endChar itemParser = do
    mc <- peekChar
    if mc == Just endChar
      then return []
      else (:) <$> itemParser <*> manyUntilChar endChar itemParser

{-|'skipCharParser' skips the given character, using the provided parser to
consume whatever is after the character.
-}
skipCharParser :: Parser () -> Char -> Parser ()
skipCharParser skipWhitespace c = do
    void(Parser.char c)
    skipWhitespace

{-|'sepByCharWithDelimitingChars' parses a list of 0 or more 'a' items.

The list must start with the start character and end with the end character.
The separator character should occur between items. The parser uses
the skipping parser to consume input after these.

The difference between this and the standard 'sepBy' construct is that this one
returns any errors reported by 'itemParser'
-}
sepByCharWithDelimitingChars
    :: Parser()   -- ^ Skipping parser
    -> Char       -- ^ The start character
    -> Char       -- ^ The end character
    -> Char       -- ^ The separator character
    -> Parser a   -- ^ The item perser
    -> Parser [a]
sepByCharWithDelimitingChars
    skipWhitespace firstChar endChar delimiter itemParser = do
        skipCharParser skipWhitespace firstChar
        mc <- peekChar
        case mc of
            Nothing -> fail "Unexpected end of input."
            Just c
                | c == endChar ->
                    skipCharParser skipWhitespace endChar $> []
                | otherwise ->
                    (:) <$> itemParser <*> sepByCharWithDelimitingChars'
  where
    sepByCharWithDelimitingChars' = do
        mc <- peekChar
        case mc of
            Nothing -> fail "Unexpected end of input."
            Just c
                | c == endChar ->


InputParameters
CreateProblemDefaultAction::validParams()
{
  InputParameters params = Action::validParams();
  params.addPrivateParam<bool>("_solve");
  return params;
}

CreateProblemDefaultAction::CreateProblemDefaultAction(InputParameters parameters)
  : Action(parameters)
{
}

void
CreateProblemDefaultAction::act()
{
  if (_current_task == "determine_system_type")
  {
    // Determine whether the Executioner is derived from EigenExecutionerBase and
    // set a flag on MooseApp that can be used during problem construction.
    bool use_nonlinear = true;
    bool use_eigenvalue = false;
    auto p = _awh.getActionByTask<CreateExecutionerAction>("setup_executioner");
    if (p)
    {
      auto & exparams = p->getObjectParams();
      use_nonlinear = !(exparams.isParamValid("_eigen") && exparams.get<bool>("_eigen"));
      use_eigenvalue =
          (exparams.isParamValid("_use_eigen_value") && exparams.get<bool>("_use_eigen_value"));
    }

    _app.useNonlinear() = use_nonlinear;
    _app.useEigenvalue() = use_eigenvalue;
    return;
  }

  // act only if we have mesh
  if (_mesh.get() != NULL)
  {
    // Make sure the problem hasn't already been created elsewhere
    if (!_problem)
    {
      std::string type;
      if (_app.useEigenvalue())
        type = "EigenProblem";
      else
        type = "FEProblem";
      auto params = _factory.getValidParams(type);

      // apply common parameters of the object held by CreateProblemAction to honor user inputs in
      // [Problem]
      auto p = _awh.getActionByTask<CreateProblemAction>("create_problem");
      if (p)
        params.applyParameters(p->getObjectParams());

      params.set<MooseMesh *>("mesh") = _mesh.

            <dxl:Properties>
              <dxl:Cost StartupCost="0" TotalCost="431.000069" Rows="1.000000" Width="8"/>
            </dxl:Properties>
            <dxl:ProjList>
              <dxl:ProjElem ColId="18" Alias="a">
                <dxl:Ident ColId="18" ColName="a" TypeMdid="0.23.1.0"/>
              </dxl:ProjElem>
              <dxl:ProjElem ColId="19" Alias="b">
                <dxl:Ident ColId="19" ColName="b" TypeMdid="0.23.1.0"/>
              </dxl:ProjElem>
            </dxl:ProjList>
            <dxl:PartitionSelector RelationMdid="0.322247.1.1" PartitionLevels="1" ScanId="3">
              <dxl:Properties>
                <dxl:Cost StartupCost="10" TotalCost="100" Rows="100" Width="4"/>
              </dxl:Properties>
              <dxl:ProjList/>
              <dxl:PartEqFilters>
                <dxl:ConstValue TypeMdid="0.16.1.0" Value="true"/>
              </dxl:PartEqFilters>
              <dxl:PartFilters>
                <dxl:Or>
                  <dxl:Or>
                    <dxl:ArrayComp OperatorName="=" OperatorMdid="0.96.1.0" OperatorType="Any">
                      <dxl:ConstValue TypeMdid="0.23.1.0" Value="0"/>
                      <dxl:PartListValues Level="0" ResultType="0.1007.1.0" ElementType="0.23.1.0"/>
                    </dxl:ArrayComp>
                    <dxl:DefaultPart Level="0"/>
                  </dxl:Or>
                  <dxl:Or>
                    <dxl:ArrayComp OperatorName="=" OperatorMdid="0.96.1.0" OperatorType="Any">
                      <dxl:ConstValue TypeMdid="0.23

  {
    std::ofstream command_file(command_file_name());

    // This marks the command file as UTF-8, which Visual Studio
    // understands.
    command_file << char(0xef) << char(0xbb) << char(0xbf);

    command_file << "/nologo" << '\n';
    command_file << "/E" << '\n';

    // This option will make CL produce utf-8 output, as
    // opposed to 8-bit with some code page.
    // It only works on Visual Studio 2015 or newer.
    command_file << "/source-charset:utf-8" << '\n';

    command_file << "/D__CPROVER__" << "\n";
    command_file << "/D__WORDSIZE=" << config.ansi_c.pointer_width << "\n";

    if(pointer_diff_type()==signed_long_long_int_type())
    {
      command_file << "\"/D__PTRDIFF_TYPE__=long long int\""  << "\n";
      // yes, both _WIN32 and _WIN64 get defined
      command_file << "/D_WIN64" << "\n";
    }
    else if(config.ansi_c.int_width == 16 && config.ansi_c.pointer_width == 32)
    {
      // 16-bit LP32 is an artificial architecture we simulate when using --16
      DATA_INVARIANT(
        pointer_diff_type() == signed_long_int_type(),
        "Pointer difference expected to be long int typed");
      command_file << "/D__PTRDIFF_TYPE__=long" << '\n';
    }
    else
    {
      DATA_INVARIANT(
        pointer_diff_type()==signed_int_type(),
        "Pointer difference expected to be int typed");
      command_file << "/D__PTRDIFF_TYPE__=int" << "\n";
    }

    if(config.ansi_c.char_is_unsigned)
      command_file << "/J" << "\n"; // This causes _CHAR_UNSIGNED to be defined

    for(const auto

    public HttpClientResponse request(String path) {
        return request("GET", path, (byte[]) null);

    }

    public HttpClientResponse request(String method, String path) {
        return request(method, path, (byte[]) null);
    }

    public HttpClientResponse request(String method, String path, byte[] data) {
        ObjectMapper mapper = new ObjectMapper();
        URL url;
        try {
            url = new URL(baseUrl, path);
        } catch (MalformedURLException e) {
            throw new ElasticsearchException("Cannot parse " + path, e);
        }

        HttpURLConnection urlConnection;
        try {
            urlConnection = (HttpURLConnection) url.openConnection();
            urlConnection.setRequestMethod(method);
            if (data != null) {
                urlConnection.setDoOutput(true);
            }
            if (encodedAuthorization != null) {
                urlConnection.setRequestProperty("Authorization", "Basic " +
                        encodedAuthorization);
            }

            urlConnection.connect();
        } catch (IOException e) {
            throw new ElasticsearchException("", e);
        }

        if (data != null) {
            OutputStream outputStream = null;
            try {
                outputStream = urlConnection.getOutputStream();
                outputStream.write(data);
            } catch (IOException e) {
                throw new ElasticsearchException("", e);
            } finally {
                if (outputStream != null) {
                    try {
                        outputStream.close();
                    } catch (IOException e) {
                        throw new ElasticsearchException("", e);
                    }
                }
            }
        }

        int errorCode = -1;
        try {
            errorCode = urlConnection.getResponseCode();
            InputStream inputStream = urlConnection.getInputStream();
            return new HttpClientResponse(mapper.readValue(inputStream, Map.class), errorCode, null);
        } catch (IOException e) {
            InputStream errStream = urlConnection.getErrorStream();
            String body = null;
            try {
                body = Streams.copyToString(new InputStreamReader(errStream));
            } catch (IOException

cat << "EOF"
   _____ _    _ _____   ____    _  _______ _      _      ______ _____
  / ____| |  | |  __ \ / __ \  | |/ /_   _| |    | |    |  ____|  __ \
 | (___ | |  | | |  | | |  | | | ' /  | | | |    | |    | |__  | |__) |
  \___ \| |  | | |  | | |  | | |  <   | | | |    | |    |  __| |  _  /
  ____) | |__| | |__| | |__| | | . \ _| |_| |____| |____| |____| | \ \
 |_____/ \____/|_____/ \____/  |_|\_\_____|______|______|______|_|  \_\


EOF



# CANARY
}


intro()
{

#echo "${BOLD}${YELLOW}[+] Intro ${RESET}" 

who=`whoami` 2>/dev/null 
echo -e "${BLUE} @TH3_ACE - BLAIS David"
echo -e "${BLUE} Contribute and collaborate to the KILLER project @ https://github.com/TH3xACE"
echo -e "\n" 
echo -e "${BOLD}${GREEN}[+] Intro ${RESET}" 
echo -e "${BOLD}${YELLOW}Scan started at:${RESET}"; date 
echo -e "\n"
echo -e "Current user: $who"
echo -e "\n" 


if [ "$report" ]; then 
	echo -e "${BOLD}${YELLOW}[+] Report name: ${RESET} $report " 
else 
	:
fi

if [ "$export" ]; then 
	echo -e "${BOLD}${YELLOW}[+] Export location: ${RESET} $export" 
else 
	:
fi

echo -e "\n" 

# PHASE 2
#if [ "$thorough" ]; then 
#	echo "[+] Thorough tests = Enabled" 
#else 
#	

    if(Ext.toolbar.Paging){
        Ext.apply(Ext.PagingToolbar.prototype, {
            beforePageText : "Puslapis",
            afterPageText  : "iš {0}",
            firstText      : "Pirmas puslapis",
            prevText       : "Ankstesnis pusl.",
            nextText       : "Kitas puslapis",
            lastText       : "Pakutinis pusl.",
            refreshText    : "Atnaujinti",
            displayMsg     : "Rodomi įrašai {0} - {1} iš {2}",
            emptyMsg       : 'Nėra duomenų'
        });
    }

    if(Ext.form.field.Text){
        Ext.apply(Ext.form.field.Text.prototype, {
            minLengthText : "Minimalus šio lauko ilgis yra {0}",
            maxLengthText : "Maksimalus šio lauko ilgis yra {0}",
            blankText     : "Šis laukas yra privalomas",
            regexText     : "",
            emptyText     : null
        });
    }

    if(Ext.form.field.Number){
        Ext.apply(Ext.form.field.Number.prototype, {
            minText : "Minimalus šio lauko ilgis yra {0}",
            maxText : "Maksimalus šio lauko ilgis yra {0}",
            nanText : "{0} yra neleistina reikšmė"
        });
    }

    if(Ext.form.field.Date){
        Ext.apply(Ext.form.field.Date.prototype, {
            disabledDaysText  : "Neprieinama",
            disabledDatesText : "Neprieinama",
            minText           : "Šiame lauke data turi būti didesnė už {0}",
            maxText           : "Šiame lauke data turi būti mažesnėė už {0}",
            invalidText       : "{0} yra neteisinga data

    <scenes>
        <!--View Controller-->
        <scene sceneID="EHf-IW-A2E">
            <objects>
                <viewController id="01J-lp-oVM" sceneMemberID="viewController">
                    <layoutGuides>
                        <viewControllerLayoutGuide type="top" id="Ydg-fD-yQy"/>
                        <viewControllerLayoutGuide type="bottom" id="xbc-2k-c8Z"/>
                    </layoutGuides>
                    <view key="view" contentMode="scaleToFill" id="Ze5-6b-2t3">
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <imageView opaque="NO" clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="center" image="LaunchImage" translatesAutoresizingMaskIntoConstraints="NO" id="YRO-k0-Ey4">
                            </imageView>
                        </subviews>
                        <color key="backgroundColor" red="1" green="1" blue="1" alpha="1" colorSpace="custom" customColorSpace="sRGB"/>
                        <constraints>
                            <constraint firstItem="YRO-k0-Ey4" firstAttribute="centerX" secondItem="Ze5-6b-2t3" secondAttribute="centerX" id="1a2-6s-vTC"/>
                            <constraint firstItem="YRO-k0-Ey4" firstAttribute="centerY" secondItem="Ze5-6b-2t3" secondAttribute="centerY" id="4X2-HB-R7a"/>
                        </constraints>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="iYj-Kq-Ea1" userLabel="First Responder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="53" y="375"/>
        </scene>
    </scenes>
    <resources>
        <image name="LaunchImage" width="168" height="185"/>
    </resources>


#include <vector>

#include "caffe/layers/flatten_layer.hpp"

namespace caffe {

template <typename Dtype>
void FlattenLayer<Dtype>::Reshape(const vector<Blob<Dtype>*>& bottom,
      const vector<Blob<Dtype>*>& top) {
  CHECK_NE(top[0], bottom[0]) << this->type() << " Layer does not "
      "allow in-place computation.";
  const int start_axis = bottom[0]->CanonicalAxisIndex(
      this->layer_param_.flatten_param().axis());
  const int end_axis = bottom[0]->CanonicalAxisIndex(
      this->layer_param_.flatten_param().end_axis());
  vector<int> top_shape;
  for (int i = 0; i < start_axis; ++i) {
    top_shape.push_back(bottom[0]->shape(i));
  }
  const int flattened_dim = bottom[0]->count(start_axis, end_axis + 1);
  top_shape.push_back(flattened_dim);
  for (int i = end_axis + 1; i < bottom[0]->num_axes(); ++i) {
    top_shape.push_back(bottom[0]->shape(i));
  }
  top[0]->Reshape(top_shape);
  CHECK_EQ(top[0]->count(), bottom[0]->count());
}

template <typename Dtype>
void FlattenLayer<Dtype>::Forward_cpu(const vector<Blob<Dtype>*>& bottom,
      const vector<Blob<Dtype>*>& top) {
  top[0]->ShareData(*bottom[0]);
}

template <typename Dtype>
void FlattenLayer<Dtype>::Backward_cpu(const vector<Blob<Dtype>*>& top,
      const vector<bool>& propagate_down, const vector<Blob<Dtype>*>& bottom) {
  bottom[0]->ShareDiff(*top[0]);
}

INSTANTIATE_CLASS(FlattenLayer);
REGISTER_LAYER_CLASS(Flatten);

}  

@USERS=adm bin daemon ftp guest listen lp mysql noaccess nobody nobody4 nuucp operator root smmsp smtp sshd sys test unknown uucp web www
@PASSWORDDIRS=/ /admin/ /clients/ /pass/ /password/ /passwords/ /store/ /users/ /access/ /members/ /private/ /ccbill/ /dmr/ /mastergate/ /dmr/ /epoch/ /netbilling/ /webcash/ /wwwjoin/ /etc/security/
@PASSWORDFILES=admins clients pass password passwords passwd passwd.adjunct store users .htpasswd .passwd
@PHPMYADMIN=/3rdparty/phpMyAdmin/ /phpMyAdmin/ /3rdparty/phpmyadmin/ /phpmyadmin/ /pma/
@HTTPFOUND=200 301 302 403
@FCKEDITOR=/fckeditor/ /FCKeditor/ /Script/fckeditor/ /sites/all/modules/fckeditor/fckeditor/ /modules/fckeditor/fckeditor/ /class/fckeditor/ /inc/fckeditor/ /sites/all/libraries/fckeditor/ /js/editor/fckeditor/ /includes/fckeditor/ /include/fckeditor/ /modules/fckeditor/ /plugins/fckeditor/
@CRYSTALREPORTS=/ /CrystalReports/ /crystal/ /businessobjects/ /crystal/enterprise10/ /crystal/Enterprise10/ePortfolio/en/
@OWNCLOUD=/ /cloud/ /owncloud/ /ownCloud/ /OwnCloud/
@OCFILES=data/owncloud.log data/htaccesstest.txt data/owncloud.db
@SECLORE=/ /filesecure/ /policyserver/
@SHELLSHOCK= admin.cgi administrator.cgi authLogin.cgi bb-hist.sh banner.cgi book.cgi cgiinfo.cgi cgitest.py cgi_wrapper contact.cgi count.cgi defaultwebpage.cgi download.cgi entropysearch.cgi env.cgi environment.cgi ezmlm-browse formmail.cgi FormMail-clone.cgi guestbook.cgi helpdesk.cgi index.cgi

![](http://ww1.sinaimg.cn/large/6e5705a5gy1fw9ukjgn0vj20z60f1tb5.jpg)

### 5.2.Raft关键点设计 

#### 5.2.1.存储设计 

##### 5.2.1.1.	Log存储设计

VDL Server中，存在两个日志逻辑视图。一个是Raft的日志（对内），一个是Log（对外）。Raft日志除了存储Log信息外，还会存储Raft算法产生的信息 。在存储设计中，需要考虑合并这两个日志，将两次IO合并成一次IO。

下图是一个Raft Group的存储结构图：

![](http://ww1.sinaimg.cn/large/6e5705a5gy1fw9um5mjqrj20z80kcn07.jpg)

**Raft Log**

Raft算法使用的日志，用于存储Raft信息与Client发送的Log。Raft Log保证落盘与Raft Commit后才会ACK。

Raft Log由多个固定大小的Segments组成，这便于日志数据的删除。每个Segment由多个日志组成，每个日志由Raft Info与Log Data组成。

1. Raft Info：包括日志类型与Raft的信息，如Term、Index等。

2. Log Data：根据日志类型，存放Raft的日志数据或者Client发送的Log数据。

VDL Server会在内存中缓存一段最新的Raft Log，便于Consumer能快速地Tailing Read，并且不会产生磁盘IO。

 

**Raft Index**

用于存储Raft Log

// replicaSetLister implements the ReplicaSetLister interface.
type replicaSetLister struct {
	indexer cache.Indexer
}

// NewReplicaSetLister returns a new ReplicaSetLister.
func NewReplicaSetLister(indexer cache.Indexer) ReplicaSetLister {
	return &replicaSetLister{indexer: indexer}
}

// List lists all ReplicaSets in the indexer.
func (s *replicaSetLister) List(selector labels.Selector) (ret []*v1beta1.ReplicaSet, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1beta1.ReplicaSet))
	})
	return ret, err
}

// ReplicaSets returns an object that can list and get ReplicaSets.
func (s *replicaSetLister) ReplicaSets(namespace string) ReplicaSetNamespaceLister {
	return replicaSetNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ReplicaSetNamespaceLister helps list and get ReplicaSets.
type ReplicaSetNamespaceLister interface {
	// List lists all ReplicaSets in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1beta1.ReplicaSet, err error)
	// Get retrieves the ReplicaSet from the indexer for a given namespace and name.
	Get(name string) (*v1beta1.ReplicaSet, error)
	ReplicaSetNamespaceListerExpansion
}

// replicaSetNamespaceLister implements the ReplicaSetNamespaceLister
// interface.
type replicaSetNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ReplicaSets in the indexer for a given namespace.
func (s replicaSetNamespaceLister) List(selector labels.Selector) (ret []*v1beta1.ReplicaSet, err error) {
	err = cache.ListAllByNamespace(

					<Time tid="t19" type="relTime">当时</Time>
					<Object sid="s19,s20,s21">大客车</Object>向左
					<Denoter did="d19" type="movement">过</Denoter>
					<Location lid="l19">中央隔离带</Location>
				</Event>，
				<Event eid="e20">再
					<Denoter did="d20" type="action">冲开</Denoter>
					<Object oid="o20">对向车道护栏</Object>
				</Event>，
				<Event eid="e21">
					<Denoter did="d21" type="action">翻覆</Denoter>到
					<Location lid="l21">护坡下</Location>
				</Event>。
			</Sentence>
			<Sentence>
				<Event eid="e22">
					<Object sid="s22">客车</Object>
					<Time tid="t22" type="relTime">事发时</Time>
					<Denoter did="d22" type="action">载客</Denoter>
					<Participant oid="o22">49人</Participant>
				</Event>。
			</Sentence>
		</Paragraph> 　　 
		<Paragraph>
			<Sentence>
				<Event eid="e23">截止记者
					<Time tid="t23" type="relTime">发稿时</Time>，
					<Participant oid="o23,o24">伤员</Participant>已经全部
					<Denoter did="d23" type="movement">送往</Denoter>医院
				</Event>
				<Event eid="e24">
					<Denoter did="d24" type="operation">治疗</Denoter>
				</Event>，
				<Event eid="e25">
					<Participant sid="s25">高警</Participant>和
					<Participant sid="s25">路

import hashlib
import time

from django.core.cache import caches, DEFAULT_CACHE_ALIAS

from corehq.project_limits.rate_counter.interfaces import AbstractRateCounter

REDIS = caches[DEFAULT_CACHE_ALIAS]
LOCMEM = caches['locmem']


class SlidingWindowRateCounter(AbstractRateCounter):
    """
    A "Sliding Window Over Fixed Grains" approach that approximates perfect sliding window

    A perfect sliding window approach would require keeping the timestamp of every event
    and count the number that fall between now and now - window_duration;
    for lower memory and performance overhead we instead approximate that
    by dividing time up into fixed "grains", i.e. sub-windows,
    over which we slide the larger window.
    For the earliest grain which is sliding out of the window,
    we assume linear distribution of events over time, and thus compute its contribution
    to the total as (% overlap of grain with our window) * (events in grain).

    See a description of this approach (with grains_per_window=1) here:
    https://konghq.com/blog/how-to-design-a-scalable-rate-limiting-algorithm/

    """
    def __init__(self, key, window_duration, window_offset=0, grains_per_window=1,
                 memoize_timeout=15.0, _FixedWindowRateCounter=None):
        """

        :param key: short description of the window e.g. "week"
        :param window_duration: length of the window in seconds
        :param window_offset: offset from epoch of window boundary
        :param grains_per_window: How many grains the window should be divided into
            (higher number = more accuracy)
        :param memoize_timeout: how long to memoize the information in memory in seconds
            This is the upper limit on how long a `get` could return a stale value.
        """
        _FixedWindowRateCounter = _FixedWindowRateCounter or FixedWindowRateCounter
        self.key = key
        self.window_duration = window_duration
        self.window_offset = window_offset
        self.grains_per_window = grains_

        <android.support.design.widget.TextInputLayout
            android:id="@+id/student_name_layout"
            android:hint="Place to type name"
            android:layout_width="match_parent"
            android:layout_height="wrap_content">

            <EditText
                android:id="@+id/student_name"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"/>

        </android.support.design.widget.TextInputLayout>

        <android.support.design.widget.TextInputLayout
            android:id="@+id/student_id_layout"
            android:hint="Place to type id"
            android:layout_width="match_parent"
            android:layout_height="wrap_content">

            <EditText
                android:inputType="number"
                android:id="@+id/student_id"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"/>

        </android.support.design.widget.TextInputLayout>

        <android.support.design.widget.TextInputLayout
            android:id="@+id/student_grade_layout"
            android:hint="Place to type grade"
            android:layout_width="match_parent"
            android:layout_height="wrap_content">

            <EditText
                android:maxLength="1"
                android:id="@+id/student_grade"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"/>

        </android.support.design.widget.TextInputLayout>

        <Switch
            android:text="Is student passing?"
            android:id="@+id/student_is_passing"
            android:layout_width="match_parent"
            android:layout_height="wrap_content" />

        <Button
            android:text="SAVE"
            android:id="@+id/save_button"
            android:layout_gravity="center"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content" />

        <Button
            android:text="RESTORE"
            android:id="@+id/restore_button

    if (KeyCodes.isCharacterKey(key) || (key in specialTextModifiers)) {
      assertTrue(
          'Expected key to modify text: ' + keyId,
          KeyCodes.isTextModifyingKeyEvent(fakeEvent));
    } else {
      assertFalse(
          'Expected key to not modify text: ' + keyId,
          KeyCodes.isTextModifyingKeyEvent(fakeEvent));
    }
  }

  for (var i = KeyCodes.FIRST_MEDIA_KEY; i <= KeyCodes.LAST_MEDIA_KEY; i++) {
    var fakeEvent = createEventWithKeyCode(i);
    assertFalse(
        'Expected key to not modify text: ' + i,
        KeyCodes.isTextModifyingKeyEvent(fakeEvent));
  }
}

function testKeyCodeZero() {
  var zeroEvent = createEventWithKeyCode(0);
  assertEquals(
      !goog.userAgent.GECKO, KeyCodes.isTextModifyingKeyEvent(zeroEvent));
  assertEquals(
      goog.userAgent.WEBKIT || goog.userAgent.EDGE, KeyCodes.isCharacterKey(0));
}

function testPhantomKey() {
  // KeyCode 255 deserves its own test to make sure this does not regress,
  // because it's so weird. See the comments in the KeyCode enum.
  var fakeEvent = createEventWithKeyCode(goog.events.KeyCodes.PHANTOM);
  assertFalse(
      'Expected phantom key to not modify text',
      KeyCodes.isTextModifyingKeyEvent(fakeEvent));
  assertFalse(KeyCodes.isCharacterKey(fakeEvent));
}

function testNonUsKeyboards() {
  var fakeEvent = createEventWithKeyCode(1092 /* Russian a */);
  assertTrue(
      'Expected key to not modify text: 1092',
      KeyCodes.isTextModifyingKeyEvent(fakeEvent));
}

function createEventWithKeyCode(i) {
  var fakeEvent = new goog.events.BrowserEvent('keydown');
  fakeEvent.keyCode = i;
  return fakeEvent;


/*---------------------------------------------------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     |
    \\  /    A nd           | Copyright (C) 2011-2013 OpenFOAM Foundation
     \\/     M anipulation  |
-------------------------------------------------------------------------------
License
    This file is part of OpenFOAM.

    OpenFOAM is free software: you can redistribute it and/or modify it under
    the terms of the GNU General Public License as published by the Free
    Software Foundation, either version 3 of the License, or (at your option)
    any later version.

    OpenFOAM is distributed in the hope that it will be useful, but WITHOUT ANY
    WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
    FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
    details.

    You should have received a copy of the GNU General Public License along with
    OpenFOAM.  If not, see <http://www.gnu.org/licenses/>.

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

\mainpage OpenFOAM&reg;: open source CFD

\section about About OpenFOAM

    OpenFOAM is a free, open source CFD software package released free and
    open-source under the GNU General Public License by the,
    <a href="http://www.openfoam.org">OpenFOAM Foundation</a>.  It has a large
    user base across most areas of engineering and science, from both commercial
    and academic organisations.  OpenFOAM has an extensive range of features to
    solve anything from complex fluid flows involving chemical reactions,
    turbulence and heat transfer, to solid dynamics and electromagnetics.
    <a href="http://www.openfoam.org/features">More ...</a>


\section layout Code Layout

    The OpenFOAM source code comprises of four main components:
    - src:
        the core OpenFOAM source code

    - applications:
        collections of library functionality wrapped up into applications,
        such as solvers and utilities

/*
 * Copyright 2008 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */
package java.util;

import static javaemul.internal.Coercions.ensureInt;

import java.io.Serializable;

/**
 * Implementation of Map interface based on a hash table. <a
 * href="http://java.sun.com/j2se/1.5.0/docs/api/java/util/HashMap.html">[Sun
 * docs]</a>
 *
 * @param <K> key type
 * @param <V> value type
 */
public class HashMap<K, V> extends AbstractHashMap<K, V> implements Cloneable,
    Serializable {

  /**
   * Ensures that RPC will consider type parameter K to be exposed. It will be
   * pruned by dead code elimination.
   */
  @SuppressWarnings("unused")
  private K exposeKey;

  /**
   * Ensures that RPC will consider type parameter V to be exposed. It will be
   * pruned by dead code elimination.
   */
  @SuppressWarnings("unused")
  private V exposeValue;

  public HashMap() {
  }

  public HashMap(int ignored) {
    super(ignored);
  }

  public HashMap(int ignored, float alsoIgnored) {
    super(ignored, alsoIgnored);
  }

  public HashMap(Map<? extends K, ? extends V> toBeCopied) {
    super(toBeCopied);
  }

  public Object clone() {
    return new HashMap<K, V>(this);
  }

  @Override
  boolean equals(Object value

/*
 * arch/arm/mach-at91/include/mach/at91_shdwc.h
 *
 * Copyright (C) 2007 Andrew Victor
 * Copyright (C) 2007 Atmel Corporation.
 *
 * Shutdown Controller (SHDWC) - System peripherals regsters.
 * Based on AT91SAM9261 datasheet revision D.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 */

#ifndef AT91_SHDWC_H
#define AT91_SHDWC_H

#define AT91_SHDW_CR		(AT91_SHDWC + 0x00)	/* Shut Down Control Register */
#define		AT91_SHDW_SHDW		(1    << 0)		/* Shut Down command */
#define		AT91_SHDW_KEY		(0xa5 << 24)		/* KEY Password */

#define AT91_SHDW_MR		(AT91_SHDWC + 0x04)	/* Shut Down Mode Register */
#define		AT91_SHDW_WKMODE0	(3 << 0)		/* Wake-up 0 Mode Selection */
#define			AT91_SHDW_WKMODE0_NONE		0
#define			AT91_SHDW_WKMODE0_HIGH		1
#define			AT91_SHDW_WKMODE0_LOW		2
#define			AT91_SHDW_WKMODE0_ANYLEVEL	3
#define		AT91_SHDW_CPTWK0	(0xf << 4)		/* Counter On Wake Up 0 */
#define			AT91_SHDW_CPTWK0_(x)	((x) << 4)
#define		AT91_SHDW_RTTWKEN	(1   << 16)		/* Real Time Timer Wake-up Enable */

#define AT91_SHDW_SR		(AT91_SHDWC + 0x08)	/* Shut Down Status Register */

<title>CMSIS-DSP: ARMCM3 Directory Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="cmsis.css" rel="stylesheet" type="text/css" />
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="stylsheetf" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 46px;">
  <td id="projectlogo"><img alt="Logo" src="CMSIS_Logo_Final.png"/></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">CMSIS-DSP
   &#160;<span id="projectnumber">Version 1.4.4</span>
   </div>
   <div id="projectbrief">CMSIS DSP Software Library</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<div id="CMSISnav" class="tabs1">
    <ul class="tablist">
      <li><a href="../../General/html/index.html"><span>CMSIS</span></a></li>
      

 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#ifndef nsJVMPluginTagInfo_h___
#define nsJVMPluginTagInfo_h___

#include "nsIJVMPluginTagInfo.h"
#include "nsAgg.h"

/*******************************************************************************
 * nsJVMPluginTagInfo: The browser makes one of these when it sees an APPLET or
 * appropriate OBJECT tag.
 ******************************************************************************/

class nsIPluginTagInfo2;

class nsJVMPluginTagInfo : public nsIJVMPluginTagInfo {
public:

    NS_DECL_AGGREGATED

    /* from nsIJVMPluginTagInfo: */

    /* ====> These are usually only called by the plugin, not the browser... */

    NS_IMETHOD
    GetCode(const char* *result);

    NS_IMETHOD
    GetCodeBase(const char* *result);

    NS_IMETHOD
    GetArchive(const char* *result);

    NS_IMETHOD
    GetName(const char* *result);

    NS_IMETHOD
    GetMayScript(PRBool *result);

    /* Methods specific to nsJVMPluginInstancePeer: */
    
    /* ====> From here on are things only called by the browser,

.navbar-inverse {
  background-image: -webkit-linear-gradient(top, #3c3c3c 0%, #222 100%);
  background-image:         linear-gradient(to bottom, #3c3c3c 0%, #222 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff3c3c3c', endColorstr='#ff222222', GradientType=0);
  filter: progid:DXImageTransform.Microsoft.gradient(enabled = false);
  background-repeat: repeat-x;
}
.navbar-inverse .navbar-nav > .active > a {
  background-image: -webkit-linear-gradient(top, #222 0%, #282828 100%);
  background-image:         linear-gradient(to bottom, #222 0%, #282828 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff222222', endColorstr='#ff282828', GradientType=0);
  background-repeat: repeat-x;
  -webkit-box-shadow: inset 0 3px 9px rgba(0, 0, 0, .25);
          box-shadow: inset 0 3px 9px rgba(0, 0, 0, .25);
}
.navbar-inverse .navbar-brand,
.navbar-inverse .navbar-nav > li > a {
  text-shadow: 0 -1px 0 rgba(0, 0, 0, .25);
}
.navbar-static-top,
.navbar-fixed-top,
.navbar-fixed-bottom {
  border-radius: 0;
}
.alert {
  text-shadow: 0 1px 0 rgba(255, 255, 255, .2);
  -webkit-box-shadow: inset 0 1px 0 rgba(255, 255, 255, .25), 0 1px 2px rgba(0, 0, 0, .05);
          box-shadow: inset 0 1px 0 rgba(255, 255, 255, .25), 0 1px 2px rgba(0, 0, 0, .05);
}
.alert-success {
  background-image: -webkit-linear-gradient(top, #dff0

	<dbk:figure>
	  <xsl:if test='ancestor::dbk:para/preceding-sibling::*[1][self::dbk:para][@rnd:style = "figure-title"] or
			$metadata'>
	    <dbk:info>
	      <xsl:if test='ancestor::dbk:para/preceding-sibling::*[1][self::dbk:para][@rnd:style = "figure-title"]'>
		<dbk:title>
		  <xsl:apply-templates select='ancestor::dbk:para/preceding-sibling::*[1]/node()'/>
		</dbk:title>
	      </xsl:if>
	      <xsl:copy-of select='$metadata'/>
	    </dbk:info>
	  </xsl:if>

	  <dbk:mediaobject>
	    <xsl:apply-templates mode='rnd:copy'/>
	  </dbk:mediaobject>

	  <xsl:choose>
	    <xsl:when test='not($caption)'/>
	    <xsl:when test='not($next.captioned)'>
	      <xsl:apply-templates select='ancestor::dbk:para/following-sibling::*[following-sibling::*[generate-id() = generate-id($caption)]][not(&metadata-content;)]'
				   mode='rnd:figure'/>
	      <xsl:apply-templates select='$caption'
				   mode='rnd:caption'/>
	    </xsl:when>
	    <!-- Does caption belong to this image or next.captioned?
	       - Only if it belongs to this image do we process it here.
	      -->
	    <xsl:when test='$next.captioned[preceding-sibling::*[generate-id() = generate-id($caption)]]'>
	      <xsl:apply-templates select='ancestor::dbk:para/following-sibling::*[following-sibling::*[generate-id() = generate-id($caption)]][not(&metadata-content;)]'
				   mode='rnd:figure'/>
	      <xsl:apply-templates select='$caption'
				

/// Protocol for all the navigation-related SideEffect exposed by Tempura
public protocol NavigationSideEffect: AnySideEffect {}

/// Navigation action used to ask the `Navigator` to navigate to a specific `Route`.
public struct Navigate: NavigationSideEffect {
  /// The final `Route` after the navigation is completed
  public let route: Route
  /// Specify if the `Navigation` should be animated
  public let animated: Bool
  /// The context of this `Navigation`
  public let context: Any?
  
  /// Initializes and return a Navigate action.
  public init(to route: Route, animated: Bool = false, context: Any? = nil) {
    self.route = route
    self.animated = animated
    self.context = context
  }
  
  /// The side effect of the action, look into [Katana](https://github.com/BendingSpoons/katana-swift)
  /// to know what a `SideEffect` is.
  public func anySideEffect(_ context: AnySideEffectContext) throws -> Any {
    guard let dependencies = context.anyDependencies as? NavigationProvider else { fatalError("DependenciesContainer must conform to `NavigationProvider`") }
    try await(dependencies.navigator.changeRoute(newRoute: self.route, animated: self.animated, context: self.context))
    return ()
  }
}

/// Navigation action used to ask the `Navigator` to show a specific screen
/// identified by the `identifierToShow`.
///
/// The `ViewController` that is managing that screen must implement `RoutableWithConfiguration`
/// or `Routable` in order to be identified with a matching `Routable.routeIdentifier`.
public struct Show: NavigationSideEffect {
  /// The identifiers of the `Routable` to be shown
  public let identifiersToShow: [RouteElementIdentifier]
  /// Specify if the `Show` should be animated
  public let animated: Bool
  /// The context of the `Show`
  public let context: Any?
  
  /// Initializes and return a Show action.
  public init(_ identifiersToShow: [RouteElementIdentifier], animated: Bool = false, context: Any? = nil) {
    self.identifiersToShow = identifiersTo

// serialization for tuples
class ShowT a where
  showtup :: a -> [[char]]

instance ShowT () where
  showtup _ = []

instance (t=(a*tt), Show a, ShowT tt) => ShowT t where
  showtup x = [show(x.0)] ++ showtup(tupleTail(x))

instance (ShowT t) => Show t where
  show x = concat(["(", cdelim(showtup(x), ", "), ")"])

// serialization for records
class ShowR a where
  showrec :: a -> [[char]]

instance ShowR () where
  showrec _ = []

instance (r={a*rr}, Show a, ShowR rr) => ShowR r where
  showrec r = [recordHeadLabel(r) ++ "=" ++ show(recordHeadValue(r))] ++ showrec(recordTail(r))

instance (ShowR r) => Show r where
  show x = concat(["{", cdelim(showrec(x), ", "), "}"])

// serialization for variants
class ShowVarValue a where
  showVarValue :: a -> [char]

instance ShowVarValue () where
  showVarValue x = ""

instance (Show a) => ShowVarValue a where
  showVarValue x = "=" ++ show(x)

instance Show 0 where
  show _ = "impossible"

instance (v=|a+vt|, ShowVarValue a, Show vt) => Show v where
  show x = variantSplit(x, \xv."|"++variantHeadLabel(x)++showVarValue(xv)++"|", toClosure(show))

data penum t v = t
class UnpackEnum t v | t -> v where
  unpackEnum :: t -> v
instance (Convert t int) => UnpackEnum (penum t v) v where
  unpackEnum x = unsafeCast({x=convert(unsafeCast(x)::t)::int})

instance Eq (penum _ _) where
  x === y = x.t === y.t
instance (Ord t t) => Ord (pen

import java
import semmle.code.java.dataflow.TaintTracking
import semmle.code.java.security.SecurityTests
import ArithmeticCommon
import DataFlow::PathGraph

class TaintSource extends DataFlow::ExprNode {
  TaintSource() {
    // Either this is an access to a random number generating method of the right kind, ...
    exists(Method def |
      def = this.getExpr().(MethodAccess).getMethod() and
      (
        // Some random-number methods are omitted:
        // `nextDouble` and `nextFloat` are between 0 and 1,
        // `nextGaussian` is extremely unlikely to hit max values.
        def.getName() = "nextInt" or
        def.getName() = "nextLong"
      ) and
      def.getNumberOfParameters() = 0 and
      def.getDeclaringType().hasQualifiedName("java.util", "Random")
    )
    or
    // ... or this is the array parameter of `nextBytes`, which is filled with random bytes.
    exists(MethodAccess m, Method def |
      m.getAnArgument() = this.getExpr() and
      m.getMethod() = def and
      def.getName() = "nextBytes" and
      def.getNumberOfParameters() = 1 and
      def.getDeclaringType().hasQualifiedName("java.util", "Random")
    )
  }
}

class ArithmeticUncontrolledOverflowConfig extends TaintTracking::Configuration {
  ArithmeticUncontrolledOverflowConfig() { this = "ArithmeticUncontrolledOverflowConfig" }

  override predicate isSource(DataFlow::Node source) { source instanceof TaintSource }

  override predicate isSink(DataFlow::Node sink) { overflowSink(_, sink.asExpr()) }

  override predicate isSanitizer(DataFlow::Node n) { overflowBarrier(n) }
}

class ArithmeticUncontrolledUnderflowConfig extends TaintTracking::Configuration {
  ArithmeticUncontrolledUnderflowConfig() { this = "ArithmeticUncontrolledUnderflowConfig" }

  override predicate isSource(DataFlow::Node source) { source instanceof TaintSource }

  override predicate isSink(Data

    /**
     * Deletes an existing row .
     *
     * @param ListEntry $entry The row to delete
     */
    public function deleteRow($entry)
    {
        $entry->delete();
    }

    /**
     * Returns the content of all rows as an associative array
     *
     * @param mixed $location A ListQuery or string URI specifying the feed location.
     * @return array An array of rows.  Each element of the array is an associative array of data
     */
    public function getSpreadsheetListFeedContents($location)
    {
        $listFeed = $this->getListFeed($location);
        $listFeed = $this->retrieveAllEntriesForFeed($listFeed);
        $spreadsheetContents = array();
        foreach ($listFeed as $listEntry) {
            $rowContents = array();
            $customArray = $listEntry->getCustom();
            foreach ($customArray as $custom) {
                $rowContents[$custom->getColumnName()] = $custom->getText();
            }
            $spreadsheetContents[] = $rowContents;
        }
        return $spreadsheetContents;
    }

    /**
     * Returns the content of all cells as an associative array, indexed
     * off the cell location  (ie 'A1', 'D4', etc).  Each element of
     * the array is an associative array with a 'value' and a 'function'.
     * Only non-empty cells are returned by default.  'range' is the
     * value of the 'range' query parameter specified at:
     * http://code.google.com/apis/spreadsheets/reference.html#cells_Parameters
     *
     * @param mixed $location A CellQuery, WorksheetEntry or a URL (w/o query string) specifying the feed location.
     * @param string $range The range of cells to retrieve
     * @param boolean $empty Whether to retrieve empty cells
     * @return array An associative array of cells
     */
    public function getSpreadsheetCellFeedContents($location, $range = null, $empty = false)
    {
        $cellQuery = null;
        if ($location instanceof Zend_Gdata_Spreadsheets_Cell

#Official post-EVAL period data files
evalpart1_data_dir=/export/babel/data/203-lao/release-current/conversational/eval
evalpart1_data_list=./conf/lists/203-lao/evalpart1.list
evalpart1_rttm_file=/export/babel/data/scoring/IndusDB/IARPA-babel203b-v3.1a_conv-evalpart1/IARPA-babel203b-v3.1a_conv-evalpart1.mitllfa3.rttm
evalpart1_ecf_file=/export/babel/data/scoring/IndusDB/IARPA-babel203b-v3.1a_conv-evalpart1/IARPA-babel203b-v3.1a_conv-evalpart1.scoring.ecf.xml
evalpart1_stm_file=/export/babel/data/scoring/IndusDB/IARPA-babel203b-v3.1a_conv-evalpart1/IARPA-babel203b-v3.1a_conv-evalpart1.stm
evalpart1_kwlists=(
    [kwlist]=/export/babel/data/scoring/IndusDB/IARPA-babel203b-v3.1a_conv-evalpart1/IARPA-babel203b-v3.1a_conv-evalpart1.annot.kwlist.xml
    [kwlist2]=/export/babel/data/scoring/IndusDB/IARPA-babel203b-v3.1a_conv-evalpart1/IARPA-babel203b-v3.1a_conv-evalpart1.annot.kwlist2.xml
    [kwlist3]=/export/babel/data/scoring/IndusDB/IARPA-babel203b-v3.1a_conv-evalpart1/IARPA-babel203b-v3.1a_conv-evalpart1.annot.kwlist3.xml
    [kwlist4]=/export/babel/data/scoring/IndusDB/IARPA-babel203b-v3.1a_

type joinOptions struct {
	remote     string
	listenAddr NodeAddrOption
	// Not a NodeAddrOption because it has no default port.
	advertiseAddr string
	dataPathAddr  string
	token         string
	availability  string
}

func newJoinCommand(dockerCli command.Cli) *cobra.Command {
	opts := joinOptions{
		listenAddr: NewListenAddrOption(),
	}

	cmd := &cobra.Command{
		Use:   "join [OPTIONS] HOST:PORT",
		Short: "Join a swarm as a node and/or manager",
		Args:  cli.ExactArgs(1),
		RunE: func(cmd *cobra.Command, args []string) error {
			opts.remote = args[0]
			return runJoin(dockerCli, cmd.Flags(), opts)
		},
	}

	flags := cmd.Flags()
	flags.Var(&opts.listenAddr, flagListenAddr, "Listen address (format: <ip|interface>[:port])")
	flags.StringVar(&opts.advertiseAddr, flagAdvertiseAddr, "", "Advertised address (format: <ip|interface>[:port])")
	flags.StringVar(&opts.dataPathAddr, flagDataPathAddr, "", "Address or interface to use for data path traffic (format: <ip|interface>)")
	flags.SetAnnotation(flagDataPathAddr, "version", []string{"1.31"})
	flags.StringVar(&opts.token, flagToken, "", "Token for entry into the swarm")
	flags.StringVar(&opts.availability, flagAvailability, "active", `Availability of the node ("active"|"pause"|"drain")`)
	return cmd
}

func runJoin(dockerCli command.Cli, flags *pflag.FlagSet, opts joinOptions) error {
	client := dockerCli.Client()
	ctx := context.Background()

	req := swarm.JoinRequest{
		JoinToken:     opts.token,
		ListenAddr:    opts.listenAddr.String(),
		AdvertiseAddr: opts.advertiseAddr,
		DataPathAddr:  opts.dataPathAddr,
		RemoteAddrs:

type Iovec struct {
	Base *byte
	Len  uint64
}

type IPMreq struct {
	Multiaddr [4]byte /* in_addr */
	Interface [4]byte /* in_addr */
}

type IPMreqn struct {
	Multiaddr [4]byte /* in_addr */
	Address   [4]byte /* in_addr */
	Ifindex   int32
}

type IPv6Mreq struct {
	Multiaddr [16]byte /* in6_addr */
	Interface uint32
}

type PacketMreq struct {
	Ifindex int32
	Type    uint16
	Alen    uint16
	Address [8]uint8
}

type Msghdr struct {
	Name       *byte
	Namelen    uint32
	_          [4]byte
	Iov        *Iovec
	Iovlen     uint64
	Control    *byte
	Controllen uint64
	Flags      int32
	_          [4]byte
}

type Cmsghdr struct {
	Len   uint64
	Level int32
	Type  int32
}

type Inet4Pktinfo struct {
	Ifindex  int32
	Spec_dst [4]byte /* in_addr */
	Addr     [4]byte /* in_addr */
}

type Inet6Pktinfo struct {
	Addr    [16]byte /* in6_addr */
	Ifindex uint32
}

type IPv6MTUInfo struct {
	Addr RawSockaddrInet6
	Mtu  uint32
}

type ICMPv6Filter struct {
	Data [8]uint32
}

type Ucred struct {
	Pid int32
	Uid uint32
	Gid uint32
}

type TCPInfo struct {
	State          uint8
	Ca_state       uint8
	Retransmits    uint8
	Probes         uint8
	Backoff        uint8
	Options        uint8
	_              [2]byte
	Rto            uint32
	Ato            uint32
	Snd_mss        uint32
	Rcv_mss        

                        "1",
                        "2",
                        "3",
                        "4",
                        "5",
                        "6",
                        "7",
                        "8",
                        "9",
                        "10",
                        "11",
                        "12"
                    ],
                    "short": [
                        "M01",
                        "M02",
                        "M03",
                        "M04",
                        "M05",
                        "M06",
                        "M07",
                        "M08",
                        "M09",
                        "M10",
                        "M11",
                        "M12"
                    ],
                    "long": [
                        "M01",
                        "M02",
                        "M03",
                        "M04",
                        "M05",
                        "M06",
                        "M07",
                        "M08",
                        "M09",
                        "M10",
                        "M11",
                        "M12"
                    ]
                },
                "days": {
                    "narrow": [
                        "र",
                        "सो",
                        "मं",
                        "बु",
                        "गु",
                        "शु",
                        "श"
                    ],
                    "short": [
                        "रवि",
                        "सोम",
                        "मंगल",
                        "बुध",
                        "गुरु",
                        "शुक्र",
                        "शनि"
                    ],
                    "long": [
                        "रविवार",
                        "सोमवार",
                        "मंगलवार",
                        "बुधवार",
                        "गुरुवार",
                        "शुक्रवार",
                        "शनिवार"
                    ]
                },
                "eras": {
                    "narrow": [
                        "ERA0",
                        "ERA1"
                    ],
                    "short": [
                        "ERA0",
                        "ERA1"
                    ],
                    "long": [
                        "ERA0",
                        "ER

  # Many RSpec users commonly either run the entire suite or an individual
  # file, and it's useful to allow more verbose output when running an
  # individual spec file.
  if config.files_to_run.one?
    # Use the documentation formatter for detailed output,
    # unless a formatter has already been configured
    # (e.g. via a command-line flag).
    config.default_formatter = 'doc'
  end

  # Print the 10 slowest examples and example groups at the
  # end of the spec run, to help surface which specs are running
  # particularly slow.
  config.profile_examples = 10

  # Run specs in random order to surface order dependencies. If you find an
  # order dependency and want to debug it, you can fix the order by providing
  # the seed, which is printed after each run.
  #     --seed 1234
  config.order = :random

  # Seed global randomization in this process using the `--seed` CLI option.
  # Setting this allows you to use `--seed` to deterministically reproduce
  # test failures related to randomization by passing the same `--seed` value
  # as the one that triggered the failure.
  Kernel.srand config.seed
=end
end

# API client (shared between all the test cases)
API_CLIENT = Petstore::ApiClient.new(Petstore::Configuration.new)

# randomly generate an ID
def random_id
  rand(1000000) + 20000
end

# create a random pet, return its id
def prepare_pet(pet_api)
  pet_id = random_id
  category = Petstore::Category.new('id' => 20002, 'name' => 'category test')
  tag = Petstore::Tag.new('id' => 30002, 'name' => 'tag test')
  pet = Petstore::Pet.new('id' => pet_id, 'name' => "RUBY UNIT TESTING", 'photo_urls' => 'photo url',
                          'category' => category, 'tags' => [tag], 'status' => 'pending')
  pet_api.add_pet(pet)
  return pet_id
end

#ifdef BSD_KERNEL_PRIVATE
#include <sys/eventhandler.h>
#endif

#ifdef KERNEL_PRIVATE
#include <sys/socket.h>
#include <sys/socketvar.h>
#include <sys/queue.h>
#include <kern/locks.h>

/* Forward declare these structures referenced from prototypes below. */
struct mbuf;
struct proc;
struct sockaddr;
struct socket;
struct sockopt;
struct socket_filter;
struct uio;
struct ifnet;
#ifdef XNU_KERNEL_PRIVATE
struct domain_old;
#endif /* XNU_KERNEL_PRIVATE */

#pragma pack(4)

#ifdef XNU_KERNEL_PRIVATE
/*
 * Legacy protocol switch table.
 *
 * NOTE: Do not modify this structure, as there are modules outside of xnu
 * which rely on the size and layout for binary compatibility.  This structure
 * is simply used by the exported net_{add,del}_proto_old, pffindproto_old
 * routines, and by the domain_old structure.  Internally, protocol switch
 * tables are stored in the private variant of protosw defined down below.
 */
struct protosw_old {
#else
struct protosw {
#endif /* !XNU_KERNEL_PRIVATE */
	short	pr_type;		/* socket type used for */
	struct	domain *pr_domain;	/* domain protocol a member of */
	short	pr_protocol;		/* protocol number */
	unsigned int pr_flags;		/* see below */
	/*
	 * protocol-protocol hooks
	 */
	void	(*pr_input)		/* input to protocol (from below) */
		    (struct mbuf *, int len);
	int	(*pr_output)		/* output to protocol (from above) */
		    (struct mbuf *m, struct socket *so);
	void	(*pr_ctlinput)		/* control input (from below) */
		    (int, struct sockaddr *, void *, struct ifnet *);
	int	(*pr_ctloutput)		/* control output (from above) */
		    (struct socket *, struct sockopt *);

    <link rel="stylesheet" href="{{ mix('css/new.css') }}">
    @include('layouts.code.head')
</head>
<body class="border-t-2 border-brand bg-grey-lightest">
    <div class="min-w-full min-h-screen flex items-center justify-center w-full px-2">
        <div class="flex min-h-screen flex-col justify-center items-center text-center w-full">
        <div class="flex-1 w-full mt-12 ">
            <svg class="sm:w-104 sm:h-24 mb-4" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 344.5 83.2">
                <path fill="#0FAEC9" d="M45.3 1.6c-2-2-5.5-2-7.6 0l-36 36c-2.2 2.2-2.2 5.6 0 7.7l36.2 36.3c2 2 5.4 2 7.5 0l36-36c2.2-2.2 2.2-5.6 0-7.7L45.4 1.5zm22.3 48.7L59 41.6l2-2.2-6.4-6.5-8.7 8.6 6.4 6.5 2.2-2 8.7 8.6-8.7 8.7-8.7-8.7 2-2.2-6.4-6.5-8.7 8.6 6.4 6.5 2.2-2 8.7 8.6-8.7 8.7-8.7-8.7 2-2.2-10.8-10.8 13-13-6.5-6.5-2.2 2.3-8.7-8.7 8.7-8.7 8.7 8.6-2.2 2.2 6.5 6.5 13-13L65.3 35l2.2-2 8.7 8.6-8.6 8.7z"/>
                <path fill="#404040" d="M110.3

void
pcl::lineToLineSegment (const Eigen::VectorXf &line_a, const Eigen::VectorXf &line_b, 
                        Eigen::Vector4f &pt1_seg, Eigen::Vector4f &pt2_seg)
{
  // point + direction = 2nd point
  Eigen::Vector4f p1 = Eigen::Vector4f::Zero ();
  Eigen::Vector4f p2 = Eigen::Vector4f::Zero ();
  Eigen::Vector4f dir1 = Eigen::Vector4f::Zero ();
  p1.head<3> () = line_a.head<3> ();
  dir1.head<3> () = line_a.segment<3> (3);
  p2 = p1 + dir1;

  // point + direction = 2nd point
  Eigen::Vector4f q1 = Eigen::Vector4f::Zero ();
  Eigen::Vector4f q2 = Eigen::Vector4f::Zero ();
  Eigen::Vector4f dir2 = Eigen::Vector4f::Zero ();
  q1.head<3> () = line_b.head<3> ();
  dir2.head<3> () = line_b.segment<3> (3);
  q2 = q1 + dir2;

  // a = x2 - x1 = line_a[1] - line_a[0]
  Eigen::Vector4f u = dir1;
  // b = x4 - x3 = line_b[1] - line_b[0]
  Eigen::Vector4f v = dir2;
  // c = x2 - x3 = line_a[1] - line_b[0]
  Eigen::Vector4f w = p2 - q1;

  float a = u.dot (u);
  float b = u.dot (v);
  float c = v.dot (v);
  float d = u.dot (w);
  float e = v.dot (w);
  float denominator = a*c - b*b;
  float sc, tc;
  // Compute the line parameters of the two closest points
  if (denominator < 1e-

Prerequisite:
-------------
This utility works only if /dev/ion interface is present.
The following configs needs to be enabled in kernel to include ion driver.
CONFIG_ANDROID=y
CONFIG_STAGING=y
CONFIG_ION=y
CONFIG_ION_SYSTEM_HEAP=y

This utility requires to be run as root user.


Compile and test:
-----------------
This utility is made to be run as part of kselftest framework in kernel.
To compile and run using kselftest you can simply do the following from the
kernel top directory.
linux$ make TARGETS=android kselftest
Or you can also use:
linux$ make -C tools/testing/selftests TARGETS=android run_tests
Using the selftest it can directly execute the ion_test.sh script to test the
buffer sharing using ion system heap.
Currently the heap size is hard coded as just 10 bytes inside this script.
You need to be a root user to run under selftest.

You can also compile and test manually using the following steps:
ion$ make
These will generate 2 executable: ionapp_export, ionapp_import
Now you can run the export and import manually by specifying the heap type
and the heap size.
You can also directly execute the shell script to run the test automatically.
Simply use the following command to run the test.
ion$ sudo ./ion_test.sh

Test Results:
-------------
The utility is verified on Ubuntu-32 bit system with Linux Kernel 4.14.
Here is the snapshot of the test result using kselftest.

linux# make TARGETS=android kselftest
heap_type: 0, heap_size: 10
--------------------------------------
heap type: 0
  heap id: 1
heap name: ion_system_heap
--------------------------------------
Fill buffer content:
0xfd 0xfd 0xfd 0xfd 0xfd 0xfd 0xfd 0xfd 0xfd 0xfd
Sharing fd: 6, Client fd: 5
<ion_close_buffer_fd>: buffer release successfully....
Received buffer fd: 4
Read buffer content:
0xfd 0xfd 0xfd 0xfd 0xfd 0xfd 0xfd 0xfd 0

/**
 * Tests the {@link PersonUnvoidHandler} class.
 */
public class PersonUnvoidHandlerTest {
	
	/**
	 * @see PersonUnvoidHandler#handle(Person,User,Date,String)
	 */
	@Test
	public void handle_shouldUnsetThePersonVoidedBit() {
		UnvoidHandler<Person> handler = new PersonUnvoidHandler();
		Person person = new Person();
		person.setPersonVoided(true); // make sure personVoided is set
		handler.handle(person, null, null, null);
		assertFalse(person.getPersonVoided());
	}
	
	/**
	 * @see PersonUnvoidHandler#handle(Person,User,Date,String)
	 */
	@Test
	public void handle_shouldUnsetThePersonVoider() {
		UnvoidHandler<Person> handler = new PersonUnvoidHandler();
		Person person = new Person();
		person.setPersonVoided(true);
		person.setPersonVoidedBy(new User(1));
		handler.handle(person, null, null, null);
		assertNull(person.getPersonVoidedBy());
	}
	
	/**
	 * @see PersonUnvoidHandler#handle(Person,User,Date,String)
	 */
	@Test
	public void handle_shouldUnsetThePersonDateVoided() {
		UnvoidHandler<Person> handler = new PersonUnvoidHandler();
		Person person = new Person();
		person.setPersonVoided(true);
		person.setPersonDateVoided(new Date());
		handler.handle(person, null, null, null);
		assertNull(person.getPersonDateVoided());
	}
	
	/**
	 * @see PersonUnvoidHandler#handle(Person,User,Date,String)
	 */
	@Test
	public void handle_shouldUnsetThePersonVoidReason() {
		UnvoidHandler<Person> handler = new PersonUnvoidHandler();
		Person person = new Person();
		person.setPersonVoided(true);
		person.setPersonVoidReason("SOME REASON");
		handler.handle(person, null, null, null);
		assertNull

			// Check packet is in the correct window
			diff := nextSeq.Difference(Sequence(tcp.Seq))
			if diff == -1 && (length == 1 || length == 0) {
				// This is probably a Keep-alive
				// TODO: check byte is ok
			} else if diff < 0 {
				return fmt.Errorf("Re-emitted packet (diff:%d,seq:%d,rev-ack:%d)", diff,
					tcp.Seq, nextSeq)
			} else if revOptions.mss > 0 && length > revOptions.mss {
				return fmt.Errorf("%d > mss (%d)", length, revOptions.mss)
			} else if revOptions.receiveWindow != 0 && revOptions.scale < 0 && diff > int(revOptions.receiveWindow) {
				return fmt.Errorf("%d > receiveWindow(%d)", diff, revOptions.receiveWindow)
			}
		}
	}
	// Compute receiveWindow
	options.receiveWindow = uint(tcp.Window)
	if options.scale > 0 {
		options.receiveWindow = options.receiveWindow << (uint(options.scale))
	}
	return nil
}

// TCPSimpleFSM implements a very simple TCP state machine
//
// Usage:
// When implementing a Stream interface and to avoid to consider packets that
// would be rejected due to client/server's TCP stack, the  Accept() can call
// TCPSimpleFSM.CheckState().
//
// Limitations:
// - packet should be received in-order.
// - no check on sequence number is performed
// - no RST
type TCPSimpleFSM struct {
	dir     TCPFlowDirection
	state   int
	options TCPSimpleFSMOptions
}

// TCPSimpleFSMOptions holds options for TCPSimpleFSM
type TCPSimpleFSMOptions struct {
	SupportMissingEstablishment bool // Allow missing SYN, SYN+ACK, ACK
}

// Internal values of state machine
const (
	TCPStateClosed      = 0
	TCPStateSynSent     = 1
	TCPStateEstablished = 2
	TCPStateCloseWait   = 3
	TCPStateLastAck     = 4
	

    <S sid="50" ssid="3">), we estimate a. joint, probability distribution p of the token and its surrounding context, both of which are denoted by c, occurring as an actual sentence boundary.</S>
    <S sid="51" ssid="4">The distribution is given by: p(b, c) = Ir &#8222;,,,.f-(b&#8222;c), where b e no, yes}, where the cri's are the unknown parameters of the model, and where each aj corresponds to a fi, or a feature.</S>
    <S sid="52" ssid="5">Thus the probability of seeing an actual sentence boundary in the context c is given by p(yes, c).</S>
    <S sid="53" ssid="6">The contextual information deemed useful for sentence-boundary detection, which. we described earlier, must be encoded using features.</S>
    <S sid="54" ssid="7">For example, a useful feature might be: This feature will allow the model to discover that the period at the end of the word Mr. seldom occurs as a sentence boundary.</S>
    <S sid="55" ssid="8">Therefore the parameter corresponding to this feature will hopefully boost the probability p(no, c) if the Prefix is Mr.</S>
    <S sid="56" ssid="9">The parameters are chosen to maximize the likelihood of the training data, using the Generalized Iterative Scaling (Darroch and Ratcliff, 1972) algorithm.</S>
    <S sid="57" ssid="10">The model also can be viewed under the Maximum Entropy framework, in which we choose a distribution p that maximizes the entropy H (p) where /:5(b, c) is the observed distribution of sentenceboundaries and contexts in the training data.</S>
    <S sid="58" ssid="11">As a result, the model in practice tends not to commit towards a particular outcome (yes or no) unless it has seen sufficient evidence for that outcome; it is maximally uncertain beyond meeting the evidence.</S>
    <S sid="59" ssid="12">All experiments use a simple decision rule to classify each potential sentence boundary: a potential sentence boundary is an actual sentence boundary if and only if p(yesic) &gt; .5

import java.awt.image.BufferedImage;
import java.io.IOException;
import java.io.OutputStream;

/**
 * Facade class for writing images without having to know what writer to use
 * or whether it's available.
 */
public final class ImageWriterFacade {

    private static final Logger LOGGER =
            LoggerFactory.getLogger(ImageWriterFacade.class);

    /**
     * Writes the given already-processed image to the given stream. {@link
     * edu.illinois.library.cantaloupe.processor.codec.jpeg.TurboJPEGImageWriter}
     * is used if TurboJPEG is available and if writing to a JPEG; otherwise an
     * {@link edu.illinois.library.cantaloupe.processor.codec.ImageWriter} is
     * used.
     */
    public static void write(BufferedImage image,
                             Encode encode,
                             OutputStream outputStream) throws IOException {
        if (Format.get("jpg").equals(encode.getFormat()) &&
                TurboJPEGImageWriter.isTurboJPEGAvailable()) {
            LOGGER.debug("Writing with {}",
                    TurboJPEGImageWriter.class.getName());
            TurboJPEGImageWriter writer = new TurboJPEGImageWriter();
            writer.setProgressive(encode.isInterlacing());
            writer.setQuality(encode.getQuality());
            Metadata metadata = encode.getMetadata();
            if (metadata != null) {
                metadata.getXMP().ifPresent(writer::setXMP);
            }
            writer.write(image, outputStream);
        } else {
            ImageWriter writer = new ImageWriterFactory().newImageWriter(encode);
            LOGGER.debug("Writing with {}", writer.getClass().getName());
            writer.write(image, outputStream);
        }
    }

    /**
     * Writes the given already-processed image sequence to the given stream
     * using an {@link
     * edu.illinois.library.cantaloupe.processor.codec.ImageWriter}.
     */
    public static void write(BufferedImageSequence sequence,
                             Encode encode,
                        

<?php
/**
 * Translation file
 * @copyright  Copyright (c) 2014-2019 Benjamin BALET
 * @license      http://opensource.org/licenses/AGPL-3.0 AGPL-3.0
 * @link            https://github.com/bbalet/jorani
 * @since         0.1.0
 * @author       dario brignone <brignone@unitec.it>
 */

$lang['hr_employees_title'] = 'Elenco dipendenti';
$lang['hr_employees_thead_tip_edit'] = 'modifica utente';
$lang['hr_employees_thead_tip_entitlment'] = 'giorni spettanti';
$lang['hr_employees_thead_link_leaves'] = 'Ferie';
$lang['hr_employees_thead_link_extra'] = 'Extra';
$lang['hr_employees_thead_link_balance'] = 'Saldo ferie';
$lang['hr_employees_thead_link_create_leave'] = 'Inserisci una richiesta di ferie';
$lang['hr_employees_thead_link_calendar'] = 'Yearly calendar';
$lang['hr_employees_thead_link_presence'] = 'Report presenze';
$lang['hr_employees_thead_link_delegation'] = 'Deleghe';
$lang['hr_employees_thead_id'] = 'ID';
$lang['hr_employees_thead_firstname'] = 'Nome';
$lang['hr_employees_thead_lastname'] = 'Cognome';
$lang['hr_employees_thead_email'] = 'E-mail';
$lang['hr_employees_thead_entity'] = 'Entità';
$lang['hr_employees_thead_contract'] = 'Contratto';
$lang['hr_employees_thead_manager'] = 'Gestore';
$lang['hr_employees_thead_identifier'] = 'identificatore';
$lang['hr_employees_thead_datehired'] = 'Data assunzione';
$lang['hr_employees_thead_

      Incompatible platforms:
      - .NET Framework &lt; 4.0
      - Silverlight
      - UWP (will build, but is known not to work at runtime)
      - Xamarin

      More documentation on the API is available at:
      https://developers.google.com/api-client-library/dotnet/apis/servicemanagement/v1

      The package source code is available at:
      https://github.com/google/google-api-dotnet-client/tree/master/Src/Generated
    </Description>
  </PropertyGroup>

  <ItemGroup>
    <None Include="../../../LICENSE" Pack="true" PackagePath="" />
  </ItemGroup>

  <!-- build properties -->
  <PropertyGroup>
    <TargetFrameworks>netstandard2.0;netstandard1.3;netstandard1.0;net45;net40</TargetFrameworks>
    <SignAssembly>true</SignAssembly>
    <AssemblyOriginatorKeyFile>..\..\..\google.apis.snk</AssemblyOriginatorKeyFile>
    <DebugType>portable</DebugType>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <NoWarn>1570,1587,1591</NoWarn>
  </PropertyGroup>

  <!-- common dependencies -->
  <ItemGroup>
    <PackageReference Include="ConfigureAwaitChecker.Analyzer" Version="1.0.1" PrivateAssets="All" />
    <PackageReference Include="SourceLink.Create.CommandLine" Version="2.8.0" PrivateAssets="All" />
  </ItemGroup>
  
  <!-- per-target dependencies -->
  <ItemGroup Condition="'$(TargetFramework)'=='netstandard2.0'">
    <PackageReference Include="Google.Apis" Version="1.49.0" />
    <PackageReference Include="Google.Apis.Auth" Version="1.49.0" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFramework)'=='netstandard1.3'">
    <PackageReference Include="Google.Apis" Version="1.49.0" />
    <PackageReference Include="Google.Apis.Auth" Version="1.49.0" />
  </ItemGroup>



/*
 * ProGuard -- shrinking, optimization, obfuscation, and preverification
 *             of Java bytecode.
 *
 * Copyright (c) 2002-2020 Guardsquare NV
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the Free
 * Software Foundation; either version 2 of the License, or (at your option)
 * any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 */
package proguard.optimize.info;

import proguard.classfile.*;
import proguard.classfile.visitor.MemberVisitor;

/**
 * This MemberVisitor marks all methods that it visits as not having any side
 * effects. It will make the SideEffectMethodMarker consider them as such
 * without further analysis.
 *
 * @see SideEffectMethodMarker
 * @author Eric Lafortune
 */
public class NoSideEffectMethodMarker
implements   MemberVisitor
{
    // Implementations for MemberVisitor.

    public void visitAnyMember(Clazz Clazz, Member member)
    {
        // Ignore any attempts to mark fields.
    }


    public void visitProgramMethod(ProgramClass programClass, ProgramMethod programMethod)
    {
        markNoSideEffects(programMethod);
    }


    public void visitLibraryMethod(LibraryClass libraryClass, LibraryMethod libraryMethod)
    {
        markNoSideEffects(libraryMethod);
    }


    // Small utility methods.

    private static void markNoSideEffects(Method method)
    {
        MethodOptimizationInfo.getMethodOptimizationInfo(method).setNoSideEffects();
    }


    public static boolean hasNoSideEffects(Method method)
    {
        return MethodOptimizationInfo.getMethodOptimizationInfo(method).hasNoSideEffects();
    

; RUN: opt < %s -newgvn | llvm-dis
target datalayout = "e-p:32:32:32-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:32:64-f32:32:32-f64:32:64-v64:64:64-v128:128:128-a0:0:64-f80:128:128"
target triple = "i386-apple-darwin7"

define i32 @main(i32 %argc, i8** %argv) nounwind {
entry:
	br label %bb84

bb41:		; preds = %bb82
	%tmp = load i8, i8* %opt.0, align 1		; <i8> [#uses=0]
	%tmp1 = getelementptr i8, i8* %opt.0, i32 1		; <i8*> [#uses=2]
	switch i32 0, label %bb81 [
		i32 102, label %bb82
		i32 110, label %bb79
		i32 118, label %bb80
	]

bb79:		; preds = %bb41
	br label %bb82

bb80:		; preds = %bb41
	ret i32 0

bb81:		; preds = %bb41
	ret i32 1

bb82:		; preds = %bb84, %bb79, %bb41
	%opt.0 = phi i8* [ %tmp3, %bb84 ], [ %tmp1, %bb79 ], [ %tmp1, %bb41 ]		; <i8*> [#uses=3]
	%tmp2 = load i8, i8* %opt.0, align 1		; <i8> [#uses=0]
	br i1 false, label %bb84, label %bb41

bb84:		; preds = %bb82, %entry
	%tmp3 = getelementptr i8, i8* null, i32 1		; <i8*> [#uses=1

          // We need to expose() any then()ed promises recursively
          var qThen = promise.then;
          promise.then = function () {
            return expose(qThen.apply(this, arguments));
          };
        }
        return promise;
      }

      // Wrap functions that return a promise
      angular.forEach([ 'when', 'all', 'reject'], function (name) {
        var qFunc = $delegate[name];
        $delegate[name] = function () {
          return expose(qFunc.apply(this, arguments));
        };
      });

      // Wrap defer()
      var qDefer = $delegate.defer;
      $delegate.defer = function () {
        var deferred = qDefer();
        expose(deferred.promise);
        return deferred;
      }

      return $delegate;
    });
  });
  
function testablePromise(promise) {
  if (!promise || !promise.then) throw new Error('Expected a promise, but got ' + jasmine.pp(promise) + '.');
  if (!isDefined(promise.$$resolved)) throw new Error('Promise has not been augmented by ngMock');
  return promise;
}

function resolvedPromise(promise) {
  var result = testablePromise(promise).$$resolved;
  if (!result) throw new Error('Promise is not resolved yet');
  return result;
}

function resolvedValue(promise) {
  var result = resolvedPromise(promise);
  if (!result.success) throw result.error;
  return result.value;
}

function resolvedError(promise) {
  var result = resolvedPromise(promise);
  if (result.success) throw new Error('Promise was expected to fail but returned ' + jasmin.pp(res.value) + '.');
  return result.error;
}

beforeEach(function () {
  this.addMatchers({
    toBeResolved: function() {
      return !!testablePromise(this.actual).$$resolved;
    }
  });
});

// Misc test utils
function caught(fn) {
  try {
    fn();
    

Comment=Configure window movement options
Comment[az]=Pəncərə yerdəyişdirilməsinin tənzimlənməsi
Comment[ca]=Configura les opcions de moviment de les finestres
Comment[cs]=Nastavit volby pohybu oken
Comment[da]=Indstil flytning af vinduer
Comment[en_GB]=Configure window movement options
Comment[es]=Configurar las opciones del movimiento de las ventanas
Comment[et]=Akende liigutamise seadistamine
Comment[eu]=Konfiguratu leiho mugimenduaren aukerak
Comment[fi]=Ikkunoiden siirtämisen asetukset
Comment[fr]=Configurer les options de déplacement des fenêtres
Comment[gl]=Configurar o movemento das xanelas
Comment[ia]=Configura optiones de movimento de fenestra
Comment[id]=Konfigurasikan opsi pemindahan window
Comment[it]=Configura opzioni di spostamento delle finestre
Comment[ko]=창 이동 옵션 설정
Comment[lt]=Konfigūruoti langų perkėlimo parinktis
Comment[nl]=Opties voor vensterverplaatsing configureren
Comment[nn]=Set opp vindaugsflytting
Comment[pl]=Ustawienia opcji przesuwania okien
Comment[pt]=Configurar as opções de movimentação das janelas
Comment[pt_BR]=Configure as opções de movimento da janela
Comment[ru]=Настройка поведения при перемещении окон
Comment[sk]=Nastavenie spôsobu presunu okien
Comment[sl]=Nastavi možnosti premikanja okna
Comment[sv]=Anpassa alternativ för fönsterförflyttning
Comment[uk]=Налаштовування параметрів пересування вікон
Comment[x-test]=xxConfigure window movement optionsxx
Comment[zh_CN

insert into rhnChildChannelArchCompat (parent_arch_id, child_arch_id)
values (LOOKUP_CHANNEL_ARCH('channel-s390'), LOOKUP_CHANNEL_ARCH('channel-s390'));

insert into rhnChildChannelArchCompat (parent_arch_id, child_arch_id)
values (LOOKUP_CHANNEL_ARCH('channel-s390-deb'), LOOKUP_CHANNEL_ARCH('channel-s390-deb'));

insert into rhnChildChannelArchCompat (parent_arch_id, child_arch_id)
values (LOOKUP_CHANNEL_ARCH('channel-s390x'), LOOKUP_CHANNEL_ARCH('channel-s390'));

insert into rhnChildChannelArchCompat (parent_arch_id, child_arch_id)
values (LOOKUP_CHANNEL_ARCH('channel-s390x'), LOOKUP_CHANNEL_ARCH('channel-s390x'));

insert into rhnChildChannelArchCompat (parent_arch_id, child_arch_id)
values (LOOKUP_CHANNEL_ARCH('channel-iSeries'), LOOKUP_CHANNEL_ARCH('channel-iSeries'));

insert into rhnChildChannelArchCompat (parent_arch_id, child_arch_id)
values (LOOKUP_CHANNEL_ARCH('channel-pSeries'), LOOKUP_CHANNEL_ARCH('channel-pSeries'));

insert into rhnChildChannelArchCompat (parent_arch_id, child_arch_id)
values (LOOKUP_CHANNEL_ARCH('channel-x86_64'), LOOKUP_CHANNEL_ARCH('channel-ia32'));

insert into rhnChildChannelArchCompat (parent_arch_id, child_arch_id)
values (LOOKUP_CHANNEL_ARCH('channel-x86_64'), LOOKUP_CHANNEL_ARCH('channel-x86_64'));

insert into rhnChildChannelArchCompat (parent_arch_id, child_arch_id)
values (LOOKUP_CHANNEL_ARCH('channel-amd64-deb'), LOOKUP_CHANNEL_ARCH('channel-ia32-deb'));

insert into rhnChildChannelArchCompat (parent_arch_id, child_arch_id)
values (LOOKUP

					<Type>5</Type>
					<Period>6</Period>
					<MonthItem>8</MonthItem>
					<MonthPosition>4</MonthPosition>
					<DayWorking>0</DayWorking>
				</Exception>
				<Exception>
					<EnteredByOccurrences>1</EnteredByOccurrences>
					<TimePeriod>
						<FromDate>2002-01-01T00:00:00</FromDate>
						<ToDate>2006-02-04T23:59:00</ToDate>
					</TimePeriod>
					<Occurrences>8</Occurrences>
					<Name>Monthly Relative 6</Name>
					<Type>5</Type>
					<Period>7</Period>
					<MonthItem>9</MonthItem>
					<MonthPosition>0</MonthPosition>
					<DayWorking>0</DayWorking>
				</Exception>
				<Exception>
					<EnteredByOccurrences>1</EnteredByOccurrences>
					<TimePeriod>
						<FromDate>2002-01-01T00:00:00</FromDate>
						<ToDate>2007-05-13T23:59:00</ToDate>
					</TimePeriod>
					<Occurrences>9</Occurrences>
					<Name>Monthly Relative 7</Name>
					<Type>5</Type>
					<Period>8</Period>
					<MonthItem>3</MonthItem>
					<MonthPosition>1</MonthPosition>
					<DayWorking>0</DayWorking>
				</Exception>
				<Exception>
					<EnteredByOccurrences>1</EnteredByOccurrences>
					<TimePeriod>
						<FromDate>2003-01-01T00:00:00</FromDate>
						<ToDate>2003-05-01T23:59:00</ToDate>
					</TimePeriod>
					<Occurrences>3</Occurrences>
					<Name>Monthly Absolute 1</Name>
					<Type>4</Type>
					<Period>2</Period>
					<MonthDay>1</MonthDay>
					<DayWorking>

/*
 * Copyright [2017] Wikimedia Foundation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.o19s.es.ltr.utils;

import com.o19s.es.ltr.ranker.LtrRanker;
import org.elasticsearch.Assertions;

import java.util.Objects;
import java.util.function.Supplier;

public final class Suppliers {
    /**
     * Utility class
     */
    private Suppliers() {}

    /**
     * @param supplier the original supplier to store
     * @param <E> the supplied type
     * @return a supplier storing and returning the same instance
     */
    public static <E> Supplier<E> memoize(Supplier<E> supplier) {
        return new MemoizeSupplier<>(supplier);
    }

    private static class MemoizeSupplier<E> implements Supplier<E> {
        private volatile boolean initialized = false;
        private final Supplier<E> supplier;
        private E value;

        MemoizeSupplier(Supplier<E> supplier) {
            this.supplier = Objects.requireNonNull(supplier);
        }

        @Override
        public E get() {
            if (!initialized) {
                synchronized (this) {
                    if (!initialized) {
                        E t = supplier.get();
                        value = t;
                        initialized = true;
                        return t;
                    }
                }
            }
            return value;
        }
    }

    /**
     * A mutable supplier
     */
    public static class MutableSupplier<T> implements Supplier<T

	tc_check_packets "dev $h2 ingress" 102 1
	check_err $? "Did not match on correct filter (0x18)"

	$MZ $h1 -c 1 -p 64 -a $h1mac -b $h2mac -A 192.0.2.1 -B 192.0.2.2 \
		-t ip tos=20 -q

	tc_check_packets "dev $h2 ingress" 102 2
	check_fail $? "Matched on a wrong filter (0x20)"

	tc_check_packets "dev $h2 ingress" 101 1
	check_err $? "Did not match on correct filter (0x20)"

	tc filter del dev $h2 ingress protocol ip pref 2 handle 102 flower
	tc filter del dev $h2 ingress protocol ip pref 1 handle 101 flower

	log_test "ip_tos match ($tcflags)"
}

match_indev_test()
{
	RET=0

	tc filter add dev $h2 ingress protocol ip pref 1 handle 101 flower \
		$tcflags indev $h1 dst_mac $h2mac action drop
	tc filter add dev $h2 ingress protocol ip pref 2 handle 102 flower \
		$tcflags indev $h2 dst_mac $h2mac action drop

	$MZ $h1 -c 1 -p 64 -a $h1mac -b $h2mac -A 192.0.2.1 -B 192.0.2.2 \
		-t ip -q

	tc_check_packets "dev $h2 ingress" 101 1
	check_fail $? "Matched on a wrong filter"

	tc_check_packets "dev $h2 ingress" 102 1
	check_err $? "Did not match on correct filter"

	tc filter del dev $h2 ingress protocol ip pref 2 handle 102 flower
	tc filter del dev $h2 ingress protocol ip pref 1 handle 101 flower

	log_test "indev match ($tcflags)"
}

setup_prepare()
{
	h1=${NETIFS[p1]}
	h2=${NET

Анализът на механизмите на резистентност през последното десетилетие
инфекциозни болести, което мотивира тяхното изключително широко
подражават и импровизират или да се доверяват на недобросъвестни или
5. Цветообрание на старославянската книжнина в България. Събрано и на

своят крупен научен труд "История на славянския език и литература по
старославянската книжнина. На този въпрос той е посветил цял един


на баща си и хуква към някаква пропаст. Едва успяват да го
решения в т. 1., 3., 4., 5.
увеличаване относителния дял на резистентните към него бактериални
молекулите на аминогликозидите ги инактивират, и т.н. (2) Използване
време на Освободителната война с руските войски. Като
Бесарабия, 50,000 в Унгария по точно в Банат, така че около 3,500,000
резервира предварително.
език през 1849 г. тази забележителна студия бива преведена на
В посочените граници на българската реч, П. Шафарик се е опитал да

Генетични и биохимични механизми на резист

<?php

namespace Gerardojbaez\Laraplans\Models;

use Carbon\Carbon;
use Illuminate\Database\Eloquent\Model;
use Gerardojbaez\Laraplans\Contracts\PlanSubscriptionUsageInterface;

class PlanSubscriptionUsage extends Model implements PlanSubscriptionUsageInterface
{
    /**
     * The attributes that are mass assignable.
     *
     * @var array
     */
    protected $fillable = [
        'subscription_id',
        'code',
        'valid_until',
        'used'
    ];

    /**
     * The attributes that should be mutated to dates.
     *
     * @var array
     */
    protected $dates = [
        'created_at', 'updated_at', 'valid_until',
    ];

    /**
     * Get feature.
     *
     * @return \Illuminate\Database\Eloquent\Relations\BelongsTo
     */
    public function feature()
    {
        return $this->belongsTo(config('laraplans.models.plan_feature'));
    }

    /**
     * Get subscription.
     *
     * @return \Illuminate\Database\Eloquent\Relations\BelongsTo
     */
    public function subscription()
    {
        return $this->belongsTo(config('laraplans.models.plan_subscription'));
    }

    /**
     * Scope by feature code.
     *
     * @param \Illuminate\Database\Eloquent\Builder
     * @return \Illuminate\Database\Eloquent\Builder
     */
    public function scopeByFeatureCode($query, $feature_code)
    {
        return $query->whereCode($feature_code);
    }

    /**
     * Check whether usage has been expired or not.
     *
     * @return bool
     */
    public function isExpired()
    {
        if (is_null($this->valid_until)) {
            return false;
        }

        return Carbon::now()->gte($this->valid_until);
    }

		class Materials
		{
		protected:
			C3D_API explicit Materials( sdw::ShaderWriter & writer );

		public:
			virtual ~Materials() = default;
			C3D_API virtual void declare( bool hasSsbo ) = 0;
			C3D_API virtual BaseMaterialUPtr getBaseMaterial( sdw::UInt const & index )const = 0;

		protected:
			sdw::ShaderWriter & m_writer;
			std::unique_ptr< sdw::Struct > m_type;
		};

		class LegacyMaterials
			: public Materials
		{
		public:
			C3D_API explicit LegacyMaterials( sdw::ShaderWriter & writer );
			C3D_API void declare( bool hasSsbo )override;
			C3D_API LegacyMaterial getMaterial( sdw::UInt const & index )const;
			C3D_API BaseMaterialUPtr getBaseMaterial( sdw::UInt const & index )const override;

		private:
			std::unique_ptr< sdw::ArraySsboT< LegacyMaterial > > m_ssbo;
			sdw::Function< LegacyMaterial, sdw::InUInt > m_getMaterial;
		};

		class PbrMRMaterials
			: public Materials
		{
		public:
			C3D_API explicit PbrMRMaterials( sdw::ShaderWriter & writer );
			C3D_API void declare( bool hasSsbo )override;
			C3D_API MetallicRoughnessMaterial getMaterial( sdw::UInt const & index )const;
			C3D_API BaseMaterialUPtr getBaseMaterial( sdw::UInt const & index )const override;

		private:
			std::unique_ptr< sdw::ArraySsboT< MetallicRoughnessMaterial > > m_ssbo;
			sdw::Function< MetallicRoughnessMaterial, sdw::InUInt > m_getMaterial;
		};

		class PbrSGMaterials
			: public Materials
		{
		public:
			C3D_API explicit PbrSGMaterials( sdw::ShaderWriter & writer );
			C3D_API void declare( bool hasSsbo )

static char GetProjectedZF1D___doc__[] =
    "Class hierarchy: :class:`freestyle.types.UnaryFunction1D` > "
    ":class:`freestyle.types.UnaryFunction1DDouble` > :class:`GetProjectedZF1D`\n"
    "\n"
    ".. method:: __init__(integration_type=IntegrationType.MEAN)\n"
    "\n"
    "   Builds a GetProjectedZF1D object.\n"
    "\n"
    "   :arg integration_type: The integration method used to compute a single value\n"
    "      from a set of values. \n"
    "   :type integration_type: :class:`freestyle.types.IntegrationType`\n"
    "\n"
    ".. method:: __call__(inter)\n"
    "\n"
    "   Returns the projected Z 3D coordinate of an Interface1D.\n"
    "\n"
    "   :arg inter: An Interface1D object.\n"
    "   :type inter: :class:`freestyle.types.Interface1D`\n"
    "   :return: The projected Z 3D coordinate of an Interface1D.\n"
    "   :rtype: float\n";

static int GetProjectedZF1D___init__(BPy_GetProjectedZF1D *self, PyObject *args, PyObject *kwds)
{
  static const char *kwlist[] = {"integration_type", NULL};
  PyObject *obj = 0;

  if (!PyArg_ParseTupleAndKeywords(
          args, kwds, "|O!", (char **)kwlist, &IntegrationType_Type, &obj)) {
    return -1;
  }
  IntegrationType t = (obj) ? IntegrationType_from_BPy_IntegrationType(obj) : MEAN;
  self->py_uf1D_double.uf1D_double = new Functions1D::GetProjectedZF1D(t);
  return 0;
}

/*-----------------------BPy_GetProjectedZF1D type definition ------------------------------*/

PyTypeObject

include/group_replication.inc [rpl_server_count=3]
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the master info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START SLAVE; see the 'START SLAVE Syntax' in the MySQL Manual for more information.
[connection server1]

####
# 0) The test requires three servers.
####

SET SESSION sql_log_bin = 0;
call mtr.add_suppression("This member could not reach a majority of the members for more than 10 seconds. The member will now leave the group as instructed by the group_replication_unreachable_majority_timeout option.");
call mtr.add_suppression("The server was automatically set into read only mode after an error was detected.");
call mtr.add_suppression("\\[GCS\\] Timeout while waiting for the group communication engine to exit!");
call mtr.add_suppression("\\[GCS\\] The member has failed to gracefully leave the group.");
call mtr.add_suppression("The plugin encountered a critical error and will abort: Could not rejoin the member to the group after");
call mtr.add_suppression("Started auto-rejoin procedure attempt*");
call mtr.add_suppression("Auto-rejoin procedure attempt*");
call mtr.add_suppression("\\[GCS\\] Error connecting to all peers. Member join failed. Local port:*");
call mtr.add_suppression("\\[GCS\\] The member was unable to join the group.*");
call mtr.add_suppression("Timeout while waiting for a view change event during the auto-rejoin procedure");
call mtr.add_suppression("Unable to confirm whether the server has left the group or not. Check performance_schema.replication_group_members to check group membership information.");
SET SESSION sql_log_bin = 1;
include/gr_autorejoin_monitoring.inc
SET @debug_saved = @@GLOBAL.DEBUG;
SET @@GLOBAL.DEBUG='+d,group_replication_re

  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Notebooks\n",
    "Notebooks created by the community leveraging the mordor datasets"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\n",
    "| Author | Name | Link |\n",
    "|:-------|:-----|:-----|"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Simulation Plan"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\n",
    "| Environment | Tool Type | Module |\n",
    "|:------------|:----------|:-------|\n",
    "| Mordor shire | C2 | [ShellCmd](https://github.com/cobbr/Covenant/blob/7555b19ffb9401c0e37094c25e404a640b1688d7/Covenant/Data/Tasks/SharpSploit.Execution.yaml#L96) |\n",
    "| Mordor shire | tool | [lsadump](https://github.com/gentilkiwi/mimikatz/blob/6191b5a8ea40bbd856942cbc1e48a86c3c505dd3/mimikatz/modules/kuhl_m_lsadump.c#L23) |\n",
    "| Mordor shire | tool | [SharpZeroLogon](https://github.com/nccgroup/nccfsas/tree/main/Tools/SharpZeroLogon) |"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Adversary View\n",
    "```\n",
    "Mimikatz Implementation (NetrServerAuthenticate2)\n",
    "=================================================\n",
    "\n",
    "(wardog) > Shell

public class MetricsPreferences {
	static private JPanel panel;
	static private JCheckBox collectAnonymousMetricsCheckbox;

	static private String COLLECT_ANONYMOUS_METRICS_LABEL = "Collect Anonymous Metrics";
	
	static public JPanel buildPanel() {
		panel = new JPanel();
		panel.setLayout(new GridBagLayout());
		panel.setBorder(BorderFactory.createEmptyBorder(5,5,5,5));

		collectAnonymousMetricsCheckbox = new JCheckBox(Translator.get("collectAnonymousMetrics"));

		Preferences prefs = PreferencesHelper.getPreferenceNode(PreferencesHelper.MakelangeloPreferenceKey.METRICS);
		collectAnonymousMetricsCheckbox.setSelected(prefs.getBoolean(COLLECT_ANONYMOUS_METRICS_LABEL, false));
		
		GridBagConstraints c = new GridBagConstraints();	
		int y = 0;
	
		c.anchor = GridBagConstraints.WEST;
		c.gridwidth = 1;
		c.gridx = 1;
		c.gridy = y;
		panel.add(collectAnonymousMetricsCheckbox, c);
		y++;
		
		return panel;
	}
	
	static public void save() {
		Preferences prefs = PreferencesHelper.getPreferenceNode(PreferencesHelper.MakelangeloPreferenceKey.METRICS);
		prefs.putBoolean(COLLECT_ANONYMOUS_METRICS_LABEL, collectAnonymousMetricsCheckbox.isSelected());
	}
	
	static public void cancel() {
		
	}
	
	static public boolean areAllowedToShare() {
		if(collectAnonymousMetricsCheckbox != null) return collectAnonymousMetricsCheckbox.isSelected();
		
		Preferences prefs = PreferencesHelper.getPreferenceNode(PreferencesHelper.MakelangeloPreferenceKey.METRICS);
		return prefs.getBoolean(COLLECT_ANONYMOUS_METRICS_LABEL,false);
	}
	
	static public void setAllowedToShare(boolean newState) {
		Preferences prefs = PreferencesHelper.getPreferenceNode(PreferencesHelper.MakelangeloPreferenceKey.METRICS);
		prefs.

type ListServicesInput struct {
	// The maximum number of service results returned by ListServices in paginated
	// output. When this parameter is used, ListServices only returns maxResults
	// results in a single page along with a nextToken response element. The remaining
	// results of the initial request can be seen by sending another ListServices
	// request with the returned nextToken value. This value can be between 1 and 100.
	// If this parameter is not used, then ListServices returns up to 10 results and a
	// nextToken value if applicable.
	MaxResults *int32
	// The short name or full Amazon Resource Name (ARN) of the cluster that hosts the
	// services to list. If you do not specify a cluster, the default cluster is
	// assumed.
	Cluster *string
	// The nextToken value returned from a ListServices request indicating that more
	// results are available to fulfill the request and further calls will be needed.
	// If maxResults was provided, it is possible the number of results to be fewer
	// than maxResults. This token should be treated as an opaque identifier that is
	// only used to retrieve the next items in a list and not for other programmatic
	// purposes.
	NextToken *string
	// The scheduling strategy for services to list.
	SchedulingStrategy types.SchedulingStrategy
	// The launch type for the services to list.
	LaunchType types.LaunchType
}

type ListServicesOutput struct {
	// The nextToken value to include in a future ListServices request. When the
	// results of a ListServices request exceed maxResults, this value can be used to
	// retrieve the next page of results. This value is null when there are no more
	// results to return.
	NextToken *string
	// The list of full ARN entries for each service associated with the specified
	// cluster.
	ServiceArns []*string

	// Metadata pertaining to the operation's result.
	ResultMetadata middleware.Metadata
}

func addawsAwsjson11_serdeOpListServicesMiddlewares(stack *middleware.Stack) {
	stack.Serialize.Add(&awsAwsjson11_serializeOpListServices{}, middleware.After)
	stack.Deserialize.Add(&aws

        [Fact]
        [Description("Performs a querystring-based search of the v1 feed. Confirms expected packages are returned.")]
        [Priority(0)]
        [Category("P0Tests")]
        public async Task SearchV1Feed()
        {
            await SearchFeedAsync(UrlHelper.V1FeedRootUrl, "Json.NET");
        }

        [Fact]
        [Description("Performs a querystring-based search of the v2 feed. Confirms expected packages are returned.")]
        [Priority(0)]
        [Category("P0Tests")]
        public async Task SearchV2Feed()
        {
            await SearchFeedAsync(UrlHelper.V2FeedRootUrl, "Json.NET");
        }

        private async Task SearchFeedAsync(string feedRootUrl, string title)
        {
            var requestUrl = feedRootUrl + @"Search()?$filter=IsLatestVersion&$skip=0&$top=25&searchTerm='newtonsoft%20json'&targetFramework='net40'&includePrerelease=false";
            TestOutputHelper.WriteLine("Request: GET " + requestUrl);

            string responseText;
            using (var httpClient = new HttpClient())
            using (var response = await httpClient.GetAsync(requestUrl))
            {
                TestOutputHelper.WriteLine("Response: HTTP " + response.StatusCode);

                responseText = await response.Content.ReadAsStringAsync();
            }

            var expectedUrl = feedRootUrl + "package/Newtonsoft.Json/";

            Assert.True(responseText.Contains(@"<title type=""text"">" + title + @"</title>")
                     || responseText.Contains(@"<d:Title>" + title + @"</d:Title>"), "The expected package title '" + title + "' wasn't found in the feed. Feed contents: " + responseText);
            Assert.True(responseText.Contains(@"<content type=""application/zip"" src=""" + expectedUrl), "The expected package URL '" + expectedUrl + "' wasn't found in the feed.  Feed contents: " + responseText);
            Assert.False(responseText.Contains(@"jquery"), "The feed contains non-matching package names. Feed contents: " + responseText);

/*
 * Copyright (C) 2015, BMW Car IT GmbH
 *
 * Author: Sebastian Mattheis <sebastian.mattheis@bmw-carit.de>
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 * http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in
 * writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific
 * language governing permissions and limitations under the License.
 */

package com.bmwcarit.barefoot.matcher;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.Properties;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.bmwcarit.barefoot.matcher.MatcherServer.DebugJSONOutputFormatter;
import com.bmwcarit.barefoot.matcher.MatcherServer.GeoJSONOutputFormatter;
import com.bmwcarit.barefoot.matcher.MatcherServer.InputFormatter;
import com.bmwcarit.barefoot.matcher.MatcherServer.OutputFormatter;
import com.bmwcarit.barefoot.matcher.MatcherServer.SlimJSONOutputFormatter;
import com.bmwcarit.barefoot.roadmap.Loader;
import com.bmwcarit.barefoot.roadmap.RoadMap;
import com.bmwcarit.barefoot.util.SourceException;

/**
 * Server control of stand-alone offline map matching server ({@link MatcherServer}).
 */
public abstract class ServerControl {
    private final static Logger logger = LoggerFactory.getLogger(ServerControl.class);
    private static MatcherServer matcherServer = null;
    private static Properties databaseProperties = new Properties();
    private static Properties serverProperties = new Properties();

    /**
     * Initializes stand-alone offline map matching server. Server properties file must include
     *

import (
	"time"
)

// ClientParameters is used to set keepalive parameters on the client-side.
// These configure how the client will actively probe to notice when a
// connection is broken and send pings so intermediaries will be aware of the
// liveness of the connection. Make sure these parameters are set in
// coordination with the keepalive policy on the server, as incompatible
// settings can result in closing of connection.
type ClientParameters struct {
	// After a duration of this time if the client doesn't see any activity it
	// pings the server to see if the transport is still alive.
	// If set below 10s, a minimum value of 10s will be used instead.
	Time time.Duration // The current default value is infinity.
	// After having pinged for keepalive check, the client waits for a duration
	// of Timeout and if no activity is seen even after that the connection is
	// closed.
	Timeout time.Duration // The current default value is 20 seconds.
	// If true, client sends keepalive pings even with no active RPCs. If false,
	// when there are no active RPCs, Time and Timeout will be ignored and no
	// keepalive pings will be sent.
	PermitWithoutStream bool // false by default.
}

// ServerParameters is used to set keepalive and max-age parameters on the
// server-side.
type ServerParameters struct {
	// MaxConnectionIdle is a duration for the amount of time after which an
	// idle connection would be closed by sending a GoAway. Idleness duration is
	// defined since the most recent time the number of outstanding RPCs became
	// zero or the connection establishment.
	MaxConnectionIdle time.Duration // The current default value is infinity.
	// MaxConnectionAge is a duration for the maximum amount of time a
	// connection may exist before it will be closed by sending a GoAway. A
	// random jitter of +/-10% will be added to MaxConnectionAge to spread out
	// connection storms.
	MaxConnectionAge time.Duration // The current default value is infinity.
	// MaxConnectionAgeGrace is an additive period after MaxConnectionAge after
	// which the connection will be

// Add Favorite Menu //
menuDef {
	name		"popupRemoveFavorite"
	visible		0
	fullscreen	0
	rect		WINDOW_X WINDOW_Y WINDOW_WIDTH WINDOW_HEIGHT
	style		WINDOW_STYLE_FILLED
	popup

	fadeClamp	0.5
	fadeAmount  0.075

	onOpen {
		setitemcolor background backcolor 0 0 0 0 ;
		fadein background
	}

	onESC {
		close popupRemoveFavorite ;
		open ingame_main
	}

// Background //
	itemDef {
		name		"background"
		rect		0 0 WINDOW_WIDTH 480
		style		WINDOW_STYLE_FILLED
		background	"ui/assets/fadebox.tga"
		backcolor	0 0 0 0
		visible		1
		decoration
	}

// Subwindows //
#define SUBWINDOW_WIDTH		250
#define SUBWINDOW_HEIGHT	80
#define SUBWINDOW_X			.5*(WINDOW_WIDTH-SUBWINDOW_WIDTH)
#define SUBWINDOW_Y			.5*(WINDOW_HEIGHT-SUBWINDOW_HEIGHT)

	SUBWINDOWBLACK( SUBWINDOW_X, SUBWINDOW_Y, SUBWINDOW_WIDTH, SUBWINDOW_HEIGHT, _("REMOVE FAVORITE") )
	LABEL( SUBWINDOW_X+2, SUBWINDOW_Y+16, (SUBWINDOW_WIDTH)-4, 10, _("Remove this server from your favorites?"), .2, ITEM_ALIGN_CENTER, .5*((SUBWINDOW_WIDTH)-4), 8 )
	// note: this isn't set for listen servers
	CVARLABEL( SUBWINDOW_X+2, SUBWINDOW_Y+34, (SUBWINDOW_WIDTH)-4, 10, "cl_currentServerIP", .2, ITEM_ALIGN_CENTER, .5*((SUBWINDOW_WIDTH)-4), 8 )

	BUTTON( SUBWINDOW_X+6, SUBWINDOW_Y+SUBWINDOW_

          that.$element
            .addClass('in')
            .attr('aria-hidden', false)

          that.enforceFocus()

          transition ?
            that.$element.one($.support.transition.end, function () { that.$element.focus().trigger('shown') }) :
            that.$element.focus().trigger('shown')

        })
      }

    , hide: function (e) {
        e && e.preventDefault()

        var that = this

        e = $.Event('hide')

        this.$element.trigger(e)

        if (!this.isShown || e.isDefaultPrevented()) return

        this.isShown = false

        this.escape()

        $(document).off('focusin.modal')

        this.$element
          .removeClass('in')
          .attr('aria-hidden', true)

        $.support.transition && this.$element.hasClass('fade') ?
          this.hideWithTransition() :
          this.hideModal()
      }

    , enforceFocus: function () {
        var that = this
        $(document).on('focusin.modal', function (e) {
          if (that.$element[0] !== e.target && !that.$element.has(e.target).length) {
            that.$element.focus()
          }
        })
      }

    , escape: function () {
        var that = this
        if (this.isShown && this.options.keyboard) {
          this.$element.on('keyup.dismiss.modal', function ( e ) {
            e.which == 27 && that.hide()
          })
        } else if (!this.isShown) {
          this.$element.off('keyup.dismiss.modal')
        }
      }

    , hideWithTransition: function () {
        var that = this
          , timeout = setTimeout(function () {
              that.$element.off($.support.transition.end)
              that.hideModal()
            }, 500)

        this.$element.one($.support.transition.end, function () {
          clearTimeout(timeout)
          that.hideModal()
        })
      }

    , hideModal: function () {

  "Info": [
    {
      "IsSuccess": "True",
      "InAddress": "高雄市旗山區中正路１９７號",
      "InSRS": "EPSG:4326",
      "InFuzzyType": "[單雙號機制]+[最近門牌號機制]",
      "InFuzzyBuffer": "0",
      "InIsOnlyFullMatch": "False",
      "InIsLockCounty": "True",
      "InIsLockTown": "False",
      "InIsLockVillage": "False",
      "InIsLockRoadSection": "False",
      "InIsLockLane": "False",
      "InIsLockAlley": "False",
      "InIsLockArea": "False",
      "InIsSameNumber_SubNumber": "True",
      "InCanIgnoreVillage": "True",
      "InCanIgnoreNeighborhood": "True",
      "InReturnMaxCount": "0",
      "OutTotal": "1",
      "OutMatchType": "完全比對",
      "OutMatchCode": "[高雄市]\tFULL:1",
      "OutTraceInfo": "[高雄市]\t { 完全比對 } 找到符合的門牌地址"
    }
  ],
  "AddressList": [
    {
      "FULL_ADDR": "高雄市旗山區湄洲里22鄰中正路197號",
      "COUNTY": "高雄市",
      "TOWN": "旗山區",
      "VILLAGE": "湄洲里",
      "NEIGHBORHOOD": "22鄰",
      "ROAD": "中正路",
      "SECTION": "",
      "LANE": "",
      "ALLEY": "",
      "SUB_ALLEY": "",
      "TONG": "",
      "NUMBER": "197號",
      "X": 120.479888,
      "Y": 22.889792
    }


/*
 * SGI FREE SOFTWARE LICENSE B (Version 2.0, Sept. 18, 2008)
 * Copyright (C) 1991-2000 Silicon Graphics, Inc. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice including the dates of first publication and
 * either this permission notice or a reference to
 * http://oss.sgi.com/projects/FreeB/
 * shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
 * SILICON GRAPHICS, INC. BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF
 * OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 *
 * Except as contained in this notice, the name of Silicon Graphics, Inc.
 * shall not be used in advertising or otherwise to promote the sale, use or
 * other dealings in this Software without prior written authorization from
 * Silicon Graphics, Inc.
 */
/*
** Author: Eric Veach, July 1994.
**
*/

#ifndef __tessmono_h_
#define __tessmono_h_

/* __gl_meshTessellateMonoRegion( face ) tessellates a monotone region
 * (what else would it do??)  The region must consist of a single
 * loop of half-edges (see mesh.h) oriented CCW.  "Monotone" in this
 * case means that any vertical line intersects the interior of the
 * region in a single interval.  
 *
 * Tessellation consists of adding interior edges (actually pairs of
 *

fsnotify is derived from code in the [golang.org/x/exp](https://godoc.org/golang.org/x/exp) package and it may be included [in the standard library](https://github.com/fsnotify/fsnotify/issues/1) in the future. Therefore fsnotify carries the same [LICENSE](https://github.com/fsnotify/fsnotify/blob/master/LICENSE) as Go. Contributors retain their copyright, so you need to fill out a short form before we can accept your contribution: [Google Individual Contributor License Agreement](https://developers.google.com/open-source/cla/individual).

Please indicate that you have signed the CLA in your pull request.

### How fsnotify is Developed

* Development is done on feature branches.
* Tests are run on BSD, Linux, macOS and Windows.
* Pull requests are reviewed and [applied to master][am] using [hub][].
  * Maintainers may modify or squash commits rather than asking contributors to.
* To issue a new release, the maintainers will:
  * Update the CHANGELOG
  * Tag a version, which will become available through gopkg.in.
 
### How to Fork

For smooth sailing, always use the original import path. Installing with `go get` makes this easy. 

1. Install from GitHub (`go get -u github.com/fsnotify/fsnotify`)
2. Create your feature branch (`git checkout -b my-new-feature`)
3. Ensure everything works and the tests pass (see below)
4. Commit your changes (`git commit -am 'Add some feature'`)

Contribute upstream:

1. Fork fsnotify on GitHub
2. Add your remote (`git remote add fork git@github.com:mycompany/repo.git`)
3. Push to the branch (`git push fork my-new-feature`)
4. Create a new Pull Request on GitHub

This workflow is [thoroughly explained by Katrina Owen](https://splice.com/blog/contributing-open-source-git-repositories-go/).

### Testing

fsnotify uses build tags to compile different code on Linux, BSD, macOS, and Windows.

Before doing a pull request, please

	<meta name="ckeditor-sample-required-plugins" content="sourcearea">
	<meta name="ckeditor-sample-name" content="Full page support">
	<meta name="ckeditor-sample-group" content="Plugins">
	<meta name="ckeditor-sample-description" content="CKEditor inserted with a JavaScript call and used to edit the whole page from &lt;html&gt; to &lt;/html&gt;.">
</head>
<body>
	<h1 class="samples">
		<a href="../../../samples/old/index.html">CKEditor Samples</a> &raquo; Full Page Editing
	</h1>
	<div class="warning deprecated">
		This sample is not maintained anymore. Check out its <a href="http://sdk.ckeditor.com/samples/fullpage.html">brand new version in CKEditor SDK</a>.
	</div>
	<div class="description">
		<p>
			This sample shows how to configure CKEditor to edit entire HTML pages, from the
			<code>&lt;html&gt;</code> tag to the <code>&lt;/html&gt;</code> tag.
		</p>
		<p>
			The CKEditor instance below is inserted with a JavaScript call using the following code:
		</p>
<pre class="samples">
CKEDITOR.replace( '<em>textarea_id</em>', {
	<strong>fullPage: true</strong>,
	<strong>allowedContent: true</strong>
});
</pre>
		<p>
			Note that <code><em>textarea_id</em></code> in the code above is the <code>id</code> attribute of
			the <code>&lt;textarea&gt;</code> element to be replaced.
		</p>
		<p>
			The <code><em>allowedContent</em></code> in the code above is set to <code>true</code> to disable content filtering.
			Setting this option is not obligatory, but in full page mode there is a strong chance that one may want be able to freely enter any HTML content in source mode without any limitations.
		</p>
	</div>
	<form action

/*
 * Jitsi, the OpenSource Java VoIP and Instant Messaging client.
 *
 * Copyright @ 2015 Atlassian Pty Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
#include "MessengerService.h"

EXTERN_C const GUID DECLSPEC_SELECTANY IID_IMessengerService
    = { 0x2E50547C, 0xA8AA, 0x4f60, { 0xB5, 0x7E, 0x1F, 0x41, 0x47, 0x11, 0x00, 0x7B } };

MessengerService::MessengerService(IMessenger *messenger)
    : _messenger(messenger)
{
    _messenger->AddRef();
}

MessengerService::~MessengerService()
{
    _messenger->Release();
}

STDMETHODIMP MessengerService::get_MyFriendlyName(BSTR *pbstrName)
{
    return _messenger->get_MyFriendlyName(pbstrName);
}

STDMETHODIMP MessengerService::get_MySigninName(BSTR *pbstrName)
{
    return _messenger->get_MySigninName(pbstrName);
}

STDMETHODIMP MessengerService::get_MyStatus(MISTATUS *pmiStatus)
{
    return _messenger->get_MyStatus(pmiStatus);
}

STDMETHODIMP MessengerService::get_Property(MSERVICEPROPERTY ePropType, VARIANT *pvPropVal)
    STDMETHODIMP_E_NOTIMPL_STUB

STDMETHODIMP MessengerService::get_ServiceID(BSTR

      "vector": [
        "Web application"
      ]
    },
    "malware": {
      "variety": [
        "Capture app data"
      ],
      "vector": [
        "Direct install"
      ]
    }
  },
  "actor": {
    "external": {
      "country": [
        "Unknown"
      ],
      "motive": [
        "Financial"
      ],
      "region": [
        "000000"
      ],
      "variety": [
        "Unknown"
      ]
    }
  },
  "asset": {
    "assets": [
      {
        "variety": "S - Web application"
      }
    ],
    "cloud": [
      "Unknown"
    ],
    "notes": "Following enumerations present before veris 1.3.3 removed: asset.governance.Unknown."
  },
  "attribute": {
    "confidentiality": {
      "data": [
        {
          "variety": "Payment"
        }
      ],
      "data_disclosure": "Potentially",
      "data_victim": [
        "Customer"
      ],
      "state": [
        "Unknown"
      ]
    },
    "integrity": {
      "variety": [
        "Software installation"
      ]
    }
  },
  "discovery_method": {
    "external": {
      "variety": [
        "Unknown"
      ]
    }
  },
  "discovery_notes": "Ext - Unrelated third party.  Discovered by security researcher who made the notifications.",
  "impact": {
    "overall_rating": "Unknown"
  },
  "incident_id": "BBB21C34-3C55-46E6-AAE8-FAC1166D2FBD",
  "plus": {
    "analysis_status": "Finalized",
    "analyst": "swidup",
    "attribute": {
      "confidentiality": {
        "credit_monitoring": "Unknown",
        "data_misuse": "Y"
      }

/* CPLD Registers (base addr = falcbase, TE only) */
/* CPLD v. 0 */
#define CPLD_REG1	0x140	/* Chip resets, DCD/CTS status */
#define CPLD_REG2	0x144	/* Clock enable , LED control */
/* CPLD v. 2 or higher */
#define CPLD_V2_REG1	0x100	/* Chip resets, DCD/CTS status */
#define CPLD_V2_REG2	0x104	/* Clock enable , LED control */
#define CPLD_ID_REG	0x108	/* CPLD version */

/* CPLD Register bit description: for the FALC bits, they should always be 
   set based on the channel (use (bit<<(2*ch)) to access the correct bit for 
   that channel) */
#define CPLD_REG1_FALC_RESET	0x01
#define CPLD_REG1_SCA_RESET	0x02
#define CPLD_REG1_GLOBAL_CLK	0x08
#define CPLD_REG1_FALC_DCD	0x10
#define CPLD_REG1_FALC_CTS	0x20

#define CPLD_REG2_FALC_TX_CLK	0x01
#define CPLD_REG2_FALC_RX_CLK	0x02
#define CPLD_REG2_FALC_LED1	0x10
#define CPLD_REG2_FALC_LED2	0x20

/* Structure with FALC-related fields (TE only) */
#define PC300_FALC_MAXLOOP	0x0000ffff	/* for falc_issue_cmd() */

typedef struct falc {
	u8 sync;	/* If true FALC is synchronized */
	u8 active;	/* if TRUE then already active */
	u8 loop_active;	/* if TRUE a line loopback UP was received */
	u8 loop_gen;	/* if TRUE a line loopback UP was issued */

	u8 num_

using namespace Foam;

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

int main(int argc, char *argv[])
{
    argList::noParallel();
    argList::validArgs.append("dat file");

    argList args(argc, argv);

    if (!args.check())
    {
         FatalError.exit();
    }

    #include "createTime.H"

    std::ifstream plot3dFile(args.args()[1].c_str());

    string line;
    std::getline(plot3dFile, line);
    std::getline(plot3dFile, line);

    IStringStream Istring(line);
    word block;
    string zoneName;
    token punctuation;
    label iPoints;
    label jPoints;

    Istring >> block;
    Istring >> block;
    Istring >> zoneName;
    Istring >> punctuation;
    Istring >> block;
    Istring >> iPoints;
    Istring >> block;
    Istring >> jPoints;

    Info<< "Number of vertices in i direction = " << iPoints << endl
        << "Number of vertices in j direction = " << jPoints << endl;

    // We ignore the first layer of points in i and j the biconic meshes
    label nPointsij = (iPoints - 1)*(jPoints - 1);

    pointField points(nPointsij, Zero);

    for (direction comp = 0; comp < 2; comp++)
    {
        label p(0);

        for (label j = 0; j < jPoints; j++)
        {
            for (label i = 0; i < iPoints; i++)
            {
                double coord;
                plot3dFile >> coord;

                // if statement ignores the first layer in i and j
                if (i>0 && j>0)
                {
                    points[p++][comp] = coord;
                }
            }
        }
    }

    // correct error in biconic meshes
    forAll(points, i)

    xsi_driver_vfirst_trans(t5, 0, 0);
    t18 = (t0 + 8248);
    *((int *)t18) = 1;

LAB1:    return;
}

static void Initial_48_4(char *t0)
{
    char *t1;
    char *t2;
    char *t3;
    char *t4;

LAB0:    t1 = (t0 + 7632U);
    t2 = *((char **)t1);
    if (t2 == 0)
        goto LAB2;

LAB3:    goto *t2;

LAB2:    xsi_set_current_line(48, ng0);

LAB4:    xsi_set_current_line(49, ng0);
    t2 = ((char*)((ng1)));
    t3 = (t0 + 3320);
    xsi_vlogvar_assign_value(t3, t2, 0, 0, 1);
    xsi_set_current_line(50, ng0);
    t2 = ((char*)((ng1)));
    t3 = (t0 + 3640);
    xsi_vlogvar_assign_value(t3, t2, 0, 0, 1);
    xsi_set_current_line(51, ng0);
    t2 = (t0 + 7440);
    xsi_process_wait(t2, 100000LL);
    *((char **)t1) = &&LAB5;

LAB1:    return;
LAB5:    xsi_set_current_line(52, ng0);
    t3 = ((char*)((ng2)));
    t4 = (t0 + 3320);
    xsi_vlogvar_assign_value(t4, t3, 0, 0, 1);
    xsi_set_current_line(53, ng0);
    t2 = ((char*)((ng2)));
    t3 = (t0 + 3640);
    xsi_vlogvar_assign_value(t3, t2, 0, 0, 1);


// Created by cgo -godefs - DO NOT EDIT
// cgo -godefs -- -Wall -Werror -static -I/tmp/include -m32 _const.go

package unix

import "syscall"

const (
	AF_ALG                               = 0x26
	AF_APPLETALK                         = 0x5
	AF_ASH                               = 0x12
	AF_ATMPVC                            = 0x8
	AF_ATMSVC                            = 0x14
	AF_AX25                              = 0x3
	AF_BLUETOOTH                         = 0x1f
	AF_BRIDGE                            = 0x7
	AF_CAIF                              = 0x25
	AF_CAN                               = 0x1d
	AF_DECnet                            = 0xc
	AF_ECONET                            = 0x13
	AF_FILE                              = 0x1
	AF_IB                                = 0x1b
	AF_IEEE802154                        = 0x24
	AF_INET                              = 0x2
	AF_INET6                             = 0xa
	AF_IPX                               = 0x4
	AF_IRDA                              = 0x17
	AF_ISDN                              = 0x22
	AF_IUCV                              = 0x20
	AF_KCM                               = 0x29
	AF_KEY                               = 0xf
	AF_LLC                               = 0x1a
	AF_LOCAL                             = 0x1
	AF_MAX                               = 0x2c
	AF_MPLS                              = 0x1c
	AF_NETBEUI                           = 0xd
	AF_NETLINK                           = 0x10
	AF_NETROM                            = 0x6
	AF_NFC                               = 0x27
	AF_PACKET                            = 0x11
	AF_PHONET                            = 0x23
	AF_PPPOX                             = 0x18
	AF_QIPCRTR                           = 0x2a
	AF_RDS                               = 0x15
	AF_ROSE                              = 0xb
	AF_ROU

#define PCI_CB_CAPABILITY_LIST	0x14

/* Capability lists */

#define PCI_CAP_LIST_ID		0	/* Capability ID */
#define  PCI_CAP_ID_PM		0x01	/* Power Management */
#define  PCI_CAP_ID_AGP		0x02	/* Accelerated Graphics Port */
#define  PCI_CAP_ID_VPD		0x03	/* Vital Product Data */
#define  PCI_CAP_ID_SLOTID	0x04	/* Slot Identification */
#define  PCI_CAP_ID_MSI		0x05	/* Message Signalled Interrupts */
#define  PCI_CAP_ID_CHSWP	0x06	/* CompactPCI HotSwap */
#define PCI_CAP_LIST_NEXT	1	/* Next capability in the list */
#define PCI_CAP_FLAGS		2	/* Capability defined flags (16 bits) */
#define PCI_CAP_SIZEOF		4

/* Power Management Registers */

#define PCI_PM_PMC              2       /* PM Capabilities Register */
#define  PCI_PM_CAP_VER_MASK	0x0007	/* Version */
#define  PCI_PM_CAP_PME_CLOCK	0x0008	/* PME clock required */
#define  PCI_PM_CAP_RESERVED    0x0010  /* Reserved field */
#define  PCI_PM_CAP_DSI		0x0020	/* Device specific initialization */
#define  PCI_PM_CAP_AUX_POWER	0x01C0	/* Auxilliary power support mask */
#define  PCI_PM_CAP_D1		0x0200	/* D1 power state support */
#define  PCI_PM_CAP_D2		0x0400	/* D2 power state support */
#define  PCI_PM_CAP_PME		0x0800	/* PME pin supported */
#define  PCI_PM_CAP_PME_MASK    0xF800  /* PME Mask of all supported states */
#define  PCI_PM_CAP_PME_D0      0x0800  

4172 -86.642754 32.434776 38.005596 0.000000
4533 -64.949562 26.703930 71.210487 0.000000
4534 -67.859985 24.723639 69.190186 0.000000
4535 -67.029861 28.164146 68.680107 0.000000
4536 -69.940292 34.465073 62.639217 0.000000
4537 -70.930450 31.054571 63.309322 0.000000
4538 -72.740700 32.434776 60.498909 0.000000
4539 -75.401100 30.354469 58.278580 0.000000
4540 -74.430954 33.784973 57.628487 0.000000
4541 -76.041191 34.955147 54.758060 0.000000
4542 -73.380798 37.025452 56.978390 0.000000
6144 -28.104136 8.101192 95.644081 0.000000
6145 -30.904547 10.121490 94.573921 0.000000
6146 -33.564938 12.051774 93.443756 0.000000
6147 -30.674513 14.052068 94.153862 0.000000
6245 -87.522888 23.393442 42.366238 0.000000
6246 -86.142677 37.815567 33.934994 0.000000
6247 -87.302849 34.465073 34.545086 0.000000
6466 -66.109734 31.614655 68.060013 0.000000
7294 -80.981918 30.644510 50.047367 0.000000
7295 -82.972214 29.534348 47.396976 0.000000
7296 -82.052078 32.824833 46.826893 0.000000
7297 -82.992218 34.955147 43.526409 0.000000
7298 -83.782333 37.025452 40.155910 0.000000
7300 -82.632164 40.245922 39.435

find(Directory, Pattern, FileList) :-
	find(Directory, Pattern, FileList, []).

find(Directory, Pattern, FileList0, FileList) :-
	read_directory(Directory, Pattern, SubdirList, LocalFileList),
	(
	    foreach(LocalFile, LocalFileList),
	    fromto(FileList0, [File | Tail], Tail, FileList1),
	    param(Directory)
	do
	    join_string([Directory, LocalFile], "/", File)
	),
	(
	    foreach(Subdir, SubdirList),
	    fromto(FileList1, FileListOut, FileListIn, FileList),
	    param(Directory, Pattern)
	do
	    join_string([Directory, Subdir], "/", Dir),
	    find(Dir, Pattern, FileListOut, FileListIn)
	).

read_file_terms_as_list(File, List) :-
	open(File, read, Stream),
	(
	    read(Stream, Entry0),
	    (
		fromto(Entry0, PrevEntry, NextEntry, end_of_file),
		foreach(Entry, List),
		param(Stream)
	    do
		Entry = PrevEntry,
		read(Stream, NextEntry)
	    )
	->
	    close(Stream)
	;
	    % Make sure we close the stream even if something failed.
	    close(Stream),
	    fail
	).

drop_n(N, List, Remainder) :-
	( N > 0 ->
	    List = [_ | Tail],
	    N_1 is N - 1,
	    drop_n(N_1, Tail, Remainder)
	;
	    N =:= 0,
	    Remainder = List
	).

drop_last([_], []) :-
	!.
drop_last([X | Xs], [X | Ys]) :-
	drop_last(Xs, Ys).


portray_struct(Term, no_macro_expansion(with(Functor,List))) :-
	functor(Term, Functor, Arity),
	functor(Template, Functor, Arity),
	current_

/**
 * Copyright 2017 Google Inc. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#import "AIEventRequest.h"
#import "AIDataService.h"
#import "AIDataService_Private.h"
#import "AIConfiguration.h"
#import "AIRequestEntity_Private.h"
#import "AIQueryRequest+Private.h"
#import "AIRequest_Private.h"
#import "AiOriginalRequest_Private.h"

#import "AIResponseConstants.h"

@implementation AIEventRequest

- (void)configureHTTPRequest {
    AIDataService *dataService = self.dataService;
    id <AIConfiguration> configuration = dataService.configuration;
    
    NSString *version = self.version;
    
    NSString *path = @"query";
    
    if (version) {
        path = [path stringByAppendingFormat:@"?v=%@", version];
    }
    
    NSString *timeZoneString = self.timeZone ? self.timeZone.name : [NSTimeZone localTimeZone].name;
    
    NSDictionary *eventDictionary = @{
                                      @"name": _event.name ?: @"",
                                      @"data": _event.data ?: @{}
                                      };
    
    NSMutableDictionary *parameters = [@{
                                         @"event": eventDictionary,
                                         @"timezone": timeZoneString,
                                         @"lang": self.lang
                                         } mutableCopy];
    
    parameters[@"originalRequest"] = [self.originalRequest serialized];
    
    if (self.resetContexts) {
        parameters[@"

/*********************************************************************************
 *                                                                               *
 * The MIT License (MIT)                                                         *
 *                                                                               *
 * Copyright (c) 2015-2020 aoju.org Greg Messner and other contributors.         *
 *                                                                               *
 * Permission is hereby granted, free of charge, to any person obtaining a copy  *
 * of this software and associated documentation files (the "Software"), to deal *
 * in the Software without restriction, including without limitation the rights  *
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell     *
 * copies of the Software, and to permit persons to whom the Software is         *
 * furnished to do so, subject to the following conditions:                      *
 *                                                                               *
 * The above copyright notice and this permission notice shall be included in    *
 * all copies or substantial portions of the Software.                           *
 *                                                                               *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR    *
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,      *
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE   *
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER        *
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, *
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN     *
 * THE SOFTWARE.                                                                 *
 ********************************************************************************/
package org.aoju.bus.gitlab.models;

import org.aoju.bus.gitlab.JacksonJson;

/**
 * @author Kimi Liu
 * @version 6.1.0
 * @since JDK 1.8+
 */
public class WikiPage {

    private String title;
    private String content;
    private String slug;
    private String format;

    public WikiPage() {
    }

    public WikiPage(String title, String slug, String content) {
        this.title = title;
        this.slug = slug;
        this.content = content;
    }

    public String getTitle() {
        return this.title;
    }

    public void setTitle(String title

    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\n",
      "  0%|          | 0/469 [00:00<?, ?it/s]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Test loss: 106.4548\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 469/469 [00:09<00:00, 48.24it/s]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch: 8 Train loss: 105.3354\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\n",
      "  0%|          | 0/469 [00:00<?, ?it/s]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Test loss: 105.6179\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 469/469 [00:08<00:00, 52.83it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch: 9 Train loss: 104.1733\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      "  0%|          | 0/469 [00:00<?, ?it/s]"
     ]
    },
    {
     

.twitter-feed i{ font-size: 48px; display: inline-block; margin-bottom: 32px; }
.twitter-feed span a{ border-bottom: none; }

.tweets-feed .user{ display: none; }
.tweets-feed .interact{ display: none; }
.tweets-feed .tweet{ color: #fff; font-size: 30px; line-height: 36px; font-family: @custom-heading-font,"Helvetica Neue", Helvetica, Arial, sans-serif; font-weight: 300;  }
.tweets-feed .tweet a{ color: #fff !important; border-color: #fff !important; }
.tweets-feed .timePosted{ display: none; }

@media all and(max-width: 767px){
	.tweets-feed .tweet{ font-size: 20px; line-height: 26px; }
}


//
// Contact
// -------------------------------------------------- 

.contact-tweets{ background: @color-primary; color: #fff; position: relative; overflow: hidden; height: 600px; .preserve-3d; }
.contact-tweets .social_twitter{ font-size: 42px; margin-bottom: 32px; display: inline-block; }
.contact-tweets .map-holder{ position: absolute; height: 100%; padding: 0px; top: 0px; right: 0px; }
.contact-tweets .timePosted{ display: block !important; }
.map-holder:before{ content: ''; position: absolute; top: 0; left: 0; width: 100%; height: 100%; z-index: 2; opacity: 0; }
.map-holder iframe{ border: 0px; position: absolute; width: 100%; height: 100%; }
.contact-tweets span a{ border-bottom: 2px solid #fff; padding-bottom: 1px; }


//
// Sponsors
// -------------------------------------------------- 

.sponsors{ background: @color-muted; }
.sponsor{ margin-bottom: @standard-space/2; height: 80px; line-

static void sun8i_de3_ccsc_set_coefficients(struct regmap *map, int layer,
					    enum sun8i_csc_mode mode,
					    enum drm_color_encoding encoding,
					    enum drm_color_range range)
{
	const u32 *table;
	u32 base_reg;

	switch (mode) {
	case SUN8I_CSC_MODE_YUV2RGB:
		table = yuv2rgb_de3[range][encoding];
		break;
	case SUN8I_CSC_MODE_YVU2RGB:
		table = yvu2rgb_de3[range][encoding];
		break;
	default:
		DRM_WARN("Wrong CSC mode specified.\n");
		return;
	}

	base_reg = SUN50I_MIXER_BLEND_CSC_COEFF(DE3_BLD_BASE, layer, 0, 0);
	regmap_bulk_write(map, base_reg, table, 12);
}

static void sun8i_csc_enable(struct regmap *map, u32 base, bool enable)
{
	u32 val;

	if (enable)
		val = SUN8I_CSC_CTRL_EN;
	else
		val = 0;

	regmap_update_bits(map, SUN8I_CSC_CTRL(base), SUN8I_CSC_CTRL_EN, val);
}

static void sun8i_de3_ccsc_enable(struct regmap *map, int layer, bool enable)
{
	u32 val, mask;

	mask = SUN50I_MIXER_BLEND_CSC_CTL_EN(layer);

	if (enable)
		val = mask;
	else
		val = 0;

	regmap_update_bits(map, SUN50I_MIXER_BLEND_CSC_CTL(DE3_BLD_BASE),
			   mask, val);
}

void sun8i_csc_set_ccsc_coefficients(struct sun8i_mixer *mixer, int layer,
				     enum sun8i_csc_

static int ssb_pcihost_probe(struct pci_dev *dev,
			     const struct pci_device_id *id)
{
	struct ssb_bus *ssb;
	int err = -ENOMEM;
	const char *name;
	u32 val;

	ssb = kzalloc(sizeof(*ssb), GFP_KERNEL);
	if (!ssb)
		goto out;
	err = pci_enable_device(dev);
	if (err)
		goto err_kfree_ssb;
	name = dev_name(&dev->dev);
	if (dev->driver && dev->driver->name)
		name = dev->driver->name;
	err = pci_request_regions(dev, name);
	if (err)
		goto err_pci_disable;
	pci_set_master(dev);

	/* Disable the RETRY_TIMEOUT register (0x41) to keep
	 * PCI Tx retries from interfering with C3 CPU state */
	pci_read_config_dword(dev, 0x40, &val);
	if ((val & 0x0000ff00) != 0)
		pci_write_config_dword(dev, 0x40, val & 0xffff00ff);

	err = ssb_bus_pcibus_register(ssb, dev);
	if (err)
		goto err_pci_release_regions;

	pci_set_drvdata(dev, ssb);

out:
	return err;

err_pci_release_regions:
	pci_release_regions(dev);
err_pci_disable:
	pci_disable_device(dev);
err_kfree_ssb:
	kfree(ssb);
	return err;
}

static void ssb_pcihost_remove(struct pci_dev *dev)
{
	struct ssb_bus *ssb = pci_get_drvdata(dev);

	ssb_bus_unregister(ssb);
	pci_release_regions(dev);
	pci_disable_device(dev);
	kfree(ssb);
	pci_set_drvdata(dev, NULL);

//===--- Cache-Mac.cpp - Caching mechanism implementation -----------------===//
//
// This source file is part of the Swift.org open source project
//
// Copyright (c) 2014 - 2017 Apple Inc. and the Swift project authors
// Licensed under Apache License v2.0 with Runtime Library Exception
//
// See https://swift.org/LICENSE.txt for license information
// See https://swift.org/CONTRIBUTORS.txt for the list of Swift project authors
//===----------------------------------------------------------------------===//
// This source file is part of the polarphp.org open source project
//
// Copyright (c) 2017 - 2019 polarphp software foundation
// Copyright (c) 2017 - 2019 zzu_softboy <zzu_softboy@163.com>
// Licensed under Apache License v2.0 with Runtime Library Exception
//
// See https://polarphp.org/LICENSE.txt for license information
// See https://polarphp.org/CONTRIBUTORS.txt for the list of polarphp project authors
//
// Created by polarboy on 2019/11/30.
//===----------------------------------------------------------------------===//
//
//  This file implements the caching mechanism using darwin's libcache.
//
//===----------------------------------------------------------------------===//

#include "polarphp/basic/Cache.h"
#include "llvm/ADT/SmallString.h"
#include <cache.h>

namespace polar::sys {

using llvm::StringRef;

CacheImpl::ImplTy CacheImpl::create(StringRef Name, const CallBacks &callbacks)
{
   llvm::SmallString<32> NameBuf(Name);
   cache_attributes_t attrs = {
      CACHE_ATTRIBUTES_VERSION_2,
      callbacks.keyHashCB,
      callbacks.keyIsEqualCB,
      nullptr,
      callbacks.keyDestroyCB,
      callbacks.valueReleaseCB,
      nullptr,
      nullptr,
      callbacks.userData,
      callbacks.valueRetainCB,
   };

   cache_t *cacheOut = nullptr;
   cache_create(NameBuf.c_str(), &attrs, &cacheOut);
   assert(cacheOut);
   return cacheOut;
}

void CacheImpl::setAndRetain

        public override void Run(ref ReturnCodeAction returnCode)
        {
            Logger.Write("Running StopServiceAction. ServiceName = " + this.ServiceName);

            try
            {
                uint resultCode = 1;
                string filter = String.Format("SELECT * FROM Win32_Service WHERE Name = '{0}'", this.ServiceName);

                ManagementObjectSearcher query = new ManagementObjectSearcher(filter);

                if (query != null)
                {
                    ManagementObjectCollection services = query.Get();

                    foreach (ManagementObject service in services)
                    {
                        ManagementBaseObject outParams = service.InvokeMethod("StopService", null, null);
                        resultCode = Convert.ToUInt16(outParams.Properties["ReturnValue"].Value);
                        if (resultCode == 0)
                            Logger.Write("Successfully stop " + ServiceName);
                        else
                            Logger.Write("Failed to stop " + ServiceName + ". Result code = " + resultCode + " : " + this.GetResultCodeMeaning(resultCode));
                    }
                }
                else
                    Logger.Write("The service " + ServiceName + " was not found.");
            }
            catch (Exception ex)
            {
                Logger.Write("Failed stop " + ServiceName + "\r\n" + ex.Message);
            }
            Logger.Write("End of StopServiceAction.");
        }

        private string GetResultCodeMeaning(uint resultCode)
        {
            string meaning = "Unknown result code.";

            switch (resultCode)
            {
                case 0:
                    meaning = "The request was accepted";
                    break;
                case 1:
                    meaning = "The request is not supported";
                    break;
                case 2:
                    meaning = "The user did not have the necessary access";
                    break;
                case 3:
                    meaning = "The service cannot be stopped because other services that are running are dependent on it";
                    break;
                case 4:
                    meaning = "The requested control code is not valid, or it is unacceptable to the service";
                    break;
                case 5:
                    meaning = "The requested control code cannot be sent to the service because the state of the service (Win32_BaseService.

    
    <h3><a name="inflate" id="inflate">Output Decompression</a></h3>
      <p>The <code class="module"><a href="../mod/mod_deflate.html">mod_deflate</a></code> module also provides a filter for
      inflating/uncompressing a gzip compressed response body. In order to activate
      this feature you have to insert the <code>INFLATE</code> filter into
      the outputfilter chain using <code class="directive"><a href="../mod/core.html#setoutputfilter">SetOutputFilter</a></code> or <code class="directive"><a href="../mod/mod_mime.html#addoutputfilter">AddOutputFilter</a></code>, for example:</p>

      <div class="example"><p><code>
        &lt;Location /dav-area&gt;<br />
        <span class="indent">
          ProxyPass http://example.com/<br />
          SetOutputFilter INFLATE<br />
        </span>
        &lt;/Location&gt;
      </code></p></div>

      <p>This Example will uncompress gzip'ed output from example.com, so other
      filters can do further processing with it.
      </p>
      
    
    <h3><a name="input" id="input">Input Decompression</a></h3>
      <p>The <code class="module"><a href="../mod/mod_deflate.html">mod_deflate</a></code> module also provides a filter for
      decompressing a gzip compressed request body . In order to activate
      this feature you have to insert the <code>DEFLATE</code> filter into
      the input filter chain using <code class="directive"><a href="../mod/core.html#setinputfilter">SetInputFilter</a></code> or <code class="directive"><a href="../mod/mod_mime.html#addinputfilter">AddInputFilter</a></code>, for example:</p>

      <div class="example"><p><code>
        &lt;Location /dav-area&gt;<br />
        <span class="indent">
          

  class Subscription < ::Subscription
    include Freemium::RecurringBilling
  end

  def test_run_billing
    Subscription.expects(:process_new_transactions).once
    Subscription.expects(:find_expirable).once.returns([])
    Subscription.expects(:expire).once
    Subscription.run_billing
  end

  def test_run_billing_sends_report
    Subscription.stubs(:process_new_transactions)
    Freemium.stubs(:admin_report_recipients).returns("test@example.com")

    Freemium.mailer.expects(:deliver_admin_report)
    Subscription.run_billing
  end

  def test_subscriptions_to_expire
    # making a one-off fixture set, basically
    create_billable_subscription # this subscription qualifies
    create_billable_subscription(:subscription_plan => subscription_plans(:free)) # this subscription would qualify, except it's for the free plan
    create_billable_subscription(:paid_through => Date.today) # this subscription would qualify, except it's already paid
    create_billable_subscription(:expire_on => Date.today + 1) # this subscription would qualify, except it's already been set to expire

    expirable = Subscription.send(:find_expirable)
    assert expirable.all? {|subscription| subscription.subscription_plan.rate_cents > 0}, "free subscriptions don't expire"
    assert expirable.all? {|subscription| subscription.paid_through < Date.today}, "paid subscriptions don't expire"
    assert expirable.all? {|subscription| !subscription.expire_on or subscription.expire_on < subscription.paid_through}, "subscriptions already expiring aren't included"
  end

  def test_processing_new_transactions
    subscription = subscriptions(:bobs_subscription)
    paid_through = subscription.paid_through
    t = Freemium::Transaction.new(:billing_key => subscription.billing_key, :amount => subscription.subscription_plan.rate, :

  <xsl:value-of select="$olink.base.uri"/>
  <xsl:call-template name="href.target">
    <xsl:with-param name="object" select="$nd"/>
    <xsl:with-param name="context" select="NOTANODE"/>
  </xsl:call-template>
</xsl:template>

<!-- Templates for extracting cross reference information
     from a document for use in an xref database.
-->

<xsl:template name="attrs">
  <xsl:param name="nd" select="."/>

  <xsl:attribute name="element">
    <xsl:value-of select="local-name(.)"/>
  </xsl:attribute>

  <xsl:attribute name="href">
    <xsl:call-template name="olink.href.target">
      <xsl:with-param name="nd" select="$nd"/>
    </xsl:call-template>
  </xsl:attribute>

  <xsl:variable name="num">
    <xsl:apply-templates select="$nd" mode="label.markup">
      <xsl:with-param name="verbose" select="0"/>
    </xsl:apply-templates>
  </xsl:variable>

  <xsl:if test="$num">
    <xsl:attribute name="number">
      <xsl:value-of select="$num"/>
    </xsl:attribute>
  </xsl:if>

  <xsl:choose>
    <xsl:when test="$nd/@id">
      <xsl:attribute name="targetptr">
        <xsl:value-of select="$nd/@id"/>
      </xsl:attribute>
    </xsl:when>
    <xsl:when test="$nd/@xml:id">
      <xsl:attribute name="targetptr">
        <xsl:value-of select="$nd/@xml:id"/>
      </xsl:attribute>
    </xsl:when>
  </xsl:choose>

  <xsl:if test="$nd/@lang">
    <xsl:attribute name="lang">
      <xsl:value-of select="$nd/@lang"/>
    </xsl:attribute>
  </xsl:if>

</xsl:template>

<xsl:template name

/*
 *  linux/fs/nfs/iostat.h
 *
 *  Declarations for NFS client per-mount statistics
 *
 *  Copyright (C) 2005, 2006 Chuck Lever <cel@netapp.com>
 *
 */

#ifndef _NFS_IOSTAT
#define _NFS_IOSTAT

#include <linux/percpu.h>
#include <linux/cache.h>
#include <linux/nfs_iostat.h>

struct nfs_iostats {
	unsigned long long	bytes[__NFSIOS_BYTESMAX];
#ifdef CONFIG_NFS_FSCACHE
	unsigned long long	fscache[__NFSIOS_FSCACHEMAX];
#endif
	unsigned long		events[__NFSIOS_COUNTSMAX];
} ____cacheline_aligned;

static inline void nfs_inc_server_stats(const struct nfs_server *server,
					enum nfs_stat_eventcounters stat)
{
	this_cpu_inc(server->io_stats->events[stat]);
}

static inline void nfs_inc_stats(const struct inode *inode,
				 enum nfs_stat_eventcounters stat)
{
	nfs_inc_server_stats(NFS_SERVER(inode), stat);
}

static inline void nfs_add_server_stats(const struct nfs_server *server,
					enum nfs_stat_bytecounters stat,
					long addend)
{
	this_cpu_add(server->io_stats->bytes[stat], addend);
}

static inline void nfs_add_stats(const struct inode *inode,
				 enum nfs_stat_bytecounters stat,
				 long addend)
{
	nfs_add_server_stats(NFS_SERVER(inode), stat, addend);
}

#ifdef CONFIG_NFS_FSCACHE
static inline void nfs_add_fscache_stats(struct inode *inode,
					 enum nfs_stat_fscachecounters stat,
					 long addend)
{
	this_cpu_add(NFS_SERVER(inode)->

#pragma mark - KVO监听
- (void)addObservers
{
    NSKeyValueObservingOptions options = NSKeyValueObservingOptionNew | NSKeyValueObservingOptionOld;
    [self.scrollView addObserver:self forKeyPath:MJRefreshKeyPathContentOffset options:options context:nil];
    [self.scrollView addObserver:self forKeyPath:MJRefreshKeyPathContentSize options:options context:nil];
    self.pan = self.scrollView.panGestureRecognizer;
    [self.pan addObserver:self forKeyPath:MJRefreshKeyPathPanState options:options context:nil];
}

- (void)removeObservers
{
    [self.superview removeObserver:self forKeyPath:MJRefreshKeyPathContentOffset];
    [self.superview removeObserver:self forKeyPath:MJRefreshKeyPathContentSize];;
    [self.pan removeObserver:self forKeyPath:MJRefreshKeyPathPanState];
    self.pan = nil;
}

- (void)observeValueForKeyPath:(NSString *)keyPath ofObject:(id)object change:(NSDictionary *)change context:(void *)context
{
    // 遇到这些情况就直接返回
    if (!self.userInteractionEnabled) return;
    
    // 这个就算看不见也需要处理
    if ([keyPath isEqualToString:MJRefreshKeyPathContentSize]) {
        [self scrollViewContentSizeDidChange:change];
    }
    
    // 看不见
    if (self.hidden) return;
    if ([keyPath isEqualToString:MJRefreshKeyPathContentOffset]) {
        [self scrollViewContentOffsetDidChange:change];
    } else if ([keyPath isEqualToString:MJRefreshKeyPathPanState]) {
        [self scrollViewPanStateDidChange:change];
    }
}

- (void)scrollViewContentOffsetDidChange:(NSDictionary *)change{}
- (void)scrollViewContentSizeDidChange:(NSDictionary *)change{}
- (void)scrollViewPanStateDidChange:(NSDictionary *)change{}



#include <stdio.h>
#include "../../../▲课本算法实现/▲10 内部排序/00 SequenceListType/SequenceListType.c"//**▲10 内部排序**//

/* 函数原型 */
void Algo_10_28(SqList_sort *L);
void PrintKey(KeyType e);

int main(int argc, char *argv[])
{	
	FILE *fp;
	SqList_sort L;
			
	printf("创建并输出一个任意序列...\n");
	fp = fopen("Data/Algo_10_28.txt", "r");
	CreateSortList(fp, &L);
	Traverse(L, PrintKey);
	printf("\n");	

	printf("将关键字按递增顺序排列...\n");
	Algo_10_28(&L); 
	Traverse(L, PrintKey);
	printf("\n");	
		
	return 0;
}

/*━━━━━━━━━━━┓
┃题10.28：双向起泡排序 ┃
┗━━━━━━━━━━━*/
void Algo_10_28(SqList_sort *L)
{
	int k, start, end, cache, dir;
	RcdType tmp;
	Status tag;
	
	dir = 1; 
	
	start = 1;
	end = (*L).length;
	
	while(1)
	{
		tag = FALSE;
							
		for(k=start; k!=end; k=k+dir)
		{
			if(LT((*L).r[k+1].key, (*L).r[k].key))
			{
				tmp = (*L).r[k+1];
				(*L).r[k+1] = (*L).r[k];
				(*L).r[k] = tmp;
				
				tag = TRUE;							 
		

from core.framework.module import BaseModule
from core.utils.utils import Utils


class Module(BaseModule):
    meta = {
        'name': 'Intercepting Proxy',
        'author': '@LanciniMarco (@MWRLabs)',
        'description': 'Intercept the traffic generated by the device. Read the comments below before starting.',
        'options': (
            ('port', 9090, True, 'Proxy service port.'),
            ('verbose', False, True, 'Verbose output (print the HTTP headers of every request/response).'),
            ('anticache', True, True, 'Strip out request headers that might cause the server to return 304-not-modified.'),
            ('output', True, False, 'Full path of the output dump file.'),
            ('upstream_ip', False, False, 'Upstream proxy server IP (to forward all requests to).'),
            ('upstream_port', False, False, 'Upstream proxy server PORT (to forward all requests to).'),
            ('target_domain', "", False, 'Comma separated list of the domains to analyze (Example: domain.com,other.com). If empty, everything will be in scope.'),
        ),
        'comments': ['Connect this workstation and the device to the same Wi-Fi',
                     'Configure the device to use this host as proxy',
                     'Run `comms/certs/install_ca_mitm` to install the CA Certificate of MitmProxy on the device',
                     'Notice that, due to a current bug in Mitmproxy, if an upstream proxy is set, the logging functionality will not work (i.e., the output file will be empty)']
    }

    # ==================================================================================================================
    # UTILS
    # ==================================================================================================================
    def __init__(self, params):
        BaseModule.__init__(self, params)
        # Setting default output file
        self.options['output'] = self.local_op.build_output_path_for_file("proxy_regular.out", self)

    def module_pre(self):
        return BaseModule.module_pre(self, bypass_app=True)

    # ==================================================================================================================
    # RUN
    # ==================================================================================================================
    def module

      <bpmndi:BPMNShape id="EndEvent_042s0oc_di" bpmnElement="EndEvent_042s0oc">
        <dc:Bounds x="635" y="230" width="36" height="36" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="653" y="270" width="0" height="12" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="SequenceFlow_19klrd3_di" bpmnElement="SequenceFlow_19klrd3">
        <di:waypoint xsi:type="dc:Point" x="581" y="248" />
        <di:waypoint xsi:type="dc:Point" x="635" y="248" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="608" y="227" width="0" height="12" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_0cu1bs2_di" bpmnElement="SequenceFlow_0cu1bs2">
        <di:waypoint xsi:type="dc:Point" x="442" y="248" />
        <di:waypoint xsi:type="dc:Point" x="481" y="248" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="461.5" y="227" width="0" height="12" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="ServiceTask_1mvu7vz_di" bpmnElement="Task_1t0a4uy">
        <dc:Bounds x="342" y="208" width="100" height="80" />
      </bpmndi:BPMNShape>
    </bpmndi:BPMNPlane>
  </bpmndi:BPMNDiagram

        /* And now backwards */
        iv = ivec + AES_BLOCK_SIZE * 2;
        iv2 = ivec + AES_BLOCK_SIZE * 3;
        len = length;
        while (len >= AES_BLOCK_SIZE) {
            out -= AES_BLOCK_SIZE;
            /*
             * XXX: reduce copies by alternating between buffers
             */
            memcpy(tmp, out, AES_BLOCK_SIZE);
            for (n = 0; n < AES_BLOCK_SIZE; ++n)
                out[n] ^= iv[n];
            /*
             * hexdump(stdout, "out ^ iv", out, AES_BLOCK_SIZE);
             */
            AES_encrypt(out, out, key);
            /*
             * hexdump(stdout,"enc", out, AES_BLOCK_SIZE);
             */
            /*
             * hexdump(stdout,"iv2", iv2, AES_BLOCK_SIZE);
             */
            for (n = 0; n < AES_BLOCK_SIZE; ++n)
                out[n] ^= iv2[n];
            /*
             * hexdump(stdout,"out", out, AES_BLOCK_SIZE);
             */
            iv = out;
            memcpy(prev, tmp, AES_BLOCK_SIZE);
            iv2 = prev;
            len -= AES_BLOCK_SIZE;
        }
    } else {
        /* First backwards */
        iv = ivec + AES_BLOCK_SIZE * 2;
        iv2 = ivec + AES_BLOCK_SIZE * 3;
        in += length;
        out += length;
        while (len >= AES_BLOCK_SIZE) {
            in -= AES_BLOCK_SIZE;
            out -= AES_BLOCK_SIZE;
            memcpy(tmp, in, AES_BLOCK_SIZE);
            memcpy(tmp2, in, AES_BLOCK_SIZE);
            for (n = 0; n < AES_BLOCK_SIZE; ++n)
                tmp[n] ^= iv2[n];
            AES_decrypt(tmp, out, key);
            for (n = 0; n < AES_BLOCK_SIZE; ++n)
                out[n] ^= iv[n];
            

/**
 * Test class for PhpOffice\PhpWord\Style\AbstractStyle
 *
 * @runTestsInSeparateProcesses
 */
class AbstractStyleTest extends \PHPUnit\Framework\TestCase
{
    /**
     * Test set style by array
     */
    public function testSetStyleByArray()
    {
        $stub = $this->getMockForAbstractClass('\PhpOffice\PhpWord\Style\AbstractStyle');
        $stub->setStyleByArray(array('index' => 1));

        $this->assertEquals(1, $stub->getIndex());
    }

    /**
     * Test setBoolVal, setIntVal, setFloatVal, setEnumVal with normal value
     */
    public function testSetValNormal()
    {
        $stub = $this->getMockForAbstractClass('\PhpOffice\PhpWord\Style\AbstractStyle');

        $this->assertTrue(self::callProtectedMethod($stub, 'setBoolVal', array(true, false)));
        $this->assertEquals(12, self::callProtectedMethod($stub, 'setIntVal', array(12, 200)));
        $this->assertEquals(871.1, self::callProtectedMethod($stub, 'setFloatVal', array(871.1, 2.1)));
        $this->assertEquals(871.1, self::callProtectedMethod($stub, 'setFloatVal', array('871.1', 2.1)));
        $this->assertEquals('a', self::callProtectedMethod($stub, 'setEnumVal', array('a', array('a', 'b'), 'b')));
    }

    /**
     * Test setBoolVal, setIntVal, setFloatVal, setEnumVal with default value
     */
    public function testSetValDefault()
    {
        $stub = $this->getMockForAbstractClass('\PhpOffice\PhpWord\Style\AbstractStyle');

        $this->assertNotTrue(self::callProtectedMethod($stub, 'setBoolVal', array('a', false)));
        $this->assertEquals(200, self::callProtectedMethod($stub, 'setIntVal', array('foo', 200)));


/** DOC_DISABLE */

/* Windows platform with MS compiler */
#if defined(_WIN32) && defined(_MSC_VER)
  #undef XSLTPUBFUN
  #undef XSLTPUBVAR
  #undef XSLTCALL
  #if defined(IN_LIBXSLT) && !defined(LIBXSLT_STATIC)
    #define XSLTPUBFUN __declspec(dllexport)
    #define XSLTPUBVAR __declspec(dllexport)
  #else
    #define XSLTPUBFUN
    #if !defined(LIBXSLT_STATIC)
      #define XSLTPUBVAR __declspec(dllimport) extern
    #else
      #define XSLTPUBVAR extern
    #endif
  #endif
  #define XSLTCALL __cdecl
  #if !defined _REENTRANT
    #define _REENTRANT
  #endif
#endif

/* Windows platform with Borland compiler */
#if defined(_WIN32) && defined(__BORLANDC__)
  #undef XSLTPUBFUN
  #undef XSLTPUBVAR
  #undef XSLTCALL
  #if defined(IN_LIBXSLT) && !defined(LIBXSLT_STATIC)
    #define XSLTPUBFUN __declspec(dllexport)
    #define XSLTPUBVAR __declspec(dllexport) extern
  #else
    #define XSLTPUBFUN
    #if !defined(LIBXSLT_STATIC)
      #define XSLTPUBVAR __declspec(dllimport) extern
    #else
      #define XSLTPUBVAR extern
    #endif
  #endif
  #define XSLTCALL __cdecl
  #if !defined _REENTRANT
    #define _REENTRANT
  #endif
#endif

/* Windows platform with GNU compiler (Mingw) */
#if defined(_WIN32) && defined(__MINGW32__)
  #undef XSLTPUBFUN
  #undef XSLTPUBVAR
  #undef XSLTCALL
/*
  #if defined

        }

        // Awake is called only once when the script instance is being loaded. Used in place of the constructor for initialization.
        public void Awake() => SpawnDialog();

#if PROFILER_TELEMETRY
        public void Start() => ConstructTelemetry();
#endif

        private static void SpawnDialog()
        {
            if (multi_dialog != null)
            {
                ClampToScreen();

                // create popup dialog
                popup_dialog = PopupDialog.SpawnPopupDialog(multi_dialog, false, HighLogic.UISkin, false, "");
                popup_dialog.onDestroy.AddListener(new UnityAction(OnPopupDialogDestroy));
                scroll_list.children.Add(new DialogGUIVerticalLayout());
            }
        }

        public void Update()
        {
            if (Util.IsPaused)
                return;

            // skip calculations for a smoother display
#if PROFILER_TELEMETRY
            if ((Util.Clocks - update_timer) > (Stopwatch.Frequency / 25d))   // samples at 25 fps
            {
                update_timer = Util.Clocks;
                Calculate();
            }
#else
            if (((Util.Clocks - update_timer) > timeout) && visible)
            {
                update_timer = Util.Clocks;
                Calculate();
            }
#endif

            // hide or show the dialog box
            if ((Input.GetKey(KeyCode.LeftControl) || Input.GetKey(KeyCode.RightControl)) && Input.GetKeyUp(KeyCode.P))
                visible = !visible;

            if (visible)
            {
                if (popup_dialog == null)
                    SpawnDialog();
                popup_dialog.gameObject.SetActive(true);
            }
            else if (popup_dialog != null)
            {
                popup_dialog.gameObject.SetActive(false);
            }
        }

        private static void Calculate()
        {
            if (entries == null)
                return;

            foreach (KeyValuePair<string, Entry> p in entries)
            {
                Entry e = p.Value;

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;

class CreateDataTypesTable extends Migration
{
    /**
     * Run the migrations.
     *
     * @return void
     */
    public function up()
    {
        // Create table for storing roles
        Schema::create('data_types', function (Blueprint $table) {
            $table->increments('id');
            $table->string('name')->unique();
            $table->string('slug')->unique();
            $table->string('display_name_singular');
            $table->string('display_name_plural');
            $table->string('icon')->nullable();
            $table->string('model_name')->nullable();
            $table->string('description')->nullable();
            $table->boolean('generate_permissions')->default(false);
            $table->timestamps();
        });

        // Create table for storing roles
        Schema::create('data_rows', function (Blueprint $table) {
            $table->increments('id');
            $table->integer('data_type_id')->unsigned();
            $table->string('field');
            $table->string('type');
            $table->string('display_name');
            $table->boolean('required')->default(false);
            $table->boolean('browse')->default(true);
            $table->boolean('read')->default(true);
            $table->boolean('edit')->default(true);
            $table->boolean('add')->default(true);
            $table->boolean('delete')->default(true);
            $table->text('details')->nullable();

            $table
                ->foreign('data_type_id')
                ->references('id')
                ->on('data_types')
                ->onUpdate('cascade')
                ->onDelete('cascade');
        });
    }

    /**
     * Reverse the migrations.
     *
     * @return void
     */
    public function down()
    {
        Schema::dropIfExists('data_rows');
        Schema::dropIfExists('data_types');
    }

	create-glyph 'partial' 0x2202 : glyph-proc
		include : MarkSet.b
		include : OShape (CAP * 0.65) 0 SB RightSB OperatorStroke
		include : dispiro
			widths.lhs OperatorStroke
			flat (RightSB - OX) SmallSmoothA
			curl (RightSB - OX) (CAP - SmallSmoothB)
			hookend (CAP - O)
			g4   SB (CAP - Hook)


glyph-block Symbol-Math-Frame-And-Geometry : begin
	glyph-block-import CommonShapes
	glyph-block-import Common-Derivatives
	local sw GeometryStroke
	local kBox : 2 / 3
	local leftBox : SB * kBox
	local rightBox : Width - SB * kBox
	local radiusBox : (rightBox - leftBox) / 2
	local topBox : SymbolMid + radiusBox
	local bottomBox : SymbolMid - radiusBox


	local kCircle : 2 / 3
	local leftCircle : SB * kCircle
	local rightCircle : Width - SB * kCircle
	local radiusCircle : (rightCircle - leftCircle) / 2

	create-glyph 'mathO' : glyph-proc
		include : dispiro
			widths.lhs GeometryStroke
			g4 Middle (SymbolMid + radiusCircle - O)
			archv nothing 2
			g4 (leftCircle + O) SymbolMid
			arcvh nothing 2
			g4 Middle (SymbolMid - radiusCircle + O)
			archv nothing 2
			g4 (rightCircle - O) SymbolMid
			arcvh nothing 2
			close

	create-glyph 'mathOOutline' : glyph-proc
		include : spiro-outline
			g4 Middle (SymbolMid + radiusCircle)
			archv nothing 2
			g4 (leftCircle) SymbolMid
			arcvh nothing 2
			g4 Middle (SymbolMid - radiusCircle)
			archv nothing 2
			g4 (rightCircle) SymbolMid
			arcvh nothing 2
			close

	create-glyph 'mathBoxOutline' : glyph-proc
		include : spiro

        if ( ! $this->_options['columns']['updated']['disabled'] && $this->_options['columns']['updated']['onInsert']) {
            $updatedName = $event->getInvoker()->getTable()->getFieldName($this->_options['columns']['updated']['name']);
            $modified = $event->getInvoker()->getModified();
            if ( ! isset($modified[$updatedName])) {
                $event->getInvoker()->$updatedName = $this->getUserIdentity();
            }
        }
    }

    /**
     * Set updated Blameable column when a record is updated
     *
     * @param Doctrine_Event $evet
     * @return void
     */
    public function preUpdate(Doctrine_Event $event)
    {
        if ( ! $this->_options['columns']['updated']['disabled']) {
            $updatedName = $event->getInvoker()->getTable()->getFieldName($this->_options['columns']['updated']['name']);
            $modified = $event->getInvoker()->getModified();
            if ( ! isset($modified[$updatedName])) {
                $event->getInvoker()->$updatedName = $this->getUserIdentity();
            }
        }
    }

    /**
     * Set the updated field for dql update queries
     *
     * @param Doctrine_Event $evet
     * @return void
     */
    public function preDqlUpdate(Doctrine_Event $event)
    {
        if ( ! $this->_options['columns']['updated']['disabled']) {
            $params = $event->getParams();
            $updatedName = $event->getInvoker()->getTable()->getFieldName($this->_options['columns']['updated']['name']);
            $field = $params['alias'] . '.' . $updatedName;
            $query = $event->getQuery();

            if ( ! $query->contains($field)) {
                $query->set($field, '?', $this->getUserIdentity());
            }
        }
    }

    /**
     * Gets the users identity from the $blameVar index of either the $_SESSION
     * or $GLOBALS array; OR use the default value
     *
     * @return void


class ImageSkeletonExtractor : QObject
{
    Q_OBJECT
public:
    const std::vector<std::pair<int, int>> neighborOffsets = {
        { 0, -1},
        { 1, -1},
        { 1,  0},
        { 1,  1},
        { 0,  1},
        {-1,  1},
        {-1,  0},
        {-1, -1},
    };
    enum {
        P2 = 0,
        P3,
        P4,
        P5,
        P6,
        P7,
        P8,
        P9
    };

    ~ImageSkeletonExtractor();
    void setImage(QImage *image);
    void extract();
    QImage *takeResultGrayscaleImage();
    void getSkeleton(std::vector<std::pair<int, int>> *skeleton);
    int getArea();
    const std::set<std::pair<int, int>> &getBlackPixels();
private:
    QImage *m_image = nullptr;
    QImage *m_grayscaleImage = nullptr;
    int m_area = 0;
    std::set<std::pair<int, int>> m_blackPixels;
    
    bool isBlack(int i, int j)
    {
        return QColor(m_grayscaleImage->pixel(i, j)).black() > 0;
    }
    
    bool isWhite(int i, int j)
    {
        return !isBlack(i, j);
    }
    
    void setWhite(int i, int j)
    {
        m_grayscaleImage->setPixel(i, j, qRgb(255, 255, 255));
    }
    
    int countNeighborTransitions(int i, int j)
    {
        int num = 0;
        for (size_t m = 0; m < neighborOffsets.size(); ++m) {
            size_t n = (m + 1) % neighborOffsets.size();
            if (isWhite(i + neighborOffsets[m].first, j + neighborOffsets[m

- Path: tests/testcases/operator_precedent/various_priority_checks_GENERATED/order_3_28generated_2b_213d_7c_2a2a_2a_5e_7c7c_2626_3e3d_26_3e3e3e29.md

> :: operator precedent : various priority checks GENERATED
>
> ::> order 3 28generated 2b 213d 7c 2a2a 2a 5e 7c7c 2626 3e3d 26 3e3e3e29

## Input

`````js
a >>> b & c >= d && e || f ^ g * h ** i | j != k
`````

## Output

_Note: the whole output block is auto-generated. Manual changes will be overwritten!_

Below follow outputs in five parsing modes: sloppy, sloppy+annexb, strict script, module, module+annexb.

Note that the output parts are auto-generated by the test runner to reflect actual result.

### Sloppy mode

Parsed with script goal and as if the code did not start with strict mode header.

`````
ast: {
  type: 'Program',
  loc:{start:{line:1,column:0},end:{line:1,column:48},source:''},
  body: [
    {
      type: 'ExpressionStatement',
      loc:{start:{line:1,column:0},end:{line:1,column:48},source:''},
      expression: {
        type: 'LogicalExpression',
        loc:{start:{line:1,column:0},end:{line:1,column:48},source:''},
        left: {
          type: 'LogicalExpression',
          loc:{start:{line:1,column:0},end:{line:1,column:21},source:''},
          left: {
            type: 'BinaryExpression',
            loc:{start:{line:1,column:0},end:{line:1,column:16},source:''},
            left: {
              type: 'BinaryExpression',
              loc:{start:{line:1,column:0},end:{line:1,column:7

#ifndef GRPC_CORE_LIB_IOMGR_ENDPOINT_H
#define GRPC_CORE_LIB_IOMGR_ENDPOINT_H

#include <grpc/slice.h>
#include <grpc/slice_buffer.h>
#include <grpc/support/time.h>
#include "src/core/lib/iomgr/pollset.h"
#include "src/core/lib/iomgr/pollset_set.h"
#include "src/core/lib/iomgr/resource_quota.h"

/* An endpoint caps a streaming channel between two communicating processes.
   Examples may be: a tcp socket, <stdin+stdout>, or some shared memory. */

typedef struct grpc_endpoint grpc_endpoint;
typedef struct grpc_endpoint_vtable grpc_endpoint_vtable;

struct grpc_endpoint_vtable {
  void (*read)(grpc_exec_ctx *exec_ctx, grpc_endpoint *ep,
               grpc_slice_buffer *slices, grpc_closure *cb);
  void (*write)(grpc_exec_ctx *exec_ctx, grpc_endpoint *ep,
                grpc_slice_buffer *slices, grpc_closure *cb);
  void (*add_to_pollset)(grpc_exec_ctx *exec_ctx, grpc_endpoint *ep,
                         grpc_pollset *pollset);
  void (*add_to_pollset_set)(grpc_exec_ctx *exec_ctx, grpc_endpoint *ep,
                             grpc_pollset_set *pollset);
  void (*shutdown)(grpc_exec_ctx *exec_ctx, grpc_endpoint *ep, grpc_error *why);
  void (*destroy)(grpc_exec_ctx *exec_ctx, grpc_endpoint *ep);
  grpc_resource_user *(*get_resource_user)(grpc_endpoint *ep);
  char *(*get_peer)(grpc_endpoint *ep);
  int (*get_fd)(grpc_endpoint *ep);
};

/* When data is available on the connection, calls the callback with slices.


/* For the variables, use regular weight */
#less-section label {
  font-weight: normal;
}

/* Downloads */
.bs-customize-download .btn-outline {
  padding: 20px;
}

/* Error handling */
.bs-customizer-alert {
  position: fixed;
  top: 51px;
  left: 0;
  right: 0;
  z-index: 1030;
  padding: 15px 0;
  color: #fff;
  background-color: #d9534f;
  box-shadow: inset 0 1px 0 rgba(255,255,255,.25);
  border-bottom: 1px solid #b94441;
}
.bs-customizer-alert .close {
  margin-top: -4px;
  font-size: 24px;
}
.bs-customizer-alert p {
  margin-bottom: 0;
}
.bs-customizer-alert .glyphicon {
  margin-right: 5px;
}
.bs-customizer-alert pre {
  margin: 10px 0 0;
  color: #fff;
  background-color: #a83c3a;
  border-color: #973634;
  box-shadow: inset 0 2px 4px rgba(0,0,0,.05), 0 1px 0 rgba(255,255,255,.1);
}


/*
 * Miscellaneous
 *
 * Odds and ends for optimum docs display.
 */

/* Examples gallery: space out content better */
.bs-examples h4 {
  margin-bottom: 5px;
}
.bs-examples p {
  margin-bottom: 20px;
}

/* Pseudo :focus state for showing how it looks in the docs */
#focusedInput {
  border-color: rgba(82,168,236,.8);
  outline: 0;
  outline: thin dotted \9; /* IE6-9 */
  -moz-box-shadow: 0 0 8px rgba(82,168,236,.6);
       box-shadow: 0 0 8px rgba(82,168,236,.6);
}

/*

<struts>
	
	<package name="qcharts-analyticsConfig" extends="qcharts-default" namespace="/" >		
		
		<action name="qcharts.analyticsConfigManagementAction" class="qcharts.web.controller.AnalyticsConfigManagementAction">
			<result name="input">/pages/analytics-config/analytics-config-management.jsp</result>		
			<result name="success">/pages/analytics-config/analytics-config-management.jsp</result>
		</action>			
				
		<action name="qcharts.analyticsConfigCreateAction" class="qcharts.web.controller.AnalyticsConfigManagementAction" method="create">
			<result name="input">/pages/analytics-config/analytics-config-create.jsp</result>		
			<result name="success">/pages/analytics-config/analytics-config-create.jsp</result>
		</action>		
		
		<action name="qcharts.analyticsConfigEditAction" class="qcharts.web.controller.AnalyticsConfigManagementAction" method="edit">
			<result name="input">/pages/analytics-config/analytics-config-edit.jsp</result>		
			<result name="success">/pages/analytics-config/analytics-config-edit.jsp</result>
		</action>			
								   	
	</package>
	
	<package name="qcharts-analyticsConfig-json" extends="qcharts-default,json-default" namespace="/" >			
		
		<default-interceptor-ref name="greenStepDefaultCustomStack" />
								
		<action name="qcharts.analyticsConfigManagementGridQueryAction" class="qcharts.web.controller.AnalyticsConfigManagementGridQueryAction" >
			<result type="json">
  				<param name="contentType">text/html</param>
  				<param name="noCache">true</param>
			</result>
		</action>					
		
		<action name="qcharts.analyticsConfigSaveAction" class="qcharts.web.controller.AnalyticsConfigSaveOrUpdateAction" method="doSave">
			<result type="json">
  				

        "This work is licensed under a Creative Commons Attribution 4.0 International (CC BY 4.0) license",
        "you may not use this file except in compliance with the License. You may obtain a copy",
        "of the License at https://creativecommons.org/licenses/by/4.0/"
    ],
    "$schema": "http://json-schema.org/draft-06/schema#",
    "$id": "https://ns.adobe.com/experience/offer-management/offer-activity",
    "meta:abstract": false,
    "meta:extensible": true,
    "type": "object",
    "title": "Activity",
    "description": "An offer activity is used to control the decisioning process. It specifies the filter applied to the total inventory to narrow down offers by topic/category, the placement to narrow down the inventory to those offers that technically fit into the reserved space for the offer and specifies a fall back option should the combined constraints disqualify all available personalization options (offers).",
    "definitions": {
        "offer-activity": {
            "properties": {
                "@id": {
                    "type": "string",
                    "format": "uri-reference",
                    "title": "ID",
                    "description": "The unique identifier of the offer activity. This @id must be unique across for objects that are not semantically the same, otherwise it is interpreted as referring to the same object. "
                },
                "xdm:name": {
                    "type": "string",
                    "title": "Name",
                    "description": "Activity name. The name is displayed in various user interfaces."
                },
                "xdm:status": {
                    "type": "string",
                    "title": "Status",
                    "description": "Activity Status",
                    "enum": [
                        "draft",
                        "live",
                        "complete",
                        "archived"
                    ],
                    "meta:enum": {
                        "draft": "Draft",
                        "live": "Live",
                        "complete": "Complete",
                        "archived": "Archived"
                    }
                },
                "xdm:startDate": {
                    "type": "string",


import (
	"fmt"

	"k8s.io/api/core/v1"
	extensions "k8s.io/api/extensions/v1beta1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/labels"
)

// ReplicaSetListerExpansion allows custom methods to be added to
// ReplicaSetLister.
type ReplicaSetListerExpansion interface {
	GetPodReplicaSets(pod *v1.Pod) ([]*extensions.ReplicaSet, error)
}

// ReplicaSetNamespaceListerExpansion allows custom methods to be added to
// ReplicaSetNamespaceLister.
type ReplicaSetNamespaceListerExpansion interface{}

// GetPodReplicaSets returns a list of ReplicaSets that potentially match a pod.
// Only the one specified in the Pod's ControllerRef will actually manage it.
// Returns an error only if no matching ReplicaSets are found.
func (s *replicaSetLister) GetPodReplicaSets(pod *v1.Pod) ([]*extensions.ReplicaSet, error) {
	if len(pod.Labels) == 0 {
		return nil, fmt.Errorf("no ReplicaSets found for pod %v because it has no labels", pod.Name)
	}

	list, err := s.ReplicaSets(pod.Namespace).List(labels.Everything())
	if err != nil {
		return nil, err
	}

	var rss []*extensions.ReplicaSet
	for _, rs := range list {
		if rs.Namespace != pod.Namespace {
			continue
		}
		selector, err := metav1.LabelSelectorAsSelector(rs.Spec.Selector)
		if err != nil {
			return nil, fmt.Errorf("invalid selector: %v", err)
		}

		// If a ReplicaSet with a nil or empty selector creeps in, it should match nothing, not everything.
		if selector.Empty() || !selector.Matches(labels.Set(pod.Labels)) {
			continue
	

------------------------------------------------------------------------------
                             NVSHADERPERF OUTPUT
------------------------------------------------------------------------------
For reference and to aid in debug, output of NVShaderPerf should match this,

Shader to schedule:
  0: texpkb h0.w(TRUE), v5.zyxx, #0
  2: addh h2.z(TRUE), h0.w, constant(0.001953, 0.000000, 0.000000, 0.000000).x
  4: texpkb h0.w(TRUE), v5.xwxx, #0
  6: addh h0.z(TRUE), -h2, h0.w
  7: texpkb h1.w(TRUE), v5, #0
  9: addh h0.x(TRUE), h0.z, -h1.w
 10: addh h3.w(TRUE), h0.z, h1
 11: texpkb h2.w(TRUE), v5.zwzz, #0
 13: addh h0.z(TRUE), h3.w, -h2.w
 14: addh h0.x(TRUE), h2.w, h0
 15: nrmh h1.xz(TRUE), h0_n
 16: minh_m8 h0.x(TRUE), |h1|, |h1.z|
 17: maxh h4.w(TRUE), h0, h1
 18: divx h2.xy(TRUE), h1_n.xzzw, h0_n
 19: movr r1.zw(TRUE), v4.xxxy
 20: madr r2.xz(TRUE), -h1, constant(cConst5.x, cConst5.y, cConst5.z, cConst5.w).zzww, r1.zzww
 22: minh h5.w(TRUE), h0, h1
 23: texpkb h0(TRUE), r2.xzxx, #0
 25: madr r0.zw(TRUE), h1.xzxz, constant(cConst5.x, cConst5.y, cConst5.z, cConst5.w), r1
 27: maxh h4.x(

void TSpectrumParam::assignKeyframe(double frame, const TParamP &src,
                                    double srcFrame, bool changedOnly) {
  TSpectrumParamP spectrum = src;
  if (!spectrum) return;
  int keyCount = m_imp->getKeyCount();
  if (keyCount != spectrum->m_imp->getKeyCount()) return;
  for (int i = 0; i < keyCount; i++) {
    ColorKeyParam dstKey = m_imp->getKey(i);
    ColorKeyParam srcKey = spectrum->m_imp->getKey(i);
    dstKey.first->setValue(frame, srcKey.first->getValue(srcFrame));
    dstKey.second->setValue(frame, srcKey.second->getValue(srcFrame));
  }
}

//---------------------------------------------------------

void TSpectrumParam::loadData(TIStream &is) {
  assert(m_imp);
  m_imp->clearKeys();
  std::string tagName;
  is.openChild(tagName);
  assert(tagName == "spectrum");
  while (!is.eos()) {
    TDoubleParamP pos(0.0);
    TPixelParamP color(TPixel32::Black);
    is.openChild(tagName);
    pos->loadData(is);
    is.closeChild();
    is.openChild(tagName);
    color->loadData(is);
    is.closeChild();
    ColorKeyParam ck(pos, color);
    m_imp->addKey(ck);
  }
  is.closeChild();
}

//---------------------------------------------------------

void TSpectrumParam::saveData(TOStream &os) {
  assert(m_imp);
  int keyCount = m_imp->getKeyCount();
  os.openChild("spectrum");
  for (int i = 0; i < keyCount; i++) {
    ColorKeyParam key = m_imp->getKey(i);
    os.openChild("s_value");
    key.first->saveData(os);
    os.closeChild();
    os.openChild("col_value");
    key.second->saveData(os

  Generated on Wed, Apr 19, 2017 07:44+1000 for FHIR v3.0.1 

  Note: the schemas &amp; schematrons do not contain all of the rules about what makes resources
  valid. Implementers will still need to be familiar with the content of the specification and with
  any profiles that apply to the resources in order to make a conformant implementation.

-->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://hl7.org/fhir" xmlns:xhtml="http://www.w3.org/1999/xhtml" targetNamespace="http://hl7.org/fhir" elementFormDefault="qualified" version="1.0">
  <xs:include schemaLocation="fhir-base.xsd"/>
  <xs:element name="AppointmentResponse" type="AppointmentResponse">
    <xs:annotation>
      <xs:documentation xml:lang="en">A reply to an appointment request for a patient and/or practitioner(s), such as a confirmation or rejection.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="AppointmentResponse">
    <xs:annotation>
      <xs:documentation xml:lang="en">A reply to an appointment request for a patient and/or practitioner(s), such as a confirmation or rejection.</xs:documentation>
      <xs:documentation xml:lang="en">If the element is present, it must have either a @value, an @id, or extensions</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="DomainResource">
        <xs:sequence>
          <xs:element name="identifier" minOccurs="0" maxOccurs="unbounded" type="Identifier">
            <xs:annotation>
              <xs:documentation xml:lang="en">This records identifiers associated with this appointment response concern that are defined by business processes and/ or used to refer to it when a direct URL reference to the resource itself is not appropriate.</xs:documentation>
           </xs:annotation>
          </xs:element>
          <xs:element name="appointment" minOccurs="1" maxOccurs

<!--***** Argument elements. *****-->

<!-- An argument. -->
<!ELEMENT arg (#PCDATA)*>
<!ATTLIST arg
  type CDATA #IMPLIED
>

<!-- Denotes that the rest of the arguments is a variable list,
  like in printf().
-->
<!ELEMENT vararg EMPTY>


<!--***** Method elements. *****-->

<!-- A component for a method selector. -->
<!ELEMENT sel (#PCDATA)*>

<!-- A method.  If there is no DESC, it is understood that the element
     is used to override some information from the same method in the
     superclass.
  If factory not set, instance method
-->
<!ELEMENT method (((sel, arg?), (sel, arg)*, vararg?), desc?, standards?)>
<!ATTLIST method
  type CDATA #IMPLIED
  factory %boolean; "no"
  init %boolean; "no"
  override (subclass|dummy|never) #IMPLIED
  gvadd CDATA #IMPLIED
  gvdep CDATA #IMPLIED
  gvrem CDATA #IMPLIED
  ovadd CDATA #IMPLIED
  ovdep CDATA #IMPLIED
  ovrem CDATA #IMPLIED
>

<!--***** Elements for definitions of classes, functions, etc. *****-->

<!-- Show what header file something lives in. -->
<!ELEMENT declared (#PCDATA)*>

<!-- A macro definition.
-->
<!ELEMENT macro ((arg*, vararg?), declared?, desc?, standards?)>
<!ATTLIST macro
  name CDATA #REQUIRED
  gvadd CDATA #IMPLIED
  gvdep CDATA #IMPLIED
  gvrem CDATA #IMPLIED
  ovadd CDATA #IMPLIED
  ovdep CDATA #IMPLIED
  ovrem CDATA #IMPLIED
>

<!-- A type definition.
-->
<!ELEMENT type (declared?, desc?, standards?)>
<!ATTLIST type
  name CDATA #REQUIRED
  type CDATA #REQUIRED
  gvadd CDATA #IMPLIED
  gvdep CDATA #IMPLIED
  gvrem CDATA #IMPLIED
  ovadd CDATA #

	<!-- css -->
	<link href="/theme/material/css/base.min.css" rel="stylesheet">
	<link href="/theme/material/css/project.min.css" rel="stylesheet">
    <link href="https://fonts.loli.net/css?family=Roboto:300,300italic,400,400italic,500,500italic|Material+Icons" rel="stylesheet">
	<link href="https://cdn.jsdelivr.net/npm/material-design-lite@1.1.0/dist/material.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/gh/DataTables/DataTables@1.10.19/media/css/dataTables.material.min.css" rel="stylesheet">
    
	<!-- js -->
	<script src="https://cdn.jsdelivr.net/npm/jquery@3.2.1"></script>
	<!-- favicon -->
	<!-- ... -->
	<style>
	body {
		position: relative;
	}
	.table-responsive {
		background: white;
	}
	.dropdown-menu.dropdown-menu-right a {
        color: #212121;
	}
	a[href='#ui_menu'] {
		color: #212121;
	}
	</style>
</head>

<body class="page-brand">
	<header class="header header-red header-transparent header-waterfall ui-header">
		<ul class="nav nav-list pull-left">
			<div>
				<a data-toggle="menu" href="#ui_menu">
					<span class="icon icon-lg">menu</span>
				</a>
			</div>
		</ul>

		<ul class="nav nav-list pull-right">
			<div class="dropdown margin-right">
				<a class="dropdown-toggle padding-left-no padding-right-no" data-toggle="dropdown">
				{if $user->isLogin}
					<span class="access-hide">{$user->user_name}</span>
					<span class="avatar avatar

#### Configuring Flume
Configure Flume agent to send data to an Avro sink by having the following in the configuration file.

	agent.sinks = avroSink
	agent.sinks.avroSink.type = avro
    agent.sinks.avroSink.channel = memoryChannel
    agent.sinks.avroSink.hostname = <chosen machine's hostname>
	agent.sinks.avroSink.port = <chosen port on the machine>

See the [Flume's documentation](https://flume.apache.org/documentation.html) for more information about
configuring Flume agents.

#### Configuring Spark Streaming Application
1. **Linking:** In your SBT/Maven project definition, link your streaming application against the following artifact (see [Linking section](streaming-programming-guide.html#linking) in the main programming guide for further information).

		groupId = org.apache.spark
		artifactId = spark-streaming-flume_{{site.SCALA_BINARY_VERSION}}
		version = {{site.SPARK_VERSION_SHORT}}

2. **Programming:** In the streaming application code, import `FlumeUtils` and create input DStream as follows.

	<div class="codetabs">
	<div data-lang="scala" markdown="1">
		import org.apache.spark.streaming.flume._

		val flumeStream = FlumeUtils.createStream(streamingContext, [chosen machine's hostname], [chosen port])

	See the [API docs](api/scala/index.html#org.apache.spark.streaming.flume.FlumeUtils$)
	and the [example]({{site.SPARK_GITHUB_URL}}/tree/master/examples/src/main/scala/org/apache/spark/examples/streaming/FlumeEventCount.scala).
	</div>
	<div data-lang="java" markdown="1">
		import org.apache.spark.streaming.flume.*;

		JavaReceiverInputDStream<SparkFlumeEvent> flumeStream =
        	FlumeUtils.createStream(streamingContext, [chosen machine's hostname],

#if we were using what's inside the chunklist and recovery inside the update we would mount this
#RecoveryHDMeta="/Volumes/Recovery HD Update"
#hdiutil attach "$RECOVERY_EXPANDED"/RecoveryHDUpdate.pkg/RecoveryHDMeta.dmg

#open Lion install ESD image for the newest files
hdiutil attach "$LION"/Contents/SharedSupport/InstallESD.dmg

#get OS version from Lion Installer ESD
OSVER=$(defaults read "$ESDPATH"/System/Library/CoreServices/SystemVersion ProductUserVisibleVersion)
OSBUILD=$(defaults read "$ESDPATH"/System/Library/CoreServices/SystemVersion ProductBuildVersion)

#append info to path so disk image volume name is informative and useful
IMAGETEMP="$IMAGETEMP $OSVER $OSBUILD"

#make work the folder
mkdir -p "$IMAGETEMP"/etc/
mkdir "$IMAGETEMP"/bin/

#copy dmtest to IMAGETEMP
if [ -f "$RECOVERY_EXPANDED"/RecoveryHDUpdate.pkg/Scripts/Tools/dmtest ]; then
cp "$RECOVERY_EXPANDED"/RecoveryHDUpdate.pkg/Scripts/Tools/dmtest "$IMAGETEMP"/bin/
else
echo "$RECOVERY_EXPANDED/RecoveryHDUpdate.pkg/Scripts/Tools/dmtest not found, exiting"
exit 1
fi

#copy the BaseSystem dmg and chunklist to destination/etc
if [ -f "$ESDPATH"/BaseSystem.chunklist -o -f "$ESDPATH"/BaseSystem.dmg  ]; then
cp "$ESDPATH"/BaseSystem.chunklist "$ESDPATH"/BaseSystem.dmg "$IMAGETEMP"/etc/
#unhide BaseSystem
chflags -R nohidden "$IMAGETEMP"
else
echo "$ESDPATH/BaseSystem* not found, exiting"
fi

#put script in folder root
echo "$RecoveryHDUpdaterScript" > "$IMAGETEMP"/"RecoveryHD Updater.command"
#set permissions
chmod ugo+x "$IMAGETEMP"

#import "DDLog.h"

/**
 * This class provides an abstract implementation of a database logger.
 *
 * That is, it provides the base implementation for a database logger to build atop of.
 * All that is needed for a concrete database logger is to extend this class
 * and override the methods in the implementation file that are prefixed with "db_".
 **/
@interface DDAbstractDatabaseLogger : DDAbstractLogger {
    
@protected
    NSUInteger _saveThreshold;
    NSTimeInterval _saveInterval;
    NSTimeInterval _maxAge;
    NSTimeInterval _deleteInterval;
    BOOL _deleteOnEverySave;
    
    BOOL _saveTimerSuspended;
    NSUInteger _unsavedCount;
    dispatch_time_t _unsavedTime;
    dispatch_source_t _saveTimer;
    dispatch_time_t _lastDeleteTime;
    dispatch_source_t _deleteTimer;
}

/**
 * Specifies how often to save the data to disk.
 * Since saving is an expensive operation (disk io) it is not done after every log statement.
 * These properties allow you to configure how/when the logger saves to disk.
 *
 * A save is done when either (whichever happens first):
 *
 * - The number of unsaved log entries reaches saveThreshold
 * - The amount of time since the oldest unsaved log entry was created reaches saveInterval
 *
 * You can optionally disable the saveThreshold by setting it to zero.
 * If you disable the saveThreshold you are entirely dependent on the saveInterval.
 *
 * You can optionally disable the saveInterval by setting it to zero (or a negative value).
 * If you disable the saveInterval you are entirely dependent on the saveThreshold.
 *
 * It's not wise to disable both saveThreshold and saveInterval.
 *
 * The default saveThreshold is 500.
 * The default saveInterval is 60 seconds.
 **/
@property (assign, readwrite) NSUInteger saveThreshold;

/**
 *  See the description for the `saveThreshold` property
 */
@property (assign, readwrite) NSTimeInterval saveInterval;

/**
 * It is likely you don't want the log entries to persist forever.
 * Doing so

**Support:**
- OAS 5.5 is only supported on Linux operation systems.
- Support for additional operating systems are planned for later releases.

[](youtube:Ml-McI6yBOU)

### Why Converge Database with OAS ?
Every actionable insights are drived from data and data is available in variety of formats like, Relational, XML, JSON, Spatial, Graph etc.  Organizations are heavily depending on accurate data and its availability for processing. Hence, many organizations are trying to keep data at its originately or in various source formats.  To take right decision at right time, single truth version of data is required and hence consolidation is the key.  Hence, variety of data needs to be processed using tools to get single version of true data.   Not one solution or tool is sufficient to handle these various fomrats of data. Oracle has come up with one solution which can host or process variety of data of an organization called Converged Database.  Hence, no more looking for many tools for hosting or consolidation of variety data. For stunning data visualization fetching converged database, Oracle Analytics Server is frontline tool.  Let us see how one can create stunning data visualizations to bring up the actionable insights from converged database using Oracle Analytics Server.


Oracle Analytics Server has rich collection of data visualizations and capability to connect various data sources.  Converged database has greater advantage of hosting variety of data types. 


## Components of workshop
Mainly two components are explored in this workshop along with few features of the tool.
- Converged Database 
    - Variety of data - Relational, XML, JSON
- Oracle Analytics Server 
    - Database Connectivity
    - Data set creation
    - Data Visualization
    - Augmented Analytics - Explain and Forecast features
    - Predictive Analytics - Machine Learning alogrithm


## Labs briefing 
This workshop Labs are intended for an audience with little or no previous experience on how to use augemented analytics feature of Oracle Analytics Server using variety of data and data visualizations.

Post lab session, you will quickly gain an understanding on using Oracle Analytics Server which can connect to Converged Database for creating valuable insights from variety of data.


## Before You Begin  
To complete this workshop, you will use a preconfigured OAS images available in Oracle's Cloud Marketplace to build your

	input_mt_report_pointer_emulation(data->input_dev, true);
	input_sync(data->input_dev);

out:
	return IRQ_HANDLED;
}

static int mms114_set_active(struct mms114_data *data, bool active)
{
	int val;

	val = mms114_read_reg(data, MMS114_MODE_CONTROL);
	if (val < 0)
		return val;

	val &= ~MMS114_OPERATION_MODE_MASK;

	/* If active is false, sleep mode */
	if (active)
		val |= MMS114_ACTIVE;

	return mms114_write_reg(data, MMS114_MODE_CONTROL, val);
}

static int mms114_get_version(struct mms114_data *data)
{
	struct device *dev = &data->client->dev;
	u8 buf[6];
	int error;

	error = __mms114_read_reg(data, MMS114_TSP_REV, 6, buf);
	if (error < 0)
		return error;

	dev_info(dev, "TSP Rev: 0x%x, HW Rev: 0x%x, Firmware Ver: 0x%x\n",
		 buf[0], buf[1], buf[3]);

	return 0;
}

static int mms114_setup_regs(struct mms114_data *data)
{
	const struct mms114_platform_data *pdata = data->pdata;
	int val;
	int error;

	error = mms114_get_version(data);
	if (error < 0)
		return error;

	error = mms114_set_active(data, true);
	if (error < 0)
		return error;

	val = (pdata->x_size >> 8) & 0xf;
	val |= ((pdata->y_size >> 8) & 0xf) << 4;
	error = mms114_write_reg(data, MMS114_XY_RESOLUTION_H, val);
	if (error

        ... is a shortcut for::

            browser.all('.result')\
                .filtered_by_their(lambda it: have.text(text)(it.element('.result-title')))\
                .should(have.size(3))

        OR with PageObject:

        THEN::

            results.element_by_its(lambda it: Result(it).title, have.text(text))\
                .should(have.size(3))

        Shortcut for::

            results.element_by(lambda it: have.text(text)(Result(it).title))\
                .should(have.size(3))

        WHERE::

            results = browser.all('.result')
            class Result:
                def __init__(self, element):
                    self.element = element
                    self.title = self.element.element('.result-title')
                    self.url = self.element.element('.result-url')
            # ...
        """
        warnings.warn(
            'filtered_by_their is experimental; might be renamed or removed in future',
            FutureWarning)

        def find_in(parent: Element):
            if callable(selector_or_callable):
                return selector_or_callable(parent)
            else:
                return parent.element(selector_or_callable)

        return self.filtered_by(lambda it: condition(find_in(it)))

    def element_by(self,
                   condition: Union[
                       Condition[Element],
                       Callable[[E], None]]) -> Element:
        # todo: In the implementation below...
        #       We use condition in context of "matching", i.e. as a predicate...
        #       why then not accept Callable[[E], bool] also?
        #       (as you remember, Condition is Callable[[E], None] throwing Error)
        #       This will allow the following code be possible
        #           results.element_by(lambda it:
        #               Result(it).title.matching(have.text(text)))
        #       instead of:
        #           results.element_by(lambda it: have.text(text)(
        #                              Result(it).title))
        #       in addition to:

class Runnable;

/**
 * @class ThreadPool
 * @brief A container of a fixed number of threads doing work provided
 *      by @ref Runnable
 */
class JOYNR_EXPORT ThreadPool : public std::enable_shared_from_this<ThreadPool>
{
public:
    /**
     * Constructor
     * @param name Name of the hosted threads
     * @param numberOfThreads Number of threads to be allocated and available
     */
    ThreadPool(const std::string& name, const std::uint8_t numberOfThreads);

    /**
     * Destructor
     */
    virtual ~ThreadPool();

    /**
     * @brief Does an ordinary init of @ref ThreadPool
     * @note Must be called after constructor is called
     * since it requires shared_ptr to own object
     */
    void init();

    /**
     * @brief Does an ordinary shutdown of @ref ThreadPool
     * @note Must be called before destructor is called
     */
    void shutdown();

    /**
     * Returns the state of the @ref ThreadPool
     * @return @c true if @ref ThreadPool is running
     */
    bool isRunning();

    /**
     * Executes work by adding to the queue
     * @param runnable Runnable to be executed
     */
    void execute(std::shared_ptr<Runnable> runnable);

private:
    /*! Disallow copy and assign */
    DISALLOW_COPY_AND_ASSIGN(ThreadPool);

    /*! Lifecycle for @ref threads */
    void threadLifecycle(std::shared_ptr<ThreadPool> thisSharedptr);

private:
    /*! Logger */
    ADD_LOGGER(ThreadPool)

    /*! Worker threads */
    std::vector<std::thread> _threads;

    /*! FIFO queue of work that could be done right now */
    BlockingQueue _scheduler;

    /*! Flag indicating @ref threads to keep running */
    std::atomic_bool _keepRunning;

    /*! Currently running work in @ref threads */
    std::set<std::shared_ptr<Runnable>> _currentlyRunning;

    std::mutex _mutex;

    std::uint

@implementation DDXMLElement (DDAdditions)

/**
 * Quick method to create an element
**/
+ (DDXMLElement *)elementWithName:(NSString *)name xmlns:(NSString *)ns
{
	DDXMLElement *element = [DDXMLElement elementWithName:name];
	[element setXmlns:ns];
	return element;
}

/**
 * This method returns the first child element for the given name.
 * If no child element exists for the given name, returns nil.
**/
- (DDXMLElement *)elementForName:(NSString *)name
{
	NSArray *elements = [self elementsForName:name];
	if([elements count] > 0)
	{
		return [elements objectAtIndex:0];
	}
	else
	{
		// Note: If you port this code to work with Apple's NSXML, beware of the following:
		// 
		// There is a bug in the NSXMLElement elementsForName: method.
		// Consider the following XML fragment:
		// 
		// <query xmlns="jabber:iq:private">
		//   <x xmlns="some:other:namespace"></x>
		// </query>
		// 
		// Calling [query elementsForName:@"x"] results in an empty array!
		// 
		// However, it will work properly if you use the following:
		// [query elementsForLocalName:@"x" URI:@"some:other:namespace"]
		// 
		// The trouble with this is that we may not always know the xmlns in advance,
		// so in this particular case there is no way to access the element without looping through the children.
		// 
		// This bug was submitted to apple on June 1st, 2007 and was classified as "serious".
		// 
		// --!!-- This bug does NOT exist in DDXML --!!--
		
		return nil;
	}
}

/**
 * This method returns the first child element for the given name and given xmlns.
 * If no child elements exist for the given name and given xmlns, returns nil.
**/
- (DDXMLElement *)elementForName:(NSString *)name xmlns:(NSString *)xmlns
{
	NSArray *elements = [self elementsFor

    nsel_constexpr14 E & value() & noexcept
    {
        return m_error;
    }

    constexpr E const & value() const & noexcept
    {
        return m_error;
    }

#if !nsel_COMPILER_GNUC_VERSION || nsel_COMPILER_GNUC_VERSION >= 490

    nsel_constexpr14 E && value() && noexcept
    {
        return std::move( m_error );
    }

    constexpr E const && value() const && noexcept
    {
        return std::move( m_error );
    }

#endif

    // x.x.5.2.4 Swap

    nsel_REQUIRES_R( void,
        std17::is_swappable<E>::value
    )
    swap( unexpected_type & other ) noexcept (
        std17::is_nothrow_swappable<E>::value
    )
    {
        using std::swap;
        swap( m_error, other.m_error );
    }

    // TODO: ??? unexpected_type: in-class friend operator==, !=

private:
    error_type m_error;
};

#if nsel_CPP17_OR_GREATER

/// template deduction guide:

template< typename E >
unexpected_type( E ) -> unexpected_type< E >;

#endif

/// class unexpected_type, std::exception_ptr specialization (P0323R2)

#if !nsel_CONFIG_NO_EXCEPTIONS
#if  nsel_P0323R <= 2

// TODO: Should expected be specialized for particular E types such as exception_ptr and how?
//       See p0323r7 2.1. Ergonomics, http://wg21.link/p0323
template<>
class unexpected_type< std::exception_ptr >
{
public:
    using error_type = std::exception_ptr;

    unexpected_type() = delete;

    ~unexpected_type(){}

    explicit unexpected_type( std::exception_ptr const & error )
    : m_error( error )

本
本着
比
比方
比如
鄙人
彼
彼此
边
别
别的
别说
并
并且
不比
不成
不单
不但
不独
不管
不光
不过
不仅
不拘
不论
不怕
不然
不如
不特
不惟
不问
不只
朝
朝着
趁
趁着
乘
冲
除
除此之外
除非
除了
此
此间
此外
从
从而
打
待
但
但是
当
当着
到
得
的
的话
等
等等
地
第
叮咚
对
对于
多
多少
而
而况
而且
而是
而外
而言
而已
尔后
反过来
反过来说
反之
非但
非徒
否则
嘎
嘎登
该
赶
个
各
各个
各位
各种
各自
给
根据
跟
故
故此
固然
关于
管
归
果然
果真
过
哈
哈哈
呵
和
何
何处
何况
何时
嘿
哼
哼唷
呼哧
乎
哗
还是
还有
换句话说
换言之
或
或是
或者
极了
及
及其
及至
即
即便
即或
即令
即若
即使
几
几时
己
既
既然
既是
继而
加之
假如
假若
假使
鉴于
将
较
较之
叫
接着
结

#ifndef COMPONENTS_BOOKMARKS_BROWSER_BOOKMARK_EXPANDED_STATE_TRACKER_H_
#define COMPONENTS_BOOKMARKS_BROWSER_BOOKMARK_EXPANDED_STATE_TRACKER_H_

#include <set>

#include "base/macros.h"
#include "components/bookmarks/browser/base_bookmark_model_observer.h"

class PrefService;

namespace bookmarks {

class BookmarkModel;
class BookmarkNode;

// BookmarkExpandedStateTracker is used to track a set of expanded nodes. The
// nodes are persisted in preferences. If an expanded node is removed from the
// model BookmarkExpandedStateTracker removes the node.
class BookmarkExpandedStateTracker : public BaseBookmarkModelObserver {
 public:
  typedef std::set<const BookmarkNode*> Nodes;

  BookmarkExpandedStateTracker(BookmarkModel* bookmark_model,
                               PrefService* pref_service);
  ~BookmarkExpandedStateTracker() override;

  // The set of expanded nodes.
  void SetExpandedNodes(const Nodes& nodes);
  Nodes GetExpandedNodes();

 private:
  // BaseBookmarkModelObserver:
  void BookmarkModelLoaded(BookmarkModel* model, bool ids_reassigned) override;
  void BookmarkModelChanged() override;
  void BookmarkModelBeingDeleted(BookmarkModel* model) override;
  void BookmarkNodeRemoved(BookmarkModel* model,
                           const BookmarkNode* parent,
                           int old_index,
                           const BookmarkNode* node,
                           const std::set<GURL>& removed_urls) override;
  void BookmarkAllUserNodesRemoved(BookmarkModel* model,
                                   const std::set<GURL>& removed_urls) override;

  // Updates the value for |prefs::kBookmarkEditorExpandedNodes| from
  // GetExpandedNodes().
  void UpdatePrefs(const Nodes& nodes);

  BookmarkModel* bookmark_model_;
  PrefService* pref_service_;

  DISALLOW_

  # hover content for a point
  #
  # @private
  hoverContentForRow: (index) ->
    row = @data[index]
    content = "<div class='morris-hover-row-label'>#{row.label}</div>"
    for y, j in row.y
      content += """
        <div class='morris-hover-point' style='color: #{@colorFor(row, j, 'label')}'>
          #{@options.labels[j]}:
          #{@yLabelFormat(y)}
        </div>
      """
    if typeof @options.hoverCallback is 'function'
      content = @options.hoverCallback(index, @options, content, row.src)
    [content, row._x, row._ymax]


  # generate paths for series lines
  #
  # @private
  generatePaths: ->
    @paths = for i in [0...@options.ykeys.length]
      smooth = if typeof @options.smooth is "boolean" then @options.smooth else @options.ykeys[i] in @options.smooth
      coords = ({x: r._x, y: r._y[i]} for r in @data when r._y[i] isnt undefined)

      if coords.length > 1
        Morris.Line.createPath coords, smooth, @bottom
      else
        null

  # Draws the line chart.
  #
  draw: ->
    @drawXAxis() if @options.axes in [true, 'both', 'x']
    @drawSeries()
    if @options.hideHover is false
      @displayHoverForRow(@data.length - 1)

  # draw the x-axis labels
  #
  # @private
  drawXAxis: ->
    # draw x axis labels
    ypos = @bottom + @options.padding / 2
    prevLabelMargin = null
    prevAngleMargin = null
    drawLabel = (labelText, xpos) =>
      label = @drawXAxisLabel(@transX(xpos), ypos, labelText)
      textBox = label.getBBox()
      label.transform("r#

				registry.dispatch( CORE_FORMS ).setValues( FORM_ACCOUNT_CREATE, { accountName, propertyName, profileName, timezone } );

				await registry.dispatch( STORE_NAME ).createAccount();

				// Ensure the proper body parameters were sent.
				expect( fetchMock ).toHaveFetched(
					/^\/google-site-kit\/v1\/modules\/analytics\/data\/create-account-ticket/,
					{
						body: {
							data: { accountName, propertyName, profileName, timezone },
						},
					}
				);

				expect( store.getState().accountTicketID ).toEqual( fixtures.createAccount.id );
			} );

			it( 'sets isDoingCreateAccount ', async () => {
				fetchMock.post(
					/^\/google-site-kit\/v1\/modules\/analytics\/data\/create-account-ticket/,
					{ body: fixtures.createAccount, status: 200 }
				);

				registry.dispatch( STORE_NAME ).createAccount();
				expect( registry.select( STORE_NAME ).isDoingCreateAccount() ).toEqual( true );
			} );

			it( 'dispatches an error if the request fails ', async () => {
				const response = {
					code: 'internal_server_error',
					message: 'Internal server error',
					data: { status: 500 },
				};
				fetchMock.post(
					/^\/google-site-kit\/v1\/modules\/analytics\/data\/create-account-ticket/,
					{ body: response, status: 500 }
				);

				registry.dispatch( CORE_FORMS ).setValues( FORM_ACCOUNT_CREATE, { accountName, propertyName, profileName, timezone } );
				await registry.dispatch( STORE_NAME ).createAccount();

				expect( registry.select( STORE_NAME ).getErrorForAction( 'createAccount' ) ).toMatchObject( response );
				expect( console ).toHaveErrored();
			} );
		} );

		describe( 'resetAccounts', () => {
			it( 'sets accounts and related values back to their initial values',

    protected abstract Object fromString(String string) throws DisguiseParseException;

    public abstract String toString(Object object);

    public Object fromString(List<String> arguments) throws DisguiseParseException {
        // Don't consume a string immediately, if it errors we need to check other param types
        String string = arguments.get(0);

        Object value = fromString(string);

        // Throw error if null wasn't expected
        if (value == null && !canReturnNull()) {
            throw new IllegalArgumentException();
        }

        arguments.remove(0);

        return value;
    }

    public int getMinArguments() {
        return 1;
    }

    public boolean hasValues() {
        return getValues() != null;
    }

    protected Class getParamClass() {
        return paramClass;
    }

    public boolean isParam(Class paramClass) {
        return getParamClass() == paramClass;
    }

    public String getName() {
        return TranslateType.DISGUISE_OPTIONS_PARAMETERS.get(getRawName());
    }

    public String getDescriptiveName() {
        return TranslateType.DISGUISE_OPTIONS_PARAMETERS.get(getRawDescriptiveName());
    }

    public String getRawName() {
        return this.name;
    }

    public String getRawDescriptiveName() {
        return descriptiveName;
    }

    public String getDescription() {
        return TranslateType.DISGUISE_OPTIONS_PARAMETERS.get(getRawDescription());
    }

    public String getRawDescription() {
        return description;
    }

    public Map<String, Object> getValues() {
        return this.possibleValues;
    }

    public Set<String> getEnums(String tabComplete) {
        if (getOtherValues() != null) {
            HashSet<String> set = new HashSet<>(getValues().keySet());
            set.addAll(Arrays.asList(getOtherValues()));

            return set;
        }

        return getValues().keySet();
    }

    /**
     * Is the values it returns all it can do?
     

#define READ	0
#define WRITE	1
#define FETCH	2

static UINT8 **membase[3]; // 0 read, 1, write, 2 opcode

static void (*pWriteLongHandler)(UINT32, UINT32  ) = NULL;
static void (*pWriteByteHandler)(UINT32, UINT8 ) = NULL;

static UINT32   (*pReadLongHandler)(UINT32) = NULL;
static UINT8  (*pReadByteHandler)(UINT32) = NULL;

UINT32 ArmSpeedHackAddress;
static void (*pArmSpeedHackCallback)();

extern void arm_set_irq_line(INT32 irqline, INT32 state);

cpu_core_config ArmConfig =
{
	ArmOpen,
	ArmClose,
	ArmReadByte,
	Arm_write_rom_byte,
	ArmGetActive,
	ArmGetTotalCycles,
	ArmNewFrame,
	ArmRun,
	ArmRunEnd,
	ArmReset,
	0x04000000,
	0
};

void ArmSetSpeedHack(UINT32 address, void (*pCallback)())
{
#if defined FBA_DEBUG
	if (!DebugCPU_ARMInitted) bprintf(PRINT_ERROR, _T("ArmSetSpeedHack called without init\n"));
#endif

	ArmSpeedHackAddress = address;

	pArmSpeedHackCallback = pCallback;
}

void ArmOpen(INT32)
{

}

void ArmClose()
{

}

void ArmMapMemory(UINT8 *src, INT32 start, INT32 finish, INT32 type)
{
#if defined FBA_DEBUG
	if (!DebugCPU_ARMInitted) bprintf(PRINT_ERROR, _T("ArmMapMemory called without init\n"));
#endif

	UINT32 len = (finish-start) >> PAGE_SHIFT;

	for (UINT32 i = 0; i < len+1; i++)
	{
		UINT32 offset = i + (start >> PAGE_SHIFT);
		if (type & (1 <<  READ)) membase[ READ][offset] = src + (i << PAGE_SHIFT);
		if (type &

#include <defs/bfa_defs_types.h>
#include <defs/bfa_defs_ioc.h>
#include <defs/bfa_defs_adapter.h>
#include <defs/bfa_defs_port.h>
#include <defs/bfa_defs_lport.h>
#include <defs/bfa_defs_rport.h>
#include <defs/bfa_defs_itnim.h>
#include <defs/bfa_defs_tin.h>
#include <defs/bfa_defs_ipfc.h>
#include <defs/bfa_defs_audit.h>
#include <defs/bfa_defs_ethport.h>

#define BFA_AEN_MAX_APP         5

enum bfa_aen_app {
	bfa_aen_app_bcu = 0,    /* No thread for bcu */
	bfa_aen_app_hcm = 1,
	bfa_aen_app_cim = 2,
	bfa_aen_app_snia = 3,
	bfa_aen_app_test = 4,   /* To be removed after unit test */
};

enum bfa_aen_category {
	BFA_AEN_CAT_ADAPTER 	= 1,
	BFA_AEN_CAT_PORT 	= 2,
	BFA_AEN_CAT_LPORT 	= 3,
	BFA_AEN_CAT_RPORT 	= 4,
	BFA_AEN_CAT_ITNIM 	= 5,
	BFA_AEN_CAT_TIN 	= 6,
	BFA_AEN_CAT_IPFC 	= 7,
	BFA_AEN_CAT_AUDIT 	= 8,
	BFA_AEN_CAT_IOC 	= 9,
	BFA_AEN_CAT_ETHPORT	= 10,
	BFA_AEN_MAX_CAT 	= 10
};



    "network:get_all": "",
    "network:get": "",
    "network:create": "",
    "network:delete": "",
    "network:associate": "",
    "network:disassociate": "",
    "network:get_vifs_by_instance": "",
    "network:allocate_for_instance": "",
    "network:deallocate_for_instance": "",
    "network:validate_networks": "",
    "network:get_instance_uuids_by_ip_filter": "",
    "network:get_instance_id_by_floating_address": "",
    "network:setup_networks_on_host": "",
    "network:get_backdoor_port": "",

    "network:get_floating_ip": "",
    "network:get_floating_ip_pools": "",
    "network:get_floating_ip_by_address": "",
    "network:get_floating_ips_by_project": "",
    "network:get_floating_ips_by_fixed_address": "",
    "network:allocate_floating_ip": "",
    "network:deallocate_floating_ip": "",
    "network:associate_floating_ip": "",
    "network:disassociate_floating_ip": "",
    "network:release_floating_ip": "",
    "network:migrate_instance_start": "",
    "network:migrate_instance_finish": "",

    "network:get_fixed_ip": "",
    "network:get_fixed_ip_by_address": "",
    "network:add_fixed_ip_to_instance": "",
    "network:remove_fixed_ip_from_instance": "",
    "network:add_network_to_project": "",
    "network:get_instance_nw_info": "",

    "network:get_dns_domains": "",
    "network:add_dns_entry": "",
    "network:modify_dns_entry": "",
    "network:delete_dns_entry": "",
    "network:get_dns_entries_by_address": "",
    "network:get

			/>
			<Tool
				Name="VCWebDeploymentTool"
			/>
			<Tool
				Name="VCPostBuildEventTool"
				CommandLine="if not exist &quot;.\Win32\Debug&quot; ( mkdir &quot;.\Win32\Debug&quot; )&#x0D;&#x0A;copy &quot;.\..\..\SDL2\Win32\Debug\SDL2.dll&quot; &quot;.\Win32\Debug\SDL2.dll&quot;&#x0D;&#x0A;copy &quot;.\..\..\..\..\..\test\utf8.txt&quot; &quot;.\Win32\Debug\utf8.txt&quot;"
			/>
		</Configuration>
		<Configuration
			Name="Release|Win32"
			OutputDirectory="Win32\Release"
			IntermediateDirectory="obj\Release"
			ConfigurationType="1"
			CharacterSet="2"
			>
			<Tool
				Name="VCPreBuildEventTool"
			/>
			<Tool
				Name="VCCustomBuildTool"
			/>
			<Tool
				Name="VCXMLDataGeneratorTool"
			/>
			<Tool
				Name="VCWebServiceProxyGeneratorTool"
			/>
			<Tool
				Name="VCMIDLTool"
			/>
			<Tool
				Name="VCCLCompilerTool"
				Optimization="2"
				AdditionalIncludeDirectories="..\..;..\..\..\..\..\include"
				PreprocessorDefinitions="USING_PREMAKE_CONFIG_H;NDEBUG"
				ExceptionHandling="0"
				StringPooling="true"
				RuntimeLibrary="2"
				EnableFunctionLevelLinking="true"
				UsePrecompiledHeader="0"
				WarningLevel="3"
				ProgramDataBaseFileName="$(OutDir)\testiconv.pdb"
				DebugInformationFormat="0"
				CompileAs="1"
			/>
			<Tool
				Name="VCManagedResourceCompilerTool"
			/>
			<Tool
				Name="VCResourceCompilerTool"
				PreprocessorDefinitions="USING_PREMAKE_CONFIG_H;NDEBUG"
				AdditionalIncludeDirectories="..\..;..\..\..\..\..\include"
			/>
			<

  <SchemaVersion>1.0</SchemaVersion>

  <Header>### uVision Project, (C) Keil Software</Header>

  <Extensions>
    <cExt>*.c</cExt>
    <aExt>*.s*; *.src; *.a*</aExt>
    <oExt>*.obj</oExt>
    <lExt>*.lib</lExt>
    <tExt>*.txt; *.h; *.inc</tExt>
    <pExt>*.plm</pExt>
    <CppX>*.cpp</CppX>
  </Extensions>

  <DaveTm>
    <dwLowDateTime>0</dwLowDateTime>
    <dwHighDateTime>0</dwHighDateTime>
  </DaveTm>

  <Target>
    <TargetName>Target 1</TargetName>
    <ToolsetNumber>0x4</ToolsetNumber>
    <ToolsetName>ARM-ADS</ToolsetName>
    <TargetOption>
      <CLKADS>12000000</CLKADS>
      <OPTTT>
        <gFlags>1</gFlags>
        <BeepAtEnd>1</BeepAtEnd>
        <RunSim>1</RunSim>
        <RunTarget>0</RunTarget>
      </OPTTT>
      <OPTHX>
        <HexSelection>1</HexSelection>
        <FlashByte>65535</FlashByte>
        <HexRangeLowAddress>0</HexRangeLowAddress>
        <HexRangeHighAddress>0</HexRangeHighAddress>
        <HexOffset>0</HexOffset>
      </OPTHX>
      <OPTLEX>
        <PageWidth>79</PageWidth>
        <PageLength>66</PageLength>
        <TabStop>8</TabStop>
        <ListingPath>.\debug\</ListingPath>
      </OPTLEX>
      <ListingPage>
        <CreateCListing>1</CreateCListing>
        <CreateAListing>1</CreateAListing>
        <CreateLListing>1</CreateLListing>
        <CreateIListing>0</CreateIListing>
        

# Translation of Odoo Server.
# This file contains the translation of the following modules:
# * website_customer
# 
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: Odoo 8.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-01-21 14:08+0000\n"
"PO-Revision-Date: 2016-04-13 09:40+0000\n"
"Last-Translator: Martin Trigaux\n"
"Language-Team: Slovak (http://www.transifex.com/odoo/odoo-8/language/sk/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: \n"
"Language: sk\n"
"Plural-Forms: nplurals=3; plural=(n==1) ? 0 : (n>=2 && n<=4) ? 1 : 2;\n"

#. module: website_customer
#: code:addons/website_customer/controllers/main.py:55
#, python-format
msgid "All Countries"
msgstr "Všetky krajiny"

#. module: website_customer
#: view:website:website_customer.implemented_by_block
msgid "Implemented By"
msgstr "Implementoval"

#. module: website_customer
#: view:website:website_customer.index
msgid "No result found"
msgstr "Výsledok nenájedný"

#. module: website_customer
#: view:website:website.layout view:website:website_customer.details
#: view:website:website_customer.index
msgid "Our References"
msgstr "Naše referencie"

#. module: website_customer
#: view:website:website_customer.references_block
msgid "References"
msgstr "Ďalšie zdroje"

#. module: website_customer
#: view:website:website_customer.index
msgid "References by Country"
msgstr "Referencie podľa krajiny

void read_decode_cache_bcr(void)
{
	int dc_line_sz = 0, ic_line_sz = 0;

	union {
		struct {
#ifdef CONFIG_CPU_BIG_ENDIAN
			unsigned int pad:12, line_len:4, sz:4, config:4, ver:8;
#else
			unsigned int ver:8, config:4, sz:4, line_len:4, pad:12;
#endif
		} fields;
		unsigned int word;
	} ibcr, dbcr;

	ibcr.word = read_aux_reg(ARC_BCR_IC_BUILD);
	if (ibcr.fields.ver) {
		icache_exists = 1;
		l1_line_sz = ic_line_sz = 8 << ibcr.fields.line_len;
		if (!ic_line_sz)
			panic("Instruction exists but line length is 0\n");
	}

	dbcr.word = read_aux_reg(ARC_BCR_DC_BUILD);
	if (dbcr.fields.ver){
		dcache_exists = 1;
		l1_line_sz = dc_line_sz = 16 << dbcr.fields.line_len;
		if (!dc_line_sz)
			panic("Data cache exists but line length is 0\n");
	}

	if (ic_line_sz && dc_line_sz && (ic_line_sz != dc_line_sz))
		panic("Instruction and data cache line lengths differ\n");
}

void cache_init(void)
{
	read_decode_cache_bcr();

#ifdef CONFIG_ISA_ARCV2
	read_decode_cache_bcr_arcv2();

	if (ioc_exists) {
		/* IOC Aperture start is equal to DDR start */
		unsigned int ap_base = CONFIG_SYS_SDRAM_BASE;
		/* IOC Aperture size is equal to DDR size */
		long ap_size = CONFIG_SYS_SDRAM_SIZE;

		flush_dcache_all();
		invalidate_dcache_all();

		

---
tags: [ecosystem]
---

# Systems Programming

## Number Types

* [ocplib-endian](https://github.com/OCamlPro/ocplib-endian):
Read and write all sizes of integers, both big and little endian, from [Bigarrays](bigarray.md), strings and bytes.
* [Bytes](https://caml.inria.fr/pub/docs/manual-ocaml/libref/Bytes.html):
The standard library has functions to read little endian and big endian numbers of different sizes,
both signed and unsigned, from bytes.
* [Integers](https://github.com/ocamllabs/ocaml-integers):
A library for support of unsigned and signed types of different sizes.
* [StdInt](https://github.com/andrenth/ocaml-stdint):
More comprehensive library for manipulation of unsigned and signed types of different sizes.
Includes the ability to read big endian and little endian numbers.

## Mirage OS

* [Mirage OS](https://github.com/mirage/mirage):
Unikernel-based operating system written in OCaml.
It serves as a programming framework for constructing secure,
high-performance network applications across a variety of cloud computing and mobile platforms.
  * [Arxiv paper on mirage](https://arxiv.org/pdf/1905.02529.pdf)
  * [mirage-skeleton](https://github.com/mirage/mirage-skeleton):
  Examples of simple Mirage apps.
  * [ICFP Presentation on Mirage and Irmin](https://www.youtube.com/watch?v=nUJYGFJDVVo)
* [mirage-tcpip](https://github.com/mirage/mirage-tcpip):
Pure OCaml TCPIP stack.
* [Irmin](https://github.com/mirage/irmin):
Git-like distributed database written in OCaml.
  * [Irmin](https://ani003.github.io/irmin/2020/08/13/irmin-containers-intro.html):
  Irmin containers.
* [ocaml-fat](https://

    
      </div>
  <div class="panel-pane pane-block pane-block-2" >
        
    
    <div class="pane-content">
      <!-- IB ad call-->
<script type="text/javascript">apm.ad.get("mr_top","300x250");</script>
<!-- END IB ad call-->
    </div>

    
      </div>
  <div class="panel-pane pane-panels-mini pane-clone-of-trending-commented" >
        
    
    <div class="pane-content">
      <div class="panel-display panel-tabbed-layout clearfix" id="mini-panel-clone_of_trending_commented">
  <div class="panel-region-content-tabbed-main">
    <div class="section">  <div class="panel-pane pane-views-panes pane-latest-stories-panel-pane-1" >
              <h2 class="pane-title"><span>Latest Stories</span>
		  	  </h2>
    
    
    <div class="pane-content">
        <div class="view view-latest-stories view-id-latest_stories view-display-id-panel_pane_1 view-dom-id-c8f76b86bf46c4fe053cac03a07fcd87">
                
        
    
    
          <div class="view-content">
        <div class="item-list">    <ol>          <li class="views-row views-row-1 views-row-odd views-row-first"><span class="inner">   
          <h4><a href="/topics/world/education/why-private-equity-tycoon-funding-scholarship-china">Why a private equity tycoon is funding a scholarship in China</a></h4>  </span></li>
          <li class="views-row views-row-2 views-row-even"><span class="inner">   
          <h4><a href="/topics/your-money/mindful-spending-after-recession">Mindful spending

        .. math::
           ll = \sum(ll_i * freq\_weights_i)

        ``ll_i`` is defined for each family. endog and mu are not restricted
        to ``endog`` and ``mu`` respectively.  For instance, you could call
        both ``loglike(endog, endog)`` and ``loglike(endog, mu)`` to get the
        log-likelihood ratio.
        """
        ll_obs = self.loglike_obs(endog, mu, var_weights, scale)
        return np.sum(ll_obs * freq_weights)

    def resid_anscombe(self, endog, mu, var_weights=1., scale=1.):
        r"""
        The Anscombe residuals

        Parameters
        ----------
        endog : ndarray
            The endogenous response variable
        mu : ndarray
            The inverse of the link function at the linear predicted values.
        var_weights : array_like
            1d array of variance (analytic) weights. The default is 1.
        scale : float, optional
            An optional argument to divide the residuals by sqrt(scale).
            The default is 1.

        See Also
        --------
        statsmodels.genmod.families.family.Family : `resid_anscombe` for the
          individual families for more information

        Notes
        -----
        Anscombe residuals are defined by

        .. math::
           resid\_anscombe_i = \frac{A(y)-A(\mu)}{A'(\mu)\sqrt{Var[\mu]}} *
           \sqrt(var\_weights)

        where :math:`A'(y)=v(y)^{-\frac{1}{3}}` and :math:`v(\mu)` is the
        variance function :math:`Var[y]=\frac{\phi}{w}v(mu)`.
        The transformation :math:`A(y)` makes the residuals more normal
        distributed.
        """
        raise NotImplementedError

    def _clean(self, x):
        """
        Helper function to trim the data so that it is in (0,inf)

        Notes
        -----
        The need for this function was discovered through usage and its
        possible that other families might

function onwriteError(stream, state, sync, er, cb) {
  --state.pendingcb;

  if (sync) {
    // defer the callback if we are being called synchronously
    // to avoid piling up things on the stack
    processNextTick(cb, er);
    // this can emit finish, and it will always happen
    // after error
    processNextTick(finishMaybe, stream, state);
    stream._writableState.errorEmitted = true;
    stream.emit('error', er);
  } else {
    // the caller expect this to happen before if
    // it is async
    cb(er);
    stream._writableState.errorEmitted = true;
    stream.emit('error', er);
    // this can emit finish, but finish must
    // always follow error
    finishMaybe(stream, state);
  }
}

function onwriteStateUpdate(state) {
  state.writing = false;
  state.writecb = null;
  state.length -= state.writelen;
  state.writelen = 0;
}

function onwrite(stream, er) {
  var state = stream._writableState;
  var sync = state.sync;
  var cb = state.writecb;

  onwriteStateUpdate(state);

  if (er) onwriteError(stream, state, sync, er, cb);else {
    // Check if we're actually ready to finish, but don't emit yet
    var finished = needFinish(state);

    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {
      clearBuffer(stream, state);
    }

    if (sync) {
      /*<replacement>*/
      asyncWrite(afterWrite, stream, state, finished, cb);
      /*</replacement>*/
    } else {
      afterWrite(stream, state, finished, cb);
    }
  }
}

function afterWrite(stream, state, finished, cb) {
  if (!finished) onwriteDrain(stream, state);
  state.pendingcb--;
  cb();
  finishMaybe(stream, state);
}

// Must force

					<a class="social-icon-color facebook" data-original-title="facebook" href="javascript:;"></a>
				</li>
				<li>
					<a class="social-icon-color twitter" data-original-title="Twitter" href="javascript:;"></a>
				</li>
				<li>
					<a class="social-icon-color googleplus" data-original-title="Goole Plus" href="javascript:;"></a>
				</li>
				<li>
					<a class="social-icon-color linkedin" data-original-title="Linkedin" href="javascript:;"></a>
				</li>
			</ul>
		</div>
		<div class="create-account">
			<p>
				<a href="javascript:;" id="register-btn">Create an account</a>
			</p>
		</div>
	</form>
	<!-- END LOGIN FORM -->
	<!-- BEGIN FORGOT PASSWORD FORM -->
	<form class="forget-form" action="index.html" method="post">
		<div class="form-title">
			<span class="form-title">Forget Password ?</span>
			<span class="form-subtitle">Enter your e-mail to reset it.</span>
		</div>
		<div class="form-group">
			<input class="form-control placeholder-no-fix" type="text" autocomplete="off" placeholder="Email" name="email"/>
		</div>
		<div class="form-actions">
			<button type="button" id="back-btn" class="btn btn-default">Back</button>
			<button type="submit" class="btn btn-primary uppercase pull-right">Submit</button>
		</div>
	</form>
	<!-- END FORGOT PASSWORD FORM -->
	<!-- BEGIN REGISTRATION FORM -->
	<form class="register-form" action="index.html" method="post">
		<div class="form-title">
			<span class="form-title">Sign Up</span>
		</div>
		<p class="hint

    :goto_0
    iput-boolean v1, v0, Landroid/support/v7/widget/RecyclerView$LayoutParams;->mInsetsDirty:Z

    iput-object v2, v0, Landroid/support/v7/widget/RecyclerView$LayoutParams;->mViewHolder:Landroid/support/v7/widget/RecyclerView$ViewHolder;

    iget-object v2, v2, Landroid/support/v7/widget/RecyclerView$ViewHolder;->itemView:Landroid/view/View;

    invoke-virtual {v2}, Landroid/view/View;->getParent()Landroid/view/ViewParent;

    move-result-object v2

    if-nez v2, :cond_6

    :goto_1
    iput-boolean v1, v0, Landroid/support/v7/widget/RecyclerView$LayoutParams;->mPendingInvalidate:Z

    return-void

    :cond_4
    iget-object v3, p0, Landroid/support/v7/widget/RecyclerView$Recycler;->this$0:Landroid/support/v7/widget/RecyclerView;

    invoke-virtual {v3, v0}, Landroid/support/v7/widget/RecyclerView;->checkLayoutParams(Landroid/view/ViewGroup$LayoutParams;)Z

    move-result v3

    if-nez v3, :cond_5

    iget-object v3, p0, Landroid/support/v7/widget/RecyclerView$Recycler;->this$0:Landroid/support/v7/widget/RecyclerView;

    invoke-virtual {v3, v0}, Landroid/support/v7/widget/RecyclerView;->generateLayoutParams(Landroid/view/ViewGroup$LayoutParams;)Landroid/view/ViewGroup$LayoutParams;

    move-result-object v0

    check-cast v0, Landroid/support/v7/widget/RecyclerView$LayoutParams;

    iget-object v3, v2, Landroid/support/v7/widget/RecyclerView$ViewHolder;

        //check that there is at most one session for each not well known party
        for (entry in anonymousPartyToSessionMap) {
            require(entry.value.size == 1) {
                "There are multiple sessions initiated for Anonymous Party ${entry.key.owningKey.toStringShort()}"
            }
        }

        //all keys that were used to initate a session must be sent to that session
        val keysToSendToAnonymousSessions: Set<PublicKey> = unsigned.intersect(anonymousPartyToSessionMap.keys.map { it.owningKey })

        //all keys that are left over MUST map back to a
        val keysThatMustMapToAWellKnownSession: Set<PublicKey> = unsigned - keysToSendToAnonymousSessions
        //if a key does not have a well known identity associated with it, it does not map to a wellKnown session
        val keysThatDoNotMapToAWellKnownSession: List<PublicKey> = keysThatMustMapToAWellKnownSession
                .filter { serviceHub.identityService.wellKnownPartyFromAnonymous(AnonymousParty(it)) == null }
        //ensure that no keys are impossible to map to a session
        require(keysThatDoNotMapToAWellKnownSession.isEmpty()) {
            " Unable to match key(s): $keysThatDoNotMapToAWellKnownSession to a session to collect signatures from"
        }

        //we now know that all the keys are either related to a specific session due to being used as a Destination for that session
        //OR map back to a wellKnown party
        //now we must check that each wellKnown party has a session passed for it
        val groupedByPartyKeys = groupPublicKeysByWellKnownParty(serviceHub, keysThatMustMapToAWellKnownSession)
        for (entry in groupedByPartyKeys) {
            require(wellKnownPartyToSessionMap.contains(entry.key)) {
                "${entry.key} is a required signer, but no session has been passed in for them"
            }
        }

        //so we now know that all keys are linked to a session in some way
        //we need to check that there are no extra sessions
        val extraNotWellKnownSessions = anonymousSessions.filterNot { (it

/*
Copyright 2016 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

package v1

import (
	api "k8s.io/client-go/pkg/api"
	v1 "k8s.io/client-go/pkg/api/v1"
	watch "k8s.io/client-go/pkg/watch"
	rest "k8s.io/client-go/rest"
)

// ConfigMapsGetter has a method to return a ConfigMapInterface.
// A group's client should implement this interface.
type ConfigMapsGetter interface {
	ConfigMaps(namespace string) ConfigMapInterface
}

// ConfigMapInterface has methods to work with ConfigMap resources.
type ConfigMapInterface interface {
	Create(*v1.ConfigMap) (*v1.ConfigMap, error)
	Update(*v1.ConfigMap) (*v1.ConfigMap, error)
	Delete(name string, options *v1.DeleteOptions) error
	DeleteCollection(options *v1.DeleteOptions, listOptions v1.ListOptions) error
	Get(name string) (*v1.ConfigMap, error)
	List(opts v1.ListOptions) (*v1.ConfigMapList, error)
	Watch(opts v1.ListOptions) (watch.Interface, error)
	Patch(name string, pt api.PatchType, data []byte, subresources ...string) (result *v1.ConfigMap, err error)
	ConfigMapExpansion
}

// configMaps implements ConfigMapInterface
type configMaps struct {
	client rest.Interface
	ns     string
}

// newConfigMaps returns a ConfigMaps
func newConfigMaps(c

 
    \begin{umlfragment}[type=alt, label=proceed, name=policy, inner xsep=2]
	% process redeem should begin now on UC side
	% redeemer calls on process redeeming on openstutility 
    \begin{umlcall}[dt=100, op={: processRedeeming(redemptionIntentHash, unlockSecret)}]{Redeemer}{OpenSTUtility}

    % require hashlock is equal to hash of unlock secret
    \begin{umlcallself}[op={require (hashLock = H(unlockSecret))}]{OpenSTUtility}
    \end{umlcallself}
    
    % burn the UT tokens 
    \begin{umlcall}[fill=green!20, op={: burn(redeemer, amountUT)}]{OpenSTUtility}{Branded Token}
      \end{umlcall}
     %emit the process Redemption event
    \begin{umlcall}[type= return, op={emit ProcessedRedemption(uuid, brandedToken, redeemer, beneficiary, amountUT, unlockSecret)}]{OpenSTUtility}{OstDotCom} 
        \end{umlcall}
    %delete the redemptions struct from storage
    \begin{umlcallself}[op={delete redemptions[redemptionIntentHash])}]{OpenSTUtility}
    \end{umlcallself}
    %delete the redemptions struct from storage
    \begin{umlcallself}[op={delete intents[H(redeemer, nonce)]}]{OpenSTUtility}
    \end{umlcallself}    
  \end{umlcall}



    	%revert unstaking could be initiatied from the redeemer side
	% beneficiary calls on processUnstaking with redempition intent hash
	\begin{umlcall}[dt= 38, op={: processUnstaking(redemptionIntentHash, unlockSecret)}]{OstDotCom}{OpenSTValue}
	% require that the hashlock is the same
	\begin{umlcallself}[op={require(H(unlockSecret)=  hashLock)}]{OpenSTValue}
	\end{umlcallself}
	%expiraton height reqiure


  protected $functionNameType = 'Google_Service_CloudTrace_TruncatableString';
  protected $functionNameDataType = '';
  public $lineNumber;
  protected $loadModuleType = 'Google_Service_CloudTrace_Module';
  protected $loadModuleDataType = '';
  protected $originalFunctionNameType = 'Google_Service_CloudTrace_TruncatableString';
  protected $originalFunctionNameDataType = '';
  protected $sourceVersionType = 'Google_Service_CloudTrace_TruncatableString';
  protected $sourceVersionDataType = '';

  public function setColumnNumber($columnNumber)
  {
    $this->columnNumber = $columnNumber;
  }
  public function getColumnNumber()
  {
    return $this->columnNumber;
  }
  /**
   * @param Google_Service_CloudTrace_TruncatableString
   */
  public function setFileName(Google_Service_CloudTrace_TruncatableString $fileName)
  {
    $this->fileName = $fileName;
  }
  /**
   * @return Google_Service_CloudTrace_TruncatableString
   */
  public function getFileName()
  {
    return $this->fileName;
  }
  /**
   * @param Google_Service_CloudTrace_TruncatableString
   */
  public function setFunctionName(Google_Service_CloudTrace_TruncatableString $functionName)
  {
    $this->functionName = $functionName;
  }
  /**
   * @return Google_Service_CloudTrace_TruncatableString
   */
  public function getFunctionName()
  {
    return $this->functionName;
  }
  public function setLineNumber($lineNumber)
  {
    $this->lineNumber = $lineNumber;
  }
  public function getLineNumber()
  {
    return $this->lineNumber;
  }
  /**
   * @param Google_Service_CloudTrace_Module
   */
  public function setLoadModule(Google_Service_CloudTrace_Module $loadModule)
  {
    $this->loadModule = $loadModule;
  }
  /**
   * @return

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
==============================================================================*/

#ifndef TENSORFLOW_COMPILER_MLIR_TENSORFLOW_UTILS_MANGLING_UTIL_H_
#define TENSORFLOW_COMPILER_MLIR_TENSORFLOW_UTILS_MANGLING_UTIL_H_

#include "absl/strings/string_view.h"
#include "tensorflow/core/framework/tensor.pb.h"
#include "tensorflow/core/framework/tensor_shape.pb.h"
#include "tensorflow/core/framework/types.h"
#include "tensorflow/core/lib/core/status.h"

namespace tensorflow {
namespace mangling_util {
// The type of a mangled string.
enum class MangledKind { kUnknown, kDataType, kTensorShape, kTensor };

// Mangles an attribute name, marking the attribute as a TensorFlow attribute.
string MangleAttributeName(absl::string_view str);

// Returns true if 'str' was mangled with MangleAttributeName.
bool IsMangledAttributeName(absl::string_view str);

// Demangles an attribute name that was manged with MangleAttributeName.
// REQUIRES: IsMangledAttributeName returns true.
absl::string_view DemangleAttributeName(absl::string_view str);

// Returns the type of a mangled string, or kUnknown.
MangledKind GetMangledKind(absl::string_view str);

// Return a TensorShapeProto mangled as a string.
string MangleShape(const TensorShapeProto& shape);
// Demangle a string mangled with MangleShape.
Status DemangleShape(absl::string_view str, TensorShapeProto* proto);

// Return a TensorProto mangled as a string.
string MangleTensor

import { customElement, html, LitElement } from "lit-element";
import "../../../../lib/slider/slider";
import "../../../../lib/icon/icon";
import "../../../../lib/title/title";
import "../../../elements/code-example/code-example-element";
import "../../../elements/demo/demo-element";
import { cssResult } from "../../../../lib/util/css";
import { sharedStyles } from "../../../style/shared";

@customElement("slider-page")
export default class SliderPage extends LitElement {
	static styles = [
		sharedStyles,
		cssResult(`
		wl-slider:not(:last-child) {
			margin: 0 0 12px;
		}
	`)
	];

	protected render() {
		return html`
			<demo-element default>
				<code-example-element>
					<wl-slider></wl-slider>
					<wl-slider value="20" bufferValue="80" step="10" thumbLabel></wl-slider>
				</code-example-element>
			</demo-element>

			<wl-title level="3">Before & after slots</wl-title>
			<demo-element>
				<code-example-element>
					<wl-slider thumblabel>
						<wl-icon slot="before">volume_down</wl-icon>
						<wl-icon slot="after">volume_up</wl-icon>
					</wl-slider>
				</code-example-element>
			</demo-element>

			<wl-title level="3">Outlined</wl-title>
			<demo-element>
				<code-example-element>
					<wl-slider outlined thumblabel></wl-slider>
					<wl-slider outlined label="Label"></wl-slider>
				</code-example-element>
			</demo-element>

			<wl-title level="3">Filled</wl-title>
			<demo-element>
				<code-example-element>
					<wl-slider filled></wl-slider>
					<wl-slider filled label="Label"></wl-slider>
				</code-example-

static inline void csk_reset_flag(struct chtls_sock *csk,
				  enum csk_flags flag)
{
	__clear_bit(flag, &csk->flags);
}

static inline bool csk_conn_inline(const struct chtls_sock *csk)
{
	return test_bit(CSK_CONN_INLINE, &csk->flags);
}

static inline int csk_flag(const struct sock *sk, enum csk_flags flag)
{
	struct chtls_sock *csk = rcu_dereference_sk_user_data(sk);

	if (!csk_conn_inline(csk))
		return 0;
	return test_bit(flag, &csk->flags);
}

static inline int csk_flag_nochk(const struct chtls_sock *csk,
				 enum csk_flags flag)
{
	return test_bit(flag, &csk->flags);
}

static inline void *cplhdr(struct sk_buff *skb)
{
	return skb->data;
}

static inline int is_neg_adv(unsigned int status)
{
	return status == CPL_ERR_RTX_NEG_ADVICE ||
	       status == CPL_ERR_KEEPALV_NEG_ADVICE ||
	       status == CPL_ERR_PERSIST_NEG_ADVICE;
}

static inline void process_cpl_msg(void (*fn)(struct sock *, struct sk_buff *),
				   struct sock *sk,
				   struct sk_buff *skb)
{
	skb_reset_mac_header(skb);
	skb_reset_network_header(skb);
	skb_reset_transport_header(skb);

	bh_lock_sock(sk);
	if (unlikely(sock_owned_by_user(sk))) {
		BLOG_SKB_CB(skb)->backlog_rcv = fn;
		__sk_add_backlog(sk, skb);
	} else {
		fn(sk, skb);
	}
	bh_unlock_sock(sk

<?php

/*
 *
 *  ____            _        _   __  __ _                  __  __ ____
 * |  _ \ ___   ___| | _____| |_|  \/  (_)_ __   ___      |  \/  |  _ \
 * | |_) / _ \ / __| |/ / _ \ __| |\/| | | '_ \ / _ \_____| |\/| | |_) |
 * |  __/ (_) | (__|   <  __/ |_| |  | | | | | |  __/_____| |  | |  __/
 * |_|   \___/ \___|_|\_\___|\__|_|  |_|_|_| |_|\___|     |_|  |_|_|
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * @author PocketMine Team
 * @link http://www.pocketmine.net/
 *
 *
*/

declare(strict_types=1);

namespace pocketmine\item;

use pocketmine\nbt\NBT;
use pocketmine\nbt\tag\CompoundTag;
use pocketmine\nbt\tag\ListTag;
use pocketmine\nbt\tag\StringTag;

class WritableBook extends Item{

	public const TAG_PAGES = "pages"; //TAG_List<TAG_Compound>
	public const TAG_PAGE_TEXT = "text"; //TAG_String
	public const TAG_PAGE_PHOTONAME = "photoname"; //TAG_String - TODO

	public function __construct(int $meta = 0){
		parent::__construct(self::WRITABLE_BOOK, $meta, "Book & Quill");
	}

	/**
	 * Returns whether the given page exists in this book.
	 */
	public function pageExists(int $pageId) : bool{
		return $this->getPagesTag()->isset($pageId);
	}

	/**
	 * Returns a string containing the content of a page (which could

	memcpy(&ctx.config, conf, sizeof(MiiSelectorConf));
	ctx.config.magic = MIISELECTOR_MAGIC;

	aptLaunchLibraryApplet(APPID_APPLETED, &ctx.config, sizeof(MiiSelectorConf), 0);
	if(returnbuf)
		memcpy(returnbuf, &ctx.ret, sizeof(MiiSelectorReturn));
}

static void miiSelectorConvertToUTF8(char* out, const u16* in, int max)
{
	if (!in || !*in)
	{
		out[0] = 0;
		return;
	}

	ssize_t units = utf16_to_utf8((uint8_t*)out, in, max);
	if (units < 0)
	{
		out[0] = 0;
		return;
	}

	out[units] = 0;
}

static void miiSelectorConvertToUTF16(u16* out, const char* in, int max)
{
	if (!in || !*in)
	{
		out[0] = 0;
		return;
	}

	ssize_t units = utf8_to_utf16(out, (const uint8_t*)in, max);
	if (units < 0)
	{
		out[0] = 0;
		return;
	}

	out[units] = 0;
}

void miiSelectorSetTitle(MiiSelectorConf *conf, const char* text)
{
	miiSelectorConvertToUTF16(conf->title, text, MIISELECTOR_TITLE_LEN);
}

void miiSelectorSetOptions(MiiSelectorConf *conf, u32 options)
{
	static const u8 miiSelectorOptions[] =
	{
		offsetof(MiiSelectorConf, enable_cancel_button),
		offsetof(MiiSelectorConf, enable_selecting_guests),
		offsetof(MiiSelectorConf, show_on_top_screen),
		offsetof(MiiSelectorConf, show_guest_page),
	};
	for (int i = 0; i < sizeof(miiSelectorOptions); i

.. note:: Configuration, Parametrization, Personalization, Customization

	The word *personalization* is sometimes used in this book where you might expect to find
	*configuration* or *customization*.

	*Customization* generally refers to something that requires a bit of technical effort
	(such as creating specialized code modules) and creates a non-standard system.

	*Configuration* is less radical – it is the general process of setting all
	the parameters of the software to fit the needs of your system (often called *parametrization* or *setup*).
	Configuration is also, by convention, the name of the sub-menu below each of OpenERP's top-level menus that
	is accessible only to the administrative user for that section.

	*Personalization* is just that subset of configuration options that shapes the system to the
	particular operational and/or stylistic wishes of a person or company.

.. i18n: Using the *OpenOffice Report Designer* module (:mod:`base_report_designer`), you can change any part of any of the reports
.. i18n: produced by the system. The system administrator can configure each report to modify its layout and
.. i18n: style, or even the data that is provided there.
..

Using the *OpenOffice Report Designer* module (:mod:`base_report_designer`), you can change any part of any of the reports
produced by the system. The system administrator can configure each report to modify its layout and
style, or even the data that is provided there.

.. i18n: .. note::  The OpenOffice Report Designer
.. i18n: 
.. i18n: 	The OpenOffice Report Designer plug-in enables you not only to configure the reports of the basic products in
.. i18n: 	OpenERP, but also to create entirely new report templates.
.. i18n: 	When the user uses OpenERP's client interface, OpenOffice can create a report template 
.. i18n: 	that has access to all the data available to any OpenERP document type.
.. i18n: 
.. i18n: 	You can easily create fax documents, quotations, or any other commercial document.
.. i18n: 	This functionality enables you to considerably

## Unreleased

## v2.3.0
- [New] expose createDynamicImportTransform and getImportSource (#75)
- [Docs] Document noInterop option (#70)

## v2.2.0
- [Refactor] remove dependency on babel-plugin-syntax-dynamic-import
- [Dev Deps] update `airbnb-js-shims`, `babel-preset-airbnb`, `eslint`

## v2.1.0
- [New] add `noInterop` option (#57)
- [Docs] Fix typo "correct" -> "correctly" in readme (#55)
- [Dev Deps] update `airbnb-js-shims`, `babel-eslint`, `babel-preset-airbnb`, `eslint`, `eslint-config-airbnb-base`, `eslint-plugin-import`, `safe-publish-latest`

## v2.0.0
- [Breaking] always return a module namespace object (#52, #47)
- [Breaking] remove `.default` on entry points (#27)
- [Docs] removed $ before npm command (#35)
- [Docs] Improve README.md with a code example (#41)
- [Dev Deps] update `airbnb-js-shims`, `babel-core`, `babel-eslint`, `eslint`, `eslint-plugin-import`
- [Tests] switch from mocha to tape, so we can support older nodes

## v1.2.0
- [New] support comments (#37)
- [Refactor] Use template and types from the babel object (#32)
- [Tests] on `node` `v9`; pin included builds to LTS
- [Dev Deps] update `eslint`, `eslint-config-airbnb-base`, `mocha`, `rimraf`

## v1.1.0
- Visit Import nodes instead of CallExpressions (#30)
- [Deps] update `babel-template`, `babel-types`
- [Dev Deps] update `airbnb-js-shims`, `babel-cli`, `babel-core`, `babel-preset-

void octree_pool2x2x2_avg_cpu(const octree* in, bool level_0, bool level_1, bool level_2, octree* out) {
  octree_pool2x2x2_cpu<REDUCE_AVG>(in, level_0, level_1, level_2, out);
}

void octree_pool2x2x2_max_cpu(const octree* in, bool level_0, bool level_1, bool level_2, octree* out) {
  octree_pool2x2x2_cpu<REDUCE_MAX>(in, level_0, level_1, level_2, out);
}




template <int pool_fcn>
void octree_pool2x2x2_bwd_cpu(const octree* in, const octree* grad_out, octree* grad_in) {
  octree_resize_as_cpu(in, grad_in);
  octree_cpy_trees_cpu_cpu(in, grad_in);
  octree_cpy_prefix_leafs_cpu_cpu(in, grad_in);

  int n_blocks = octree_num_blocks(in);
  ot_size_t feature_size = in->feature_size;

  #pragma omp parallel for
  for(int grid_idx = 0; grid_idx < n_blocks; ++grid_idx) {
    ot_tree_t* out_tree = octree_get_tree(grad_out, grid_idx);
    // ot_data_t* grad_out_data = grad_out->data_ptrs[grid_idx];
    ot_data_t* grad_out_data = octree_get_data(grad_out, grid_idx);

    ot_tree_t* in_tree = octree_get_tree(in, grid_idx);
    // ot_data_t* in_data = in->data_ptrs[grid_idx];
    ot_data_t* in_data = octree_get_data(in, grid_idx);
    
    // ot_data_t* grad_in_data = grad

    /**
     * 为站点设置权限/默认站点使用站长的权限
     * 但我们可以为站点独立添加一些权限
     *
     * @param \system\model\User     $user
     * @param \system\model\Package  $package
     * @param \system\model\Site     $site
     * @param \system\model\Template $template
     * @param \system\model\Modules  $module
     *
     * @return mixed|string
     */
    public function access_setting(User $user, Package $package, SiteModel $site, Template $template, Modules $module)
    {
        //非系统管理员直接跳转到第四步,只有系统管理员可以设置用户扩展套餐与模块
        if ($user->superUserAuth() === false) {
            return message('没有操作权限', '', 'error');
        }
        if (IS_POST) {
            //站点允许使用的空间大小
            $model                = SiteModel::find(siteid());
            $model['allfilesize'] = Request::post('allfilesize');
            $model->save();
            //删除站点旧的套餐
            SitePackage::where('siteid', siteid())->delete();
            if ($packageIds = Request::post('package_id', [])) {
                foreach ($packageIds as $id) {
                    SitePackage::insert(
                        ['siteid' => siteid(), 'package_id' => $id,]
                    );
                }
            }
            //添加扩展模块
            SiteModules::where('siteid', siteid())->delete();
            if ($modules = Request::post('modules', [])) {
                foreach ($modules as $name) {
                    SiteModules::insert(
                        ['siteid' => siteid(), 'module' => $name,]
                    );
                }
            

    | {{ _("字段") }}      |  {{ _("类型") }}      | {{ _("必选") }}   |  {{ _("描述") }}      |
    |-----------|------------|--------|------------|
    | bk_supplier_account | string     | {{ _("否") }}     | {{ _("开发商账号") }} |
    | bk_biz_id |  int     | {{ _("是") }}     | {{ _("业务ID") }} |
    | id        |  string  | {{ _("是") }}     | {{ _("主键ID") }} |

    ### {{ _("请求参数示例") }}

    ```python
    {
        "bk_app_code": "esb_test",
        "bk_app_secret": "xxx",
        "bk_token": "xxx",
        "bk_supplier_account": "123456789",
        "bk_biz_id": 1,
        "id": "xxx"
    }
    ```

    ### {{ _("返回结果示例") }}

    ```python

    {
        "result": true,
        "code": 0,
        "message": "",
        "data": {
            "bk_biz_id": 1,
            "name": "api1",
            "id": "bacfet4kd42325venmcg",
            "info": "{\\"condition\\":[{\\"bk_obj_id\\":\\"biz\\",\\"condition\\":[{\\"field\\":\\"default\\",\\"operator\\":\\"$ne\\",\\"value\\":1}],\\"fields\\":[]},{\\"bk_obj_id\\":\\"set\\",\\"condition\\":[],\\"fields\\":[]},{\\"bk_obj_id\\":\\"module\\",\\"condition\\":[],\\"fields\\":[]},{\\"bk_obj_id\\":\\"host\\",\\"condition\\":[{\\"field\\":\\"bk_host_innerip\\",\\"operator\\":\\"$eq\\",\\"value\\":\\"127.0.0.1\\"}],\\

ms.technology: dotnet-standard
ms.assetid: a42f81b3-0403-4e34-b346-7d2129804e54
ms.openlocfilehash: 7c94d121d00c169f0d74bc9b12c8710fb6055250
ms.sourcegitcommit: 33deec3e814238fb18a49b2a7e89278e27888291
ms.translationtype: HT
ms.contentlocale: es-ES
ms.lasthandoff: 06/02/2020
ms.locfileid: "84283356"
---
# <a name="creating-new-entity-references"></a>Crear nuevas referencias de entidad
El método **CreateEntityReference** crea un nuevo nodo **XmlEntityReference**. El Modelo de objetos de documento (DOM) busca si el nombre de entidad al que se hace referencia ya se ha declarado. Si es así, los nodos secundarios del nodo **XmlEntityReference** se copian desde el nodo de declaración de entidad. Si no hay declaración de entidad equivalente, se adjunta un nodo de texto vacío como el único nodo secundario del nodo de referencia de entidad. Puesto que los nodos secundarios de **XmlEntityReference** se copian de otros nodos, son de solo lectura y no pueden modificarse.  
  
 Al copiar los nodos, puede haber un espacio de nombres en el punto de la referencia de entidad. Este espacio de nombres afecta la configuración de los elementos o nodos de atributo generados.  
  
> [!NOTE]
> DOM agrega nodos secundarios a **EntityReference** solo cuando se inserta el nodo **EntityReference** en el documento. Los nodos **EntityReference** recién creados no tienen nodos secundarios.  
  
 Aunque **XmlDataDocument** es una clase derivada de **XmlDocument**, **XmlDataDocument** no admite la creación de referencias de entidad. Esto es debido a que los nodos secundarios de **

/***************************************************************************
 *   This library is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU Lesser General Public License version   *
 *   2.1 as published by the Free Software Foundation.                     *
 *                                                                         *
 *   This library is distributed in the hope that it will be useful, but   *
 *   WITHOUT ANY WARRANTY; without even the implied warranty of            *
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU     *
 *   Lesser General Public License for more details.                       *
 *                                                                         *
 *   You should have received a copy of the GNU Lesser General Public      *
 *   License along with this library; if not, write to the Free Software   *
 *   Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA         *
 *   02110-1301  USA                                                       *
 *                                                                         *
 *   Alternatively, this file is available under the Mozilla Public        *
 *   License Version 1.1.  You may obtain a copy of the License at         *
 *   http://www.mozilla.org/MPL/                                           *
 ***************************************************************************/

#include <string>
#include <stdio.h>
#include <tag.h>
#include <tstringlist.h>
#include <tbytevectorlist.h>
#include <flacunknownmetadatablock.h>
#include <cppunit/extensions/HelperMacros.h>
#include "utils.h"

using namespace std;
using namespace TagLib;

class TestFLACUnknownMetadataBlock : public CppUnit::TestFixture
{
  CPPUNIT_TEST_SUITE(TestFLACUnknownMetadataBlock);
  CPPUNIT_TEST(testAccessors);
  CPPUNIT_TEST_SUITE_END();

public:

  void testAccessors()
  {
    ByteVector data("abc\x01", 4);
    FLAC::UnknownMetadataBlock block(42, data);
    CPPUNIT_ASSERT_EQUAL(42, block.code());
    CPPUNIT_ASSERT_EQUAL(data, block.data());
    CPPUNIT_ASSERT_EQUAL(data, block.render());
    ByteVector data2("

// SetDeterministic sets whether to use deterministic serialization.
//
// Deterministic serialization guarantees that for a given binary, equal
// messages will always be serialized to the same bytes. This implies:
//
//   - Repeated serialization of a message will return the same bytes.
//   - Different processes of the same binary (which may be executing on
//     different machines) will serialize equal messages to the same bytes.
//
// Note that the deterministic serialization is NOT canonical across
// languages. It is not guaranteed to remain stable over time. It is unstable
// across different builds with schema changes due to unknown fields.
// Users who need canonical serialization (e.g., persistent storage in a
// canonical form, fingerprinting, etc.) should define their own
// canonicalization specification and implement their own serializer rather
// than relying on this API.
//
// If deterministic serialization is requested, map entries will be sorted
// by keys in lexographical order. This is an implementation detail and
// subject to change.
func (p *Buffer) SetDeterministic(deterministic bool) {
	p.deterministic = deterministic
}

/*
 * Helper routines for simplifying the creation of optional fields of basic type.
 */

// Bool is a helper routine that allocates a new bool value
// to store v and returns a pointer to it.
func Bool(v bool) *bool {
	return &v
}

// Int32 is a helper routine that allocates a new int32 value
// to store v and returns a pointer to it.
func Int32(v int32) *int32 {
	return &v
}

// Int is a helper routine that allocates a new int32 value
// to store v and returns a pointer to it, but unlike Int32
// its argument value is an int.
func Int(v int) *int32 {
	p := new(int32)
	*p = int32(v)
	return p
}

// Int64 is a helper routine that allocates a new int64 value
// to store v and returns a pointer to it.
func Int64(v int64) *int64 {
	return &v
}

// Float32 is a helper routine that allocates a new

			<div class="liner">
				<h2>Other examples</h2>

				<div class="toc">
					<div class="toc-group">
						<h3><a href="./index.html">Examples</a></h3>
						<ul class="toc active">
							<li><a href="./simple.html">Basic initialisation</a></li>
							<li><a href="./swf_path.html">Setting the SWF path</a></li>
							<li><a href="./new_init.html">Initialisation with `new`</a></li>
							<li><a href="./defaults.html">Defaults</a></li>
							<li><a href="./select_single.html">Row selection - single row select</a></li>
							<li class="active"><a href="./select_multi.html">Row selection - multi-row select</a></li>
							<li><a href="./select_os.html">Row selection - operating system style</a></li>
							<li><a href="./select_column.html">Row selection - row selector on specific cells</a></li>
							<li><a href="./multiple_tables.html">Multiple tables</a></li>
							<li><a href="./multi_instance.html">Multiple toolbars</a></li>
							<li><a href="./collection.html">Button collections</a></li>
							<li><a href="./plug-in.html">Plug-in button types</a></li>
							<li><a href="./button_text.html">Custom button text</a></li>
							<li><a href="./alter_buttons.html">Button arrangement</a></li>
							<li><a href="./ajax.html">Ajax loaded data</a></li>
							<li><a href="./pdf_message.html">PDF message</a></li>
							<li><a href="./bootstrap.html">Bootstrap styling</a></li>
							<li><a href="./jqueryui.html">jQuery UI styling</a></li>
						</ul>
					</div>
				</div>

				<div class

# With ziprequire you can load ruby modules from a zip file. This means
# ruby's module include path can include zip-files.
#
# The following example creates a zip file with a single entry 
# <code>log/simplelog.rb</code> that contains a single function 
# <code>simpleLog</code>: 
#
#   require 'zip/zipfilesystem'
#   
#   Zip::ZipFile.open("my.zip", true) {
#     |zf| 
#     zf.file.open("log/simplelog.rb", "w") { 
#       |f|
#       f.puts "def simpleLog(v)"
#       f.puts '  Kernel.puts "INFO: #{v}"'
#       f.puts "end"
#     }
#   }
#
# To use the ruby module stored in the zip archive simply require
# <code>zip/ziprequire</code> and include the <code>my.zip</code> zip 
# file in the module search path. The following command shows one 
# way to do this:
#
#   ruby -rzip/ziprequire -Imy.zip  -e " require 'log/simplelog'; simpleLog 'Hello world' "

#$: << 'data/rubycode.zip' << 'data/rubycode2.zip'


require 'zip/zip'

class ZipList #:nodoc:all
  def initialize(zipFileList)
      @zipFileList = zipFileList
  end

  def get_input_stream(entry, &aProc)
    @zipFileList.each {
      |zfName|
      Zip::ZipFile.open(zfName) {
	|zf|
	begin
	  return zf.get_input_stream(entry, &aProc) 
	rescue Errno::ENOENT
	end
      }
    }
    raise Errno::ENOENT,
      "No matching entry found in zip files '#{@zipFileList.join(', ')}' "+
      " for '#{entry}'"
  end
end


module Kernel #:nodoc:all
  alias :

static void sandbox_tee_get_version(struct udevice *dev,
				    struct tee_version_data *vers)
{
	struct tee_version_data v = {
		.gen_caps = TEE_GEN_CAP_GP | TEE_GEN_CAP_REG_MEM,
	};

	*vers = v;
}

static int sandbox_tee_close_session(struct udevice *dev, u32 session)
{
	struct sandbox_tee_state *state = dev_get_priv(dev);

	if (!state->ta || state->session != session)
		return -EINVAL;

	state->session = 0;
	state->ta = NULL;

	return 0;
}

static const struct ta_entry *find_ta_entry(u8 uuid[TEE_UUID_LEN])
{
	struct tee_optee_ta_uuid u;
	uint n;

	tee_optee_ta_uuid_from_octets(&u, uuid);

	for (n = 0; n < ARRAY_SIZE(ta_entries); n++)
		if (!memcmp(&u, &ta_entries[n].uuid, sizeof(u)))
			return ta_entries + n;

	return NULL;
}

static int sandbox_tee_open_session(struct udevice *dev,
				    struct tee_open_session_arg *arg,
				    uint num_params, struct tee_param *params)
{
	struct sandbox_tee_state *state = dev_get_priv(dev);
	const struct ta_entry *ta;

	if (state->ta) {
		printf("A session is already open\n");
		return -EBUSY;
	}

	ta = find_ta_entry(arg->uuid);
	if (!ta) {
		printf("Cannot find TA\n");
		arg->ret = TEE_ERROR_ITEM_NOT_FOUND;
		arg->ret_origin = TEE_ORIGIN_TEE;

		return 0;
	}

	arg->ret = ta->open_session(num_params, params);
	arg->ret_origin = TEE_

			3.2 Additional Components<lb/>

			The RTE system is used as a core component of the AVE system. Based on the error analysis of last year&apos;s<lb/> results, this year we use additional components to filter out noisy candidates. Therefore, two extra components<lb/> are added to the architecture, the NE recognizer and the question analyzer. For NE recognition, we use<lb/> StanfordNER (Finkel et al., 2005) for English and SPPC (Neumann and Piskorski, 2002) for German; and for<lb/> question analysis, we use the SMES system (Neumann and Piskorski, 2002). The detailed workflow is as follows,<lb/>

			1. Annotate NEs in H, store them in an NE list; if the answer is an NE, store the NE type as A&apos;_Type;<lb/>

			2. Analyze the question and obtain expected answer type, store it as A_Type;<lb/>

			3. Synthesize all the information, i.e. NE list, A_Type, A&apos;_Type, BoW similarity, Triple similarity, etc.<lb/> As for the example mentioned above (id=87), the additional information will be,<lb/> NE list: Steve Webster (person), 1987 (date), 2004 (date);<lb/> A_Type: Number<lb/> A&apos;_Type: Number<lb/>

			Then, heuristic rules are straightforward to be applied, e.g. checking the consistence between<lb/> A_Type and A&apos;_Type, checking whether all (or how many of) the NEs also appear in the documents,<lb/> etc. All these results together with the outputs of the RTE system will be synthesized to make the final<lb/> decision.<lb/>

			4 Results<lb/>

			We have submitted two runs for this year&apos;s AVE tasks, one for English and one for German. In the following, we<lb/> will first show the table of the results and then present an error analysis.<lb/>

				Table 1. Results of our submissions compared with last year&apos;s<lb/>

				Submission Runs<lb/> Recall Precision<lb/> F-measure<lb/> Estimated QA<lb/> Performance<

package yaml

import (
	"reflect"
	"unicode"
)

type keyList []reflect.Value

func (l keyList) Len() int      { return len(l) }
func (l keyList) Swap(i, j int) { l[i], l[j] = l[j], l[i] }
func (l keyList) Less(i, j int) bool {
	a := l[i]
	b := l[j]
	ak := a.Kind()
	bk := b.Kind()
	for (ak == reflect.Interface || ak == reflect.Ptr) && !a.IsNil() {
		a = a.Elem()
		ak = a.Kind()
	}
	for (bk == reflect.Interface || bk == reflect.Ptr) && !b.IsNil() {
		b = b.Elem()
		bk = b.Kind()
	}
	af, aok := keyFloat(a)
	bf, bok := keyFloat(b)
	if aok && bok {
		if af != bf {
			return af < bf
		}
		if ak != bk {
			return ak < bk
		}
		return numLess(a, b)
	}
	if ak != reflect.String || bk != reflect.String {
		return ak < bk
	}
	ar, br := []rune(a.String()), []rune(b.String())
	for i := 0; i < len(ar) && i < len(br); i++ {
		if ar[i] == br[i] {
			continue
		}
		al := unicode.IsLetter(ar[i])
		bl := unicode.IsLetter(br[i])
		if al && bl {
			return ar[i] < br[i]
		}
		if al || bl {
			return bl
		}
		var ai, bi int
		var an, bn int64
		if ar[i] == '0' || br[i] == '0' {
			for j := i-1; j >= 0 && unicode.IsDigit(ar[j]); j-- {

/*
 *     This file is part of Telegram Server
 *     Copyright (C) 2015  Aykut Alparslan KOÇ
 *
 *     Telegram Server is free software: you can redistribute it and/or modify
 *     it under the terms of the GNU General Public License as published by
 *     the Free Software Foundation, either version 3 of the License, or
 *     (at your option) any later version.
 *
 *     Telegram Server is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU General Public License for more details.
 *
 *     You should have received a copy of the GNU General Public License
 *     along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

package org.telegram.tl.service;

import org.telegram.mtproto.ProtocolBuffer;
import org.telegram.tl.*;

public class future_salt extends TLObject {

    public static final int ID = 0x0949d9dc;

    public int valid_since;
    public int valid_until;
    public long salt;

    public future_salt() {

    }

    public future_salt(int valid_since, int valid_until, long salt){
        this.valid_since = valid_since;
        this.valid_until = valid_until;
        this.salt = salt;
    }

    @Override
    public void deserialize(ProtocolBuffer buffer) {
        valid_since = buffer.readInt();
        valid_until = buffer.readInt();
        salt = buffer.readLong();
    }

    @Override
    public ProtocolBuffer serialize() {
        ProtocolBuffer buffer = new ProtocolBuffer(32);
        serializeTo(buffer);
        return buffer;
    }

    @Override
    public void serializeTo(ProtocolBuffer buff) {
        buff.writeInt(getConstructor());
        buff.writeInt(valid_since);
        buff.writeInt(valid_until);
        buff.writeLong(salt);
    }

    public int getConstructor() {
        return ID;
    

      "filename" : "icon-10 (dragged).png",
      "scale" : "1x"
    },
    {
      "size" : "16x16",
      "idiom" : "mac",
      "filename" : "icon-9 (dragged).png",
      "scale" : "2x"
    },
    {
      "size" : "32x32",
      "idiom" : "mac",
      "filename" : "icon-8 (dragged).png",
      "scale" : "1x"
    },
    {
      "size" : "32x32",
      "idiom" : "mac",
      "filename" : "icon-7 (dragged).png",
      "scale" : "2x"
    },
    {
      "size" : "128x128",
      "idiom" : "mac",
      "filename" : "icon-6 (dragged).png",
      "scale" : "1x"
    },
    {
      "size" : "128x128",
      "idiom" : "mac",
      "filename" : "icon-5 (dragged).png",
      "scale" : "2x"
    },
    {
      "size" : "256x256",
      "idiom" : "mac",
      "filename" : "icon-4 (dragged).png",
      "scale" : "1x"
    },
    {
      "size" : "256x256",
      "idiom" : "mac",
      "filename" : "icon-3 (dragged).png",
      "scale" : "2x"
    },
    {
      "size" : "512x512",
      "idiom" : "mac",
      "filename" : "icon-2 (dragged).png",
      "scale" : "1x"
    },
    {
      "size" : "512x512",
      "idiom" : "mac",
      "filename" : "icon-1 (dragged).png",
      "scale" : "2x"
    }
  ],
  "info

/*
 * Copyright (C) Narf Industries <info@narfindustries.com>
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included
 * in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
*/
#ifndef CHAR_H
#define CHAR_H 1
/**
 * Determine if a char is non-printable (not letter, digit, symbol)
 *
 * @param ch 	Char to test
 * @return TRUE if non-printable, else FALSE
 */
unsigned int cgc_is_non_printable(unsigned char ch);

/**
 * Determine if a char is printable (letter, digit, symbol)
 *
 * @param ch 	Char to test
 * @return TRUE if printable, else FALSE
 */
unsigned int cgc_is_printable(unsigned char ch);

/**
 * Determine if a char is letter
 *
 * @param ch 	Char to test
 * @return TRUE if letter, else FALSE
 */
unsigned int cgc_is_letter(unsigned char ch);

/**
 * Determine if a char is digit
 *
 * @param ch 	Char to test
 * @return TRUE if digit, else FALSE
 */
unsigned int cgc_is_digit(unsigned char ch);

/**
 * Determine if a char is symbol
 *
 * @param ch

/**
 * @file read_config_file.c
 */
/* Copyright (C) 2017-2020 by Arjan van Vught mailto:info@orangepi-dmx.nl
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:

 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

#include <stdio.h>
#include <stdbool.h>
#include <stddef.h>
#include <assert.h>

#include <c/read_config_file.h>

bool read_config_file(const char *file_name, funcptr pfi) {
	char buffer[128];
	unsigned i;
	FILE *fp;

	assert(file_name != NULL);
	assert(pfi != NULL);

	fp = fopen(file_name, "r");

	if (fp != NULL) {
		for (;;) {
			if (fgets(buffer, (int) sizeof(buffer) - 1, fp) != buffer) {
				break; /* Error or end of file */
			}

			if (buffer[0] >= 'a') {
				char *q = (char*) buffer;

				for (i = 0; (i < sizeof(buffer) - 1) && (*q != '\0'); i++) {
					if ((*

ALTER OPERATOR <replaceable>name</replaceable> ( { <replaceable>left_type</replaceable> | NONE } , { <replaceable>right_type</replaceable> | NONE } )
    SET SCHEMA <replaceable>new_schema</replaceable>

ALTER OPERATOR <replaceable>name</replaceable> ( { <replaceable>left_type</replaceable> | NONE } , { <replaceable>right_type</replaceable> | NONE } )
    SET ( {  RESTRICT = { <replaceable class="parameter">res_proc</replaceable> | NONE }
           | JOIN = { <replaceable class="parameter">join_proc</replaceable> | NONE }
         } [, ... ] )
</synopsis>
 </refsynopsisdiv>

 <refsect1>
  <title>Description</title>

  <para>
   <command>ALTER OPERATOR</command> changes the definition of
   an operator.
  </para>

  <para>
   You must own the operator to use <command>ALTER OPERATOR</>.
   To alter the owner, you must also be a direct or indirect member of the new
   owning role, and that role must have <literal>CREATE</literal> privilege on
   the operator's schema.  (These restrictions enforce that altering the owner
   doesn't do anything you couldn't do by dropping and recreating the operator.
   However, a superuser can alter ownership of any operator anyway.)
  </para>
 </refsect1>

 <refsect1>
  <title>Parameters</title>

  <variablelist>
   <varlistentry>
    <term><replaceable class="parameter">name</replaceable></term>
    <listitem>
     <para>
      The name (optionally schema-qualified) of an existing operator.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">left_type</replaceable></term>
    <listitem>
     <para>
      The data type of the operator's left operand; write
      <literal>NONE</literal>

/** <!--
 *
 *  Copyright (C) 2017 veyesys support@veyesys.com
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU Affero General Public License as
 *  published by the Free Software Foundation, either version 3 of the
 *  License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Affero General Public License for more details.
 *
 *  You should have received a copy of the GNU Affero General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 *  If you would like this software to be made available to you under an 
 *  alternate commercial license please email support@veyesys.com 
 *  for more information.
 *
 * -->
 */

#include "vservicemgr.hpp"

VServiceMgr * g_pVServiceMgr =NULL;
Factory *gUiFactory;

VServiceMgr::VServiceMgr(Factory & pFactory)
:m_pONVIFDisMgr(NULL), 
m_pVRTSPServer(NULL), m_pVTaskMgr(NULL), 
#if defined (WIN32) && !defined (WIN64)
m_pVVIPCMgr(NULL), m_pVONVIFPGMgr(NULL),
#endif
m_pFactory(pFactory)
{
    gUiFactory = &pFactory;
    m_pONVIFDisMgr  = new VONVIFDisMgr();
    m_pVVIPCMgr = new VVIPCMgr(pFactory, *m_pONVIFDisMgr);
    m_pVRTSPServer = new VRTSPServer(pFactory);
#if defined (WIN32__REMOVE) && !defined (WIN64)
    m_pVHTTPServer = new VHTTPServer(pFactory);
    m_pVHL

decoding_table = (
    u'\x00'     #  0x0000 -> NULL
    u'\x01'     #  0x0001 -> START OF HEADING
    u'\x02'     #  0x0002 -> START OF TEXT
    u'\x03'     #  0x0003 -> END OF TEXT
    u'\x04'     #  0x0004 -> END OF TRANSMISSION
    u'\x05'     #  0x0005 -> ENQUIRY
    u'\x06'     #  0x0006 -> ACKNOWLEDGE
    u'\x07'     #  0x0007 -> BELL
    u'\x08'     #  0x0008 -> BACKSPACE
    u'\t'       #  0x0009 -> HORIZONTAL TABULATION
    u'\n'       #  0x000a -> LINE FEED
    u'\x0b'     #  0x000b -> VERTICAL TABULATION
    u'\x0c'     #  0x000c -> FORM FEED
    u'\r'       #  0x000d -> CARRIAGE RETURN
    u'\x0e'     #  0x000e -> SHIFT OUT
    u'\x0f'     #  0x000f -> SHIFT IN
    u'\x10'     #  0x0010 -> DATA LINK ESCAPE
    u'\x11'     #  0x0011 -> DEVICE CONTROL ONE
    u'\x12'     #  0x0012 -> DEVICE CONTROL TWO
    u'\x13'     #  0x0013 -> DEVICE CONTROL THREE
    u'\x14'     #  0x0014 -> DEVICE CONTROL FOUR
    u'\x15'     #  0x0015 -> NEGATIVE ACKNOWLEDGE
    u'\x16'     #  0x0016 -> SYNCHRONOUS IDLE
    u'\x17'     #  0x0017 -> END OF TRANSMISSION BLOCK
    u'\x18'     #  0x0018 -> CANCEL
    u'\x19'     #  0x0019 -> END OF MEDIUM
    u'\x1a'     #  0x001a -> SUB

          if (rule.data.mode)
            enterLocalMode(config, state, rule.data.mode, rule.token);
          if (rule.data.indent)
            state.indent.push(stream.indentation() + config.indentUnit);
          if (rule.data.dedent)
            state.indent.pop();
          if (matches.length > 2) {
            state.pending = [];
            for (var j = 2; j < matches.length; j++)
              if (matches[j])
                state.pending.push({text: matches[j], token: rule.token[j - 1]});
            stream.backUp(matches[0].length - (matches[1] ? matches[1].length : 0));
            return rule.token[0];
          } else if (rule.token && rule.token.join) {
            return rule.token[0];
          } else {
            return rule.token;
          }
        }
      }
      stream.next();
      return null;
    };
  }

  function cmp(a, b) {
    if (a === b) return true;
    if (!a || typeof a != "object" || !b || typeof b != "object") return false;
    var props = 0;
    for (var prop in a) if (a.hasOwnProperty(prop)) {
      if (!b.hasOwnProperty(prop) || !cmp(a[prop], b[prop])) return false;
      props++;
    }
    for (var prop in b) if (b.hasOwnProperty(prop)) props--;
    return props == 0;
  }

  function enterLocalMode(config, state, spec, token) {
    var pers;
    if (spec.persistent) for (var p = state.persistentStates; p && !pers; p = p.next)
      if (spec.spec ? cmp(spec.spec, p.spec) : spec.mode == p.mode) pers = p;
    var mode = pers ? pers.mode : spec.mode || CodeMirror.getMode(config, spec.spec);
    var lState = pers ? pers.state : CodeMirror.startState

	unsigned int SetCurrentLOD(unsigned int lod) { return (currentLOD = lod); }

	unsigned int GetLODCount() const { return lodCount; }
	unsigned int GetCurrentLOD() const { return currentLOD; }

	float GetLODLength(unsigned int lod) const { return lodLengths[lod]; }


	void PushLODCount(unsigned int tmpCount) { lodStack.push_back(lodCount); lodCount = tmpCount; }
	void PopLODCount() { lodCount = lodStack.back(); lodStack.pop_back(); }

	void SetLODCount(unsigned int count) {
		const unsigned int oldCount = lodCount;

		lodLengths.resize(lodCount = count);

		for (unsigned int i = oldCount; i < lodCount; i++) {
			lodLengths[i] = -1.0f;
		}

		for (int m = 0; m < LUAMAT_TYPE_COUNT; m++) {
			luaMats[m].SetLODCount(lodCount);
		}
	}

	void SetLODLength(unsigned int lod, float length) {
		if (lod >= lodCount)
			return;

		lodLengths[lod] = length;
	}


	bool AddObjectForLOD(CSolidObject* o, LuaObjType objType, LuaMatType matType, float lodDist) {
		if (!Enabled())
			return false;

		LuaObjectMaterial* objMat = GetLuaMaterial(matType);
		LuaMatRef* lodMat = objMat->GetMaterial(SetCurrentLOD(CalcCurrentLOD(objType, lodDist, objMat->GetLastLOD())));

		if ((lodMat != nullptr) && lodMat->IsActive()) {
			switch (objType) {
				case LUAOBJ_UNIT   : { lodMat->AddUnit   (o); } break;
				case LUAOBJ_FEATURE: { lodMat->AddFeature(o); } break;
				default            : {         assert(false); } break;
			}

			return true;
		}

		return false;
	}

	static void SetGlobalLODFactor(

---

govuk::apps::manuals_publisher::mongodb_name: 'govuk_content_production'
govuk::apps::manuals_publisher::mongodb_nodes:
  - 'shared-documentdb'
govuk::apps::manuals_publisher::mongodb_username: "%{hiera('shared_documentdb_user')}"
govuk::apps::manuals_publisher::mongodb_password: "%{hiera('shared_documentdb_password')}"

govuk::apps::maslow::mongodb_name: 'maslow_production'
govuk::apps::maslow::mongodb_nodes:
  - 'shared-documentdb'
govuk::apps::maslow::mongodb_username: "%{hiera('shared_documentdb_user')}"
govuk::apps::maslow::mongodb_password: "%{hiera('shared_documentdb_password')}"

govuk::apps::publisher::mongodb_name: 'govuk_content_production'
govuk::apps::publisher::mongodb_nodes:
  - 'shared-documentdb'
govuk::apps::publisher::mongodb_username: "%{hiera('shared_documentdb_user')}"
govuk::apps::publisher::mongodb_password: "%{hiera('shared_documentdb_password')}"

govuk::apps::short_url_manager::mongodb_name: 'short_url_manager_production'
govuk::apps::short_url_manager::mongodb_nodes:
  - 'shared-documentdb'
govuk::apps::short_url_manager::mongodb_username: "%{hiera('shared_documentdb_user')}"
govuk::apps::short_url_manager::mongodb_password: "%{hiera('shared_documentdb_password')}"

govuk::apps::specialist_publisher::mongodb_name: 'govuk_content_production'
govuk::apps::specialist_publisher::mongodb_nodes:
  - 'shared-documentdb'
govuk::apps::specialist_publisher::mongodb_username: "%{hiera('shared_documentdb_user

# ZSH_HIGHLIGHT_STYLES[command]=fg=white,bold
# ZSH_HIGHLIGHT_STYLES[alias]='fg=magenta,bold'

ZSH_HIGHLIGHT_STYLES[default]=none
ZSH_HIGHLIGHT_STYLES[unknown-token]=fg=009
ZSH_HIGHLIGHT_STYLES[reserved-word]=fg=009,standout
ZSH_HIGHLIGHT_STYLES[alias]=fg=cyan,bold
ZSH_HIGHLIGHT_STYLES[builtin]=fg=cyan,bold
ZSH_HIGHLIGHT_STYLES[function]=fg=cyan,bold
ZSH_HIGHLIGHT_STYLES[command]=fg=white,bold
ZSH_HIGHLIGHT_STYLES[precommand]=fg=white,underline
ZSH_HIGHLIGHT_STYLES[commandseparator]=none
ZSH_HIGHLIGHT_STYLES[hashed-command]=fg=009
ZSH_HIGHLIGHT_STYLES[path]=fg=214,underline
ZSH_HIGHLIGHT_STYLES[globbing]=fg=063
ZSH_HIGHLIGHT_STYLES[history-expansion]=fg=white,underline
ZSH_HIGHLIGHT_STYLES[single-hyphen-option]=none
ZSH_HIGHLIGHT_STYLES[double-hyphen-option]=none
ZSH_HIGHLIGHT_STYLES[back-quoted-argument]=none
ZSH_HIGHLIGHT_STYLES[single-quoted-argument]=fg=063
ZSH_HIGHLIGHT_STYLES[double-quoted-argument]=fg=063
ZSH_HIGHLIGHT_STYLES[dollar-double-quoted-argument]=fg=009
ZSH_HIGHLIGHT_STYLES[back-double-quoted-argument]=fg=009
ZSH_HIGHLIGHT_STYLES[assign]=none


[ -f "$HOME/.local/etc/init.sh" ] && source "$HOME/.local/etc/init

``` javascript
var DelayedStream = require('delayed-stream');
var http = require('http');

http.createServer(function(req, res) {
  var delayed = DelayedStream.create(req);

  setTimeout(function() {
    res.writeHead(200);
    delayed.pipe(res);
  }, 1000);
});
```

If you are not using `Stream#pipe`, you can also manually release the buffered
events by calling `delayedStream.resume()`:

``` javascript
var delayed = DelayedStream.create(req);

setTimeout(function() {
  // Emit all buffered events and resume underlaying source
  delayed.resume();
}, 1000);
```

## Implementation

In order to use this meta stream properly, here are a few things you should
know about the implementation.

### Event Buffering / Proxying

All events of the `source` stream are hijacked by overwriting the `source.emit`
method. Until node implements a catch-all event listener, this is the only way.

However, delayed-stream still continues to emit all events it captures on the
`source`, regardless of whether you have released the delayed stream yet or
not.

Upon creation, delayed-stream captures all `source` events and stores them in
an internal event buffer. Once `delayedStream.release()` is called, all
buffered events are emitted on the `delayedStream`, and the event buffer is
cleared. After that, delayed-stream merely acts as a proxy for the underlaying
source.

### Error handling

Error events on `source` are buffered / proxied just like any other events.
However, `delayedStream.create` attaches a no-op `'error'` listener to the
`source`. This way you only have to handle errors on the `delayedStream`
object, rather than in two places.

### Buffer limits

delayed-stream provides a `maxDataSize` property that can be used to limit
the amount of data being buffered. In order to protect you from bad `source`
streams that don't react to `source.pause()`, this feature is enabled by
default.

## API

### DelayedStream.create

        /// <summary>
        /// Initializes a new instance of the Asn1ReversedEncodingBuffer class that is empty and has a user defined capacity.
        /// </summary>
        /// <param name="capacity">The initial capacity.</param>
        /// <remarks>
        /// The capacity can expand automatically.
        /// </remarks>
        public Asn1BerEncodingBuffer(int capacity)
        {
            buffer = new MemoryStream(capacity);
        }

        /// <summary>
        /// Gets the encoding result.
        /// </summary>
        public byte[] Data
        {
            get
            {
                byte[] result = buffer.ToArray();
                Array.Reverse(result);
                return result;
            }
        }

        /// <summary>
        /// Writes a byte to the front of Data property.
        /// </summary>
        public void WriteByte(byte b)
        {
            //After Array.Reverse in Data property, its in the front.
            buffer.WriteByte(b);
        }

        /// <summary>
        /// Writes some bytes to the front of the buffer.
        /// </summary>
        /// <param name="bytes">An array that contains the bytes.</param>
        /// <param name="offset">The begin index of the bytes in the array.</param>
        /// <param name="count">The number of the bytes.</param>
        public void WriteBytes(byte[] bytes, int offset, int count)
        {
            //Write inversely. After Array.Reverse in Data property, the original order is retrieved.
            for (int i = offset + count - 1; i >= offset; i--)
            {
                buffer.WriteByte(bytes[i]);
            }
        }

        /// <summary>
        /// Write all the bytes in a byte array to the front of the buffer.
        /// </summary>
        /// <param name="bytes"></param>
        public void WriteBytes(byte[] bytes)
        {
            if (bytes != null)
            {
                WriteBytes(bytes, 0, bytes.Length);
            }
        }


        #region Dispose

        private bool disposed = false;

        /// <summary>
        /// Dis

<?php

namespace App\Http\Controllers\Backend;

use App\Http\Controllers\Controller;
use App\Http\Requests\Backend\Notification\MarkNotificationRequest;
use App\Models\Notification\Notification;
use App\Repositories\Backend\Notification\NotificationRepository;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;

class NotificationController extends Controller
{
    /**
     * @var \App\Repositories\Backend\Notification\NotificationRepository
     */
    protected $notification;

    public function __construct(NotificationRepository $notification)
    {
        $this->notification = $notification;
    }

    /*
     * Ajax data fetch function
     */
    public function ajaxNotifications()
    {
        /*
         * get user id
         */
        $userId = Auth::user()->id;
        /*
         * where conditions to get count
         */
        $where = ['user_id' => $userId, 'is_read' => 0];
        /*
         * get unread count
         */
        $getUnreadNotificationCount = $this->notification->getNotification($where, 'count');
        /*
         * where condition to list top notifications
         */
        $listWhere = ['user_id' => $userId, 'is_read' => 0];
        /*
         * get top 5 notifications
         */
        $getNotifications = $this->notification->getNotification($listWhere, 'get', $limit = 5);
        /*
         * preparing pass array which contain view and count both
         */
        $passArray['view'] = view('backend.includes.notification')
                ->with('notifications', $getNotifications)
                ->with('unreadNotificationCount', $getUnreadNotificationCount)
                ->render();
        $passArray['count'] = $getUnreadNotificationCount;
        /*
         * pass jsonencode array
         */
        echo json_encode($passArray);
        exit;
    }

    /*
     * clearCurrentNotifications
     */
    public function clearCurrentNotifications()
    {
        $userId = Auth::user

If you try to put an oversized thing in it, then it'll fall out right
away.

## Keys should always be Strings or Numbers

Note: this module will print warnings to `console.error` if you use a
key that is not a String or Number.  Because items are stored in an
object, which coerces keys to a string, it won't go well for you if
you try to use a key that is not a unique string, it'll cause surprise
collisions.  For example:

```JavaScript
// Bad Example!  Dont' do this!
var cache = LRU()
var a = {}
var b = {}
cache.set(a, 'this is a')
cache.set(b, 'this is b')
console.log(cache.get(a)) // prints: 'this is b'
```

## Options

* `max` The maximum size of the cache, checked by applying the length
  function to all values in the cache.  Not setting this is kind of
  silly, since that's the whole purpose of this lib, but it defaults
  to `Infinity`.
* `maxAge` Maximum age in ms.  Items are not pro-actively pruned out
  as they age, but if you try to get an item that is too old, it'll
  drop it and return undefined instead of giving it to you.
* `length` Function that is used to calculate the length of stored
  items.  If you're storing strings or buffers, then you probably want
  to do something like `function(n){return n.length}`.  The default is
  `function(n){return 1}`, which is fine if you want to store `max`
  like-sized things.
* `dispose` Function that is called on items when they are dropped
  from the cache.  This can be handy if you want to close file
  descriptors or do other cleanup tasks when items are no longer
  accessible.  Called with `key, value`.  It's called *before*
  actually removing the item from the internal cache, so if you want
  to immediately put it back in, you'll have to do that in a
  `nextTick` or `setTimeout` callback or it won't do anything

               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:

	kfree(entry->digests);
	kfree(entry);
}

/*
 * ima_alloc_init_template - create and initialize a new template entry
 */
int ima_alloc_init_template(struct ima_event_data *event_data,
			    struct ima_template_entry **entry,
			    struct ima_template_desc *desc)
{
	struct ima_template_desc *template_desc;
	struct tpm_digest *digests;
	int i, result = 0;

	if (desc)
		template_desc = desc;
	else
		template_desc = ima_template_desc_current();

	*entry = kzalloc(struct_size(*entry, template_data,
				     template_desc->num_fields), GFP_NOFS);
	if (!*entry)
		return -ENOMEM;

	digests = kcalloc(NR_BANKS(ima_tpm_chip) + ima_extra_slots,
			  sizeof(*digests), GFP_NOFS);
	if (!digests) {
		kfree(*entry);
		*entry = NULL;
		return -ENOMEM;
	}

	(*entry)->digests = digests;
	(*entry)->template_desc = template_desc;
	for (i = 0; i < template_desc->num_fields; i++) {
		const struct ima_template_field *field =
			template_desc->fields[i];
		u32 len;

		result = field->field_init(event_data,
					   &((*entry)->template_data[i]));
		if (result != 0)
			goto out;

		len = (*entry)->template_data[i].len;
		(*entry)->template_data_len += sizeof(len);
		(*entry)->template_data_len += len;
	}
	return 0;
out:
	ima_free_template_entry(*entry);
	*entry = NULL;
	return result;
}

/*
 * ima_store_template - store ima template measurements
 *
 * Calculate the hash of a template entry, add the template entry
 * to an ordered list

module VCAP::CloudController
  module Presenters
    module V3
      class RevisionPresenter < BasePresenter
        include VCAP::CloudController::Presenters::Mixins::MetadataPresentationHelpers

        def to_hash
          {
            guid: revision.guid,
            version: revision.version,
            droplet: {
              guid: revision.droplet_guid,
            },
            processes: processes,
            sidecars: sidecars,
            description: revision.description,
            relationships: {
              app: {
                data: {
                  guid: revision.app_guid,
                },
              },
            },
            created_at: revision.created_at,
            updated_at: revision.updated_at,
            links: build_links,
            metadata: {
              labels: hashified_labels(revision.labels),
              annotations: hashified_annotations(revision.annotations),
            },
            deployable: deployable

          }
        end

        private

        def revision
          @resource
        end

        def build_links
          {
            self: {
              href: url_builder.build_url(path: "/v3/revisions/#{revision.guid}")
            },
            app: {
              href: url_builder.build_url(path: "/v3/apps/#{revision.app_guid}")
            },
            environment_variables: {
              href: url_builder.build_url(path: "/v3/revisions/#{revision.guid}/environment_variables")
            }
          }
        end

        def processes
          revision.commands_by_process_type.map { |k, v| [k, { 'command' => v }] }.to_h
        end

        def sidecars
          revision.sidecars.map do |sidecar|
            {
              name: sidecar.name,
              command: sidecar.command,
              memory_in_mb: sidecar.memory,
              process_types: sidecar.revision_sidecar_process_types.map(&:type),
            }
          end
        end

        def deployable
          !re

        <tr class=" inherited">
        <td class="micon" rowspan="2">&nbsp;</td>
        <td class="sig"><a class="mlink" href="#event-beforeshow">beforeshow</a> : (&nbsp;<code>Ext.Component this</code>&nbsp;)</td>
        <td class="msource" rowspan="2"><a ext:cls="Ext.Component" ext:member="#event-beforeshow" href="Ext.Component.html#event-beforeshow">Component</a></td>
    </tr>
    <tr class=" inherited">
        <td class="mdesc">Fires before the component is shown.  Return false to stop the show.</td>
    </tr>
        <tr class=" inherited alt">
        <td class="micon" rowspan="2">&nbsp;</td>
        <td class="sig"><a class="mlink" href="#event-click">click</a> : (&nbsp;<code>Ext.menu.BaseItem this</code>, <code>Ext.EventObject e</code>&nbsp;)</td>
        <td class="msource" rowspan="2"><a ext:cls="Ext.menu.BaseItem" ext:member="#event-click" href="Ext.menu.BaseItem.html#event-click">BaseItem</a></td>
    </tr>
    <tr class=" inherited alt">
        <td class="mdesc">Fires when this item is clicked</td>
    </tr>
        <tr class=" inherited">
        <td class="micon" rowspan="2">&nbsp;</td>
        <td class="sig"><a class="mlink" href="#event-deactivate">deactivate</a> : (&nbsp;<code>Ext.menu.BaseItem this</code>&nbsp;)</td>
        <td class="msource" rowspan="2"><a ext:cls="Ext.menu.BaseItem" ext:member="#event-deactivate" href="Ext.menu.BaseItem.html#event-deactivate">BaseItem</a></td>
    </tr>
    <tr class=" inherited">
        <td class="mdesc">Fires when this item is deactivated</

AD4h3t0UCoMDGgIq4UW4P5zDngsY4vy1pE3wzLPFI4Vdo14wXDAdBgNVHQ4EFgQU
FxIwU406tG3CsPWkHWqfuUT48aswIAYDVR0lAQH/BBYwFAYIKwYBBQUHAwEGCCsG
AQUFBwMCMAwGA1UdEwQFMAMBAf8wCwYDVR0PBAQDAgH+MAUGAytlcANBAAZFvMek
Z71I8CXsBmx/0E6Weoaan9mJHgKqgQdK4w4h4dRg6DjNG957IbrLFO3vZduBMnna
qHP3xTFF+11Eyg8=
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIBTDCB/6ADAgECAhRXcvbYynz4+usVvPtJp++sBUih3TAFBgMrZXAwHDEaMBgG
A1UEAwwRcG9ueXRvd24gRWREU0EgQ0EwHhcNMTkwODE2MTMyODUwWhcNMjkwODEz
MTMyODUwWjAcMRowGAYDVQQDDBFwb255dG93biBFZERTQSBDQTAqMAUGAytlcAMh
AIE4tLweIfcBGfhPqyXFp5pjVxjaiKk+9fTbRy46jAFKo1MwUTAdBgNVHQ4EFgQU
z5b9HjkOxffbtCZhWGg+bnxuD6wwHwYDVR0jBBgwFoAUz5b9HjkOxffbtCZhWGg+
bnxuD6wwDwYDVR0TAQH/BAUwAwEB/zAFBgMrZXADQQBNlt7z4bZ7KhzecxZEe3i5
lH9MRqbpP9Rg4HyzAJfTzFGT183

  myAbsolutError = myErrorReached;
  if (anAbsVal > aMinVol)
    myErrorReached /= anAbsVal;

  myNbIterReached++;

  if(myErrorReached <= theTolerance) return;
  if(myNbIterReached >= theMaxNbIter) return;

  TColStd_SequenceOfReal anIntervals;
  TColStd_SequenceOfReal anErrors;
  TColStd_SequenceOfReal aValues;

  anIntervals.Append(theLower);
  anIntervals.Append(theUpper);

  
  anErrors.Append(myAbsolutError);
  aValues.Append(myValue);

  Standard_Integer i, nint, nbints;

  Standard_Real maxerr;
  Standard_Integer count = 0;

  while(myErrorReached > theTolerance && myNbIterReached < theMaxNbIter) {
    //Searching interval with max error 
    nbints = anIntervals.Length() - 1;
    nint = 0;
    maxerr = 0.;
    for(i = 1; i <= nbints; ++i) {
      if(anErrors(i) > maxerr) {
	maxerr = anErrors(i);
	nint = i;
      }
    }

    Standard_Real a = anIntervals(nint);
    Standard_Real b = anIntervals(nint+1);
    Standard_Real c = 0.5*(a + b);

    Standard_Real v1, v2, e1, e2;
    
    myIsDone = GKRule(theFunction, a, c, aGaussP, aGaussW, aKronrodP, aKronrodW, 
		    v1, e1);

    if(!myIsDone) return;

    myIsDone = GKRule(theFunction, c, b, aGaussP, aGaussW, aKronrodP, aKronrodW, 
		    v2, e2);
    
    if(!myIsDone) return;
    
    myNbIterReached++;
    
    Standard_

//! moment.js locale configuration
//! locale : Uzbek [uz]
//! author : Sardor Muminov : https://github.com/muminoff

import moment from '../moment';

export default moment.defineLocale('uz', {
    months : 'январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр'.split('_'),
    monthsShort : 'янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек'.split('_'),
    weekdays : 'Якшанба_Душанба_Сешанба_Чоршанба_Пайшанба_Жума_Шанба'.split('_'),
    weekdaysShort : 'Якш_Душ_Сеш_Чор_Пай_Жум_Шан'.split('_'),
    weekdaysMin : 'Як_Ду_Се_Чо_Па_Жу_Ша'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'D MMMM YYYY, dddd HH:mm'
    },
    calendar : {
        sameDay : '[Бугун соат] LT [да]',
        nextDay : '[Эртага] LT [да]',
        nextWeek : 'dddd [куни соат] LT [да]',
        lastDay : '[Кеча соат] LT [да]',
        lastWeek : '[Утган] dddd [куни соат] LT [да]',
        sameElse : 'L'
    },
    relative

EXPORTS
        adler32                                  @1
        compress                                 @2
        crc32                                    @3
        deflate                                  @4
        deflateCopy                              @5
        deflateEnd                               @6
        deflateInit2_                            @7
        deflateInit_                             @8
        deflateParams                            @9
        deflateReset                             @10
        deflateSetDictionary                     @11
        gzclose                                  @12
        gzdopen                                  @13
        gzerror                                  @14
        gzflush                                  @15
        gzopen                                   @16
        gzread                                   @17
        gzwrite                                  @18
        inflate                                  @19
        inflateEnd                               @20
        inflateInit2_                            @21
        inflateInit_                             @22
        inflateReset                             @23
        inflateSetDictionary                     @24
        inflateSync                              @25
        uncompress                               @26
        zlibVersion                              @27
        gzprintf                                 @28
        gzputc                                   @29
        gzgetc                                   @30
        gzseek                                   @31
        gzrewind                                 @32
        gztell                                   @33
        gzeof                                    @34
        gzsetparams                              @35
        zError                                   @36
        inflateSyncPoint                         @37
        get_crc_table                            @38
        compress2                                @39
        gzputs                                   @40
        gzgets                                   @41
        inflateCopy                              @42
        inflateBackInit_                         @43
        inflateBack                              @44
        inflateBackEnd                           @45
        compressBound                            @46
        deflateBound                             @47
        gzclearerr                               @48
        gzungetc                                 @49
        zlibCompileFlags                         @50
        deflatePrime                             @51
        deflatePending                           @52

        unzOpen                                  @61
        unzClose                                 @62
        unzGetGlobalInfo                         @63
        unzGet

DESCRIPTION=A general purpose tile map editor
EAPI=7
HOMEPAGE=https://www.mapeditor.org/
IUSE=examples python python_single_target_python3_6 python_single_target_python3_7
KEYWORDS=~amd64
LICENSE=BSD BSD-2 GPL-2+
RDEPEND=app-arch/zstd:= >=dev-qt/qtcore-5.14:5 >=dev-qt/qtdeclarative-5.14:5 >=dev-qt/qtgui-5.14:5 >=dev-qt/qtnetwork-5.14:5 >=dev-qt/qtwidgets-5.14:5 sys-libs/zlib python? ( python_single_target_python3_6? ( dev-lang/python:3.6 >=dev-lang/python-exec-2:=[python_targets_python3_6] ) python_single_target_python3_7? ( dev-lang/python:3.7 >=dev-lang/python-exec-2:=[python_targets_python3_7] ) )
REQUIRED_USE=python? ( ^^ ( python_single_target_python3_6 python_single_target_python3_7 ) )
SLOT=0
SRC_URI=https://github.com/bjorn/tiled/archive/v1.4.2/tiled-1.4.2.tar.gz
_eclasses_=estack	686eaab303305a908fd57b2fd7617800	multilib	98584e405e2b0264d37e8f728327fed1	python-single-r1	d3100de905f978df912135806cf27188	python-utils-r1	e41e32d357e5bdd388b5be2ce24f3883	qmake-utils	4eb5e05ef7ee630c003e3f0edc094135	toolchain-funcs	605c126bed8d87e4378d5ff1645330cb	xdg-utils	ff2ff954e6b17929574eee4efc5152ba
_md5_=d3c06f82baeb

Nimble makes your test assertions, and their failure messages, easier to read:

```diff
func testSilliest_whenMonkeysContainSillyMonkeys_theyreIncludedInTheResult() {
  let kiki = Monkey(name: "Kiki", silliness: .ExtremelySilly)
  let carl = Monkey(name: "Carl", silliness: .NotSilly)
  let jane = Monkey(name: "Jane", silliness: .VerySilly)
  let sillyMonkeys = silliest([kiki, carl, jane])
-  XCTAssertTrue(contains(sillyMonkeys, kiki), "Expected sillyMonkeys to contain 'Kiki'")
+  expect(sillyMonkeys).to(contain(kiki))
}
```

We don't have to write our own failure message--the one provided by Nimble
is already very readable:

```
expected to contain <Monkey(name: Kiki, sillines: ExtremelySilly)>,
                got <[Monkey(name: Jane, silliness: VerySilly)]>
```

![](http://f.cl.ly/items/3N2e3g2K3W123b1L1J0G/Screen%20Shot%202015-02-26%20at%2011.27.02%20AM.png)

The failure message makes it clear what's wrong: we were expecting `kiki` to be included
in the result of `silliest()`, but the result only contains `jane`. Now that we know
exactly what's wrong, it's easy to fix the issue:

```diff
public func silliest(monkeys: [Monkey]) -> [Monkey] {
-  return monkeys.filter { $0.silliness == .VerySilly }
+  return monkeys.filter { $0.silliness == .VerySilly || $0.silliness == .ExtremelySilly }
}
```

Nimble provides many different kind of assertions, each with great failure
messages. And unlike `XCTAssert`, you don't have to type your own failure message
every time.

For the full list of Nimble assertions, check

    bool            has_textures;
    bool            has_diffuse_map;
    bool            has_spec_map;
    bool            has_opacity_map;
    bool            has_emission_map;
    bool            has_normal_map;
    bool            has_rough_map;
    bool            has_displace_map;
    bool            has_occlusion_map;
    bool            has_metallic_map;
    bool            has_coat_int_map;
    bool            has_coat_rough_map;
    bool            has_reflection_int_map;
    bool            has_reflect_map;
    
    ivec4           diffuse_udim_area;
    ivec4           spec_udim_area;
    ivec4           opacity_udim_area;
    ivec4           emission_udim_area;
    ivec4           normal_udim_area;
    ivec4           rough_udim_area; 
    ivec4           displace_udim_area;
    ivec4           occlusion_udim_area;
    ivec4           metallic_udim_area;
    ivec4           coat_int_udim_area;
    ivec4           coat_rough_udim_area;
    ivec4           reflection_udim_area;
    
    bool            has_env_map;
    vec3            envScale;
    mat3            envRotate;

    vec2            normalMapScaleShift;
    vec2            normalMapScale;
    vec3            normalMapXYZScale;
    int             normal_map_type; // space: 0=tangent, 1=world  
    int             normal_map_ncomps; // 2 or 3 component

    int             displace_space;
    float           displace_scale;
    float           displace_offset;
    bool            displace_y_up; // vs. z-up

    bool            invert_opacitymap;
    
    bool            invert_roughmap;
    vec4            rough_comp;
    
    vec4            occlusion_comp;
    vec4            metallic_comp;

An ideal application would sit in a single Ruby process and handle with ease all the work (HTTP requests, background jobs, etc). For an application used by a small to medium team, this might be sufficient.

Often, it's necessary to prepare for growth and split the application on multiple Ruby processes.

The usual flor integrator is building a web application and wants her/his users to take part in workflow executions. Seemingly snappy responses are necessary. One [initial technique](#separating-user-interfacing-from-workflow-processing) is to separate HTTP handling from workflow processing, one process for each.

Ruby people have developed numerous server libraries for efficient HTTP handling. Some of them ([Passenger](https://www.phusionpassenger.com), [Unicorn](https://bogomips.org/unicorn), ...) manage pools of Ruby processes to distribute the work, when using them, one has to be aware of this.

[Another technique](#extending-the-workflow-processing-capacity) is to have more than one active flor instances to deal with more executions at once.

## separating user interfacing from workflow processing

One could decide to not have flor working in the same Ruby process (or the same group of Ruby processes) as the HTTP handling side. Still access to flor is necessary.

The classical way to do this is to have a "passive" (non-started) flor unit on the HTTP handling side.

A Rails application could thus have an initializer dedicated to a passive flor:
```ruby
#
# config/initializers/flor.rb

FLOR = Flor::Unit.new('../flor/etc/conf.json')
FLOR.conf['unit'] = 'web'
#FLOR.start # no!
```

While the workflow handling side would use an "active" (started) flor unit sharing the same configuration:
```ruby
FLOR = Flor::Unit.new('../flor/etc/conf.json')
FLOR.conf['unit'] = 'flow'
FLOR.start # yes!
```

(Note that I'm using a `FLOR` constant, feel free to use another constant name or another way to point at your flor instance in your Ruby process)

One could use [foreman](https://github.com/dd

IDLE has the following features:

* coded in 100% pure Python, using the :mod:`tkinter` GUI toolkit

* cross-platform: works mostly the same on Windows, Unix, and Mac OS X

* Python shell window (interactive interpreter) with colorizing
  of code input, output, and error messages

* multi-window text editor with multiple undo, Python colorizing,
  smart indent, call tips, auto completion, and other features

* search within any window, replace within editor windows, and search
  through multiple files (grep)

* debugger with persistent breakpoints, stepping, and viewing
  of global and local namespaces

* configuration, browsers, and other dialogs

Menus
-----

IDLE has two main window types, the Shell window and the Editor window.  It is
possible to have multiple editor windows simultaneously.  Output windows, such
as used for Edit / Find in Files, are a subtype of edit window.  They currently
have the same top menu as Editor windows but a different default title and
context menu.

IDLE's menus dynamically change based on which window is currently selected.
Each menu documented below indicates which window type it is associated with.

File menu (Shell and Editor)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

New File
   Create a new file editing window.

Open...
   Open an existing file with an Open dialog.

Recent Files
   Open a list of recent files.  Click one to open it.

Open Module...
   Open an existing module (searches sys.path).

.. index::
   single: Class browser
   single: Path browser

Class Browser
   Show functions, classes, and methods in the current Editor file in a
   tree structure.  In the shell, open a module first.

Path Browser
   Show sys.path directories, modules, functions, classes and methods in a
   tree structure.

Save
   Save the current window to the associated file, if there is one.  Windows
   that have been changed since being opened or last saved have a \* before
   and after the window title.  If there is no associated file,
   do Save As instead.

Save As...
   Save the current window with a Save As dialog.  The file

In this example, xLearn uses *field-ware factorization machines* (ffm) to train our model for
solving a binary classification task. If you want train a model for regression task. 
You can reset the ``task`` parameter to ``reg``. ::

    param = {'task':'reg', 'lr':0.2, 'lambda':0.002} 

We can see that a new file called ``model.out`` has been generated in the current directory. 
This file stores the trained model checkpoint, and we can use this model file to make prediction 
in the future: ::

    ffm_model.setTest("./small_test.txt")
    ffm_model.predict("./model.out", "./output.txt")      

After we run this Python code, we can get a new file called ``output.txt`` in current directory. 
This is output prediction. Here we show the first five lines of this output by using the following command ::

    head -n 5 ./output.txt

    -1.66107
    -0.616408
    -0.815918
    -0.608931
    -1.30794

These lines of data are the prediction score calculated for examples in the test set. The negative data 
represents the negative example and positive data represents the positive example. In xLearn, you can convert 
the score to (0-1) by using ``setSigmoid()`` option: ::

   ffm_model.setTest("./small_test.txt")  
   ffm_model.setSigmoid()
   ffm_model.predict("./model.out", "./output.txt")      

and then we can get the result ::

   head -n 5 ./output.txt

   0.158613
   0.354297
   0.310193
   0.357449
   0.220061

We can also convert the score to binary result ``(0 and 1)`` by using ``setSign()`` API ::

   # Prediction task
   ffm_model.setTest("./small_test.txt")  
   ffm_model.setSign()
   ffm_model.predict("./model.out", "./output.txt")



        </ul>
    </div>
</template>

<script>
    import ClickOutside from '../../directives/ClickOutside'
    import OwIcon from '../Icon/OwIcon'
    import OwOption from './OwOption'
    export default {
        name: "OwSelect",
        props: {
            value: {
                type: [Number, String, Boolean, Object],
                required: true
            },
            options: {
                type: Array,
                required: true
            },
            disabled: {
                type: Boolean,
                default: false
            },
            maxHeight: {
                type: Number,
            },
            width: {
                type: Number,
                default: 200
            }
        },
        data() {
            return {
                isShowDropdown: false
            }
        },
        computed: {
            selectedLabel() {
                const selectedOption = this.options.find((option) => option.value === this.value)
                return (selectedOption && selectedOption.label) ? selectedOption.label : ''
            },
            selectStyles() {
                return {
                    width: this.width + 'px'
                }
            },
            dropdownStyles() {
                return {
                    maxHeight: this.maxHeight + 'px'
                }
            }
        },
        directives: { ClickOutside },
        components: { OwOption, OwIcon },
        methods: {
            open() {
                this.isShowDropdown = true
            },
            close() {
                this.isShowDropdown = false
            },
            toggle() {
                if (this.isShowDropdown) {
                    this.close()
                }
                else {
                    this.open()
                }
            },
            onClickOption(option) {
                if (this.disabled || option.disabled) {
                    return
                }
                this.$emit('update:value', option.value)
                this.$emit('input', option.value)
                // Close dropdown
                this.close()
            }
        }
    }
</script>

<style scoped lang="scss">
.ow-select {

//sysnb	gettimeofday(tp *Timeval) (sec int64, usec int32, err error)
func Gettimeofday(tv *Timeval) (err error) {
	// The tv passed to gettimeofday must be non-nil
	// but is otherwise unused. The answers come back
	// in the two registers.
	sec, usec, err := gettimeofday(tv)
	tv.Sec = sec
	tv.Usec = usec
	return err
}

func SetKevent(k *Kevent_t, fd, mode, flags int) {
	k.Ident = uint64(fd)
	k.Filter = int16(mode)
	k.Flags = uint16(flags)
}

func (iov *Iovec) SetLen(length int) {
	iov.Len = uint64(length)
}

func (msghdr *Msghdr) SetControllen(length int) {
	msghdr.Controllen = uint32(length)
}

func (msghdr *Msghdr) SetIovlen(length int) {
	msghdr.Iovlen = int32(length)
}

func (cmsg *Cmsghdr) SetLen(length int) {
	cmsg.Len = uint32(length)
}

func Syscall9(num, a1, a2, a3, a4, a5, a6, a7, a8, a9 uintptr) (r1, r2 uintptr, err syscall.Errno)

// SYS___SYSCTL is used by syscall_bsd.go for all BSDs, but in modern versions
// of darwin/amd64 the syscall is called sysctl instead of __sysctl.
const SYS___SYSCTL = SYS_SYSCTL

//sys	Fstat(fd int, stat *Stat_t) (err error) = SYS_FSTAT64
//sys	Fstatat(fd int, path string, stat *Stat_t, flags int) (err error) = SYS_FSTATAT64
//sys	Fstatfs(fd int, stat *Statfs_t) (err error) = SYS_FSTATFS64
//sys

      throw new Error("TODO: Implement write");
    }

    function check(path) {
      if (!alive) throw new Error("Transaction closed");
      path = normalizePath(path);
      if (path + "/" !== prefix && path.substring(0, prefix.length) !== prefix) {
        throw new Error("Path " + path + " outside prefix " + prefix);
      }
      return path.substring(prefix.length);
    }
  }

  function* getLock(prefix, writable) {
    return {
      prefix: prefix,
      writable: writable
    };
    return yield function (fn) {
      queue.push({prefix: prefix, writable: writable, fn: fn});
    };
  }

  function* releaseLock(lock) {
    // throw new Error("TODO: release lock");
  }

};


function normalizePath(path) {
  return path.split("/").filter(Boolean).join("/");
}

/*
// Get a writable lock to the www folder and it's contents
// No other writable locks will be granted for this section.
var op = yield* fs.startWrite("www");
op.writeFile("www/index.html", "...");
op.writeFile("www/style.html", "...");
// Reading is also allowed from a read lock
yield* op.readEntry(".gitmodules");
// You can even read yet-to-be-written changes
yield* op.readFile("www/style.html");
// Close the lock, returns the new tree hash for the requested root.
yield* op.close();

// Get a readable lock, there can be many concurrent reads, but only one
// concurrent write.
var op = yield* fs.startRead("www/css");
// Read the tree entries
yield* op.readTree("www/css");
// Release the lock when you're done so writes can happen.
yield* op.close();

// // Read ops
// yield* op.readEntry(path)
// yield* op.readFile(path)
// yield* op.readTree(path)
// // Write ops
// op.writeEntry(path, entry)


#endif
    
};

/**
 *  Provides factory methods for creating MASConstraints.
 *  Constraints are collected until they are ready to be installed
 *
 */
@interface MASConstraintMaker : NSObject

/**
 *	The following properties return a new MASViewConstraint
 *  with the first item set to the makers associated view and the appropriate MASViewAttribute
 */
@property (nonatomic, strong, readonly) MASConstraint *left;
@property (nonatomic, strong, readonly) MASConstraint *top;
@property (nonatomic, strong, readonly) MASConstraint *right;
@property (nonatomic, strong, readonly) MASConstraint *bottom;
@property (nonatomic, strong, readonly) MASConstraint *leading;
@property (nonatomic, strong, readonly) MASConstraint *trailing;
@property (nonatomic, strong, readonly) MASConstraint *width;
@property (nonatomic, strong, readonly) MASConstraint *height;
@property (nonatomic, strong, readonly) MASConstraint *centerX;
@property (nonatomic, strong, readonly) MASConstraint *centerY;
@property (nonatomic, strong, readonly) MASConstraint *baseline;

#if (__IPHONE_OS_VERSION_MIN_REQUIRED >= 80000) || (__TV_OS_VERSION_MIN_REQUIRED >= 9000) || (__MAC_OS_X_VERSION_MIN_REQUIRED >= 101100)

@property (nonatomic, strong, readonly) MASConstraint *firstBaseline;
@property (nonatomic, strong, readonly) MASConstraint *lastBaseline;

#endif

#if TARGET_OS_IPHONE || TARGET_OS_TV

@property (nonatomic, strong, readonly) MASConstraint *leftMargin;
@property (nonatomic, strong, readonly) MASConstraint *rightMargin;
@property (nonatomic, strong, readonly) MASConstraint *topMargin;
@property (nonatomic, strong, readonly) MASConstraint *bottomMargin;
@property (nonatomic, strong, readonly) MASConstraint *leadingMargin;
@property (nonatomic, strong, readonly) MASConstraint *trailingMargin;
@property (nonatomic, strong, readonly) MASConstraint *centerXWithinMargins;
@property (nonatomic, strong, readonly) MASConstraint *centerYWithinMargins;

#endif

    for (var _iterator = ancestries, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {
      var _ref;

      if (_isArray) {
        if (_i >= _iterator.length) break;
        _ref = _iterator[_i++];
      } else {
        _i = _iterator.next();
        if (_i.done) break;
        _ref = _i.value;
      }

      var ancestry = _ref;

      var path = ancestry[i + 1];

      if (!earliest) {
        earliest = path;
        continue;
      }

      if (path.listKey && earliest.listKey === path.listKey) {
        if (path.key < earliest.key) {
          earliest = path;
          continue;
        }
      }

      var earliestKeyIndex = keys.indexOf(earliest.parentKey);
      var currentKeyIndex = keys.indexOf(path.parentKey);
      if (earliestKeyIndex > currentKeyIndex) {
        earliest = path;
      }
    }

    return earliest;
  });
}

function getDeepestCommonAncestorFrom(paths, filter) {
  var _this = this;

  if (!paths.length) {
    return this;
  }

  if (paths.length === 1) {
    return paths[0];
  }

  var minDepth = Infinity;

  var lastCommonIndex = void 0,
      lastCommon = void 0;

  var ancestries = paths.map(function (path) {
    var ancestry = [];

    do {
      ancestry.unshift(path);
    } while ((path = path.parentPath) && path !== _this);

    if (ancestry.length < minDepth) {
      minDepth = ancestry.length;
    }

    return ancestry;
  });

  var first = ancestries[0];

  depthLoop: for (var i = 0; i < minDepth; i++) {
    var shouldMatch = first[i];

    for (var _

NVIDIA Corporation("NVIDIA") supplies this software to you in
consideration of your agreement to the following terms, and your use,
installation, modification or redistribution of this NVIDIA software
constitutes acceptance of these terms.  If you do not agree with these
terms, please do not use, install, modify or redistribute this NVIDIA
software.

In consideration of your agreement to abide by the following terms, and
subject to these terms, NVIDIA grants you a personal, non-exclusive
license, under NVIDIA's copyrights in this original NVIDIA software (the
"NVIDIA Software"), to use, reproduce, modify and redistribute the
NVIDIA Software, with or without modifications, in source and/or binary
forms; provided that if you redistribute the NVIDIA Software, you must
retain the copyright notice of NVIDIA, this notice and the following
text and disclaimers in all such redistributions of the NVIDIA Software.
Neither the name, trademarks, service marks nor logos of NVIDIA
Corporation may be used to endorse or promote products derived from the
NVIDIA Software without specific prior written permission from NVIDIA.
Except as expressly stated in this notice, no other rights or licenses
express or implied, are granted by NVIDIA herein, including but not
limited to any patent rights that may be infringed by your derivative
works or by other works in which the NVIDIA Software may be
incorporated. No hardware is licensed hereunder. 

THE NVIDIA SOFTWARE IS BEING PROVIDED ON AN "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED,
INCLUDING WITHOUT LIMITATION, WARRANTIES OR CONDITIONS OF TITLE,
NON-INFRINGEMENT, MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, OR
ITS USE AND OPERATION EITHER ALONE OR IN COMBINATION WITH OTHER
PRODUCTS.

IN NO EVENT SHALL NVIDIA BE LIABLE FOR ANY SPECIAL, INDIRECT,
INCIDENTAL, EXEMPLARY, CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
TO, LOST PROFITS; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) OR ARISING IN ANY WAY
OUT OF THE USE, REPRODUCTION, MODIFICATION AND/OR DISTRIBUTION OF

 <p>If no Bitmap with the requested attributes is present in the pool, a new one will be
 allocated.

 <p>Because this method erases all pixels in the <code>Bitmap</code>, this method is slightly slower
 than <a href="../../../../../../com/bumptech/glide/load/engine/bitmap_recycle/BitmapPool.html#getDirty-int-int-android.graphics.Bitmap.Config-"><code>getDirty(int, int, android.graphics.Bitmap.Config)</code></a>. If the <code>Bitmap</code> is being obtained to be used in <code>BitmapFactory</code>
 or in any other case where every pixel in the <code>Bitmap</code> will always be
 overwritten or cleared, <a href="../../../../../../com/bumptech/glide/load/engine/bitmap_recycle/BitmapPool.html#getDirty-int-int-android.graphics.Bitmap.Config-"><code>getDirty(int, int, android.graphics.Bitmap.Config)</code></a> will be
 faster. When in doubt, use this method to ensure correctness.

 <pre>
     Implementations can should clear out every returned Bitmap using the following:

 <code>
 bitmap.eraseColor(Color.TRANSPARENT);
 </code>
 </pre></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>width</code> - The width in pixels of the desired <code>Bitmap</code>.</dd>
<dd><code>height</code> - The height in pixels of the desired <code>Bitmap</code>.</dd>
<dd><code>config</code> - The <code>Bitmap.Config</code> of the desired <code>Bitmap</code>.</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../../../../../../com/bumptech/glide/load/engine/bitmap_recycle/BitmapPool.html#getDirty-int-int-android.graphics.Bitmap.Config-"><code>getDirty(int, int, android.graphics.Bitmap.Config)</code></a></dd>
</dl>
</li>
</ul>


        "sealEngine" : "NoProof",
        "lastblockhash" : "0xb1af2559c1486c6d45b333ad590fa2951897edf102c4862a5abd7908c4c04bdb",
        "genesisRLP" : "0xf901f8f901f3a00000000000000000000000000000000000000000000000000000000000000000a01dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347942adc25665018aa1fe0e6bc666dac8fc2697ff9baa073330047c173ea0a19f7d1ec5d65f9581838d8a470d40b832d357d5d85d833c9a056e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421a056e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421ba00000000000000000000000000000000000000000000000000000000000000000880000000000000000c0c0",
        "blocks" : [
            {
                "rlp" : "0xf90262f901f7a0af294464afce951938365599af4bc5c6c852731173559a434e89af4ccedc9114a01dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347942adc25665018aa1fe0e6bc666dac8fc2697ff9baa05af7df84ce7093cf387dc0e310e2706dc941aa7aea9bbb3bc1c1b0d7cc463c12a098fa170d192a6eff341cc8b8392cf1c8256997c28117ae4c20481271ffe00b0ba0fa745df4ace07

// Returns the string representing the current user sid.
BASE_EXPORT bool GetUserSidString(std::wstring* user_sid);

// Returns true if the shift key is currently pressed.
BASE_EXPORT bool IsShiftPressed();

// Returns true if the ctrl key is currently pressed.
BASE_EXPORT bool IsCtrlPressed();

// Returns true if the alt key is currently pressed.
BASE_EXPORT bool IsAltPressed();

// Returns true if the altgr key is currently pressed.
// Windows does not have specific key code and modifier bit and Alt+Ctrl key is
// used as AltGr key in Windows.
BASE_EXPORT bool IsAltGrPressed();

// Returns false if user account control (UAC) has been disabled with the
// EnableLUA registry flag. Returns true if user account control is enabled.
// NOTE: The EnableLUA registry flag, which is ignored on Windows XP
// machines, might still exist and be set to 0 (UAC disabled), in which case
// this function will return false. You should therefore check this flag only
// if the OS is Vista or later.
BASE_EXPORT bool UserAccountControlIsEnabled();

// Sets the boolean value for a given key in given IPropertyStore.
BASE_EXPORT bool SetBooleanValueForPropertyStore(
    IPropertyStore* property_store,
    const PROPERTYKEY& property_key,
    bool property_bool_value);

// Sets the string value for a given key in given IPropertyStore.
BASE_EXPORT bool SetStringValueForPropertyStore(
    IPropertyStore* property_store,
    const PROPERTYKEY& property_key,
    const wchar_t* property_string_value);

// Sets the application id in given IPropertyStore. The function is intended
// for tagging application/chromium shortcut, browser window and jump list for
// Win7.
BASE_EXPORT bool SetAppIdForPropertyStore(IPropertyStore* property_store,
                                          const wchar_t* app_id);

// Adds the specified |command| using the specified |name| to the AutoRun key.
// |root_key| could be HKCU or HKLM or the root of any user hive.
BASE_EXPORT bool AddCommandToAutoRun(HKEY

        /// <summary>
        /// Invoked when the application is launched normally by the end user.  Other entry points
        /// will be used such as when the application is launched to open a specific file.
        /// </summary>
        /// <param name="e">Details about the launch request and process.</param>
        protected override void OnLaunched(LaunchActivatedEventArgs e)
        {
            Frame rootFrame = Window.Current.Content as Frame;

            // Do not repeat app initialization when the Window already has content,
            // just ensure that the window is active
            if (rootFrame == null)
            {
                // Create a Frame to act as the navigation context and navigate to the first page
                rootFrame = new Frame();

                rootFrame.NavigationFailed += OnNavigationFailed;

                if (e.PreviousExecutionState == ApplicationExecutionState.Terminated)
                {
                    //TODO: Load state from previously suspended application
                }

                // Place the frame in the current Window
                Window.Current.Content = rootFrame;
            }

            if (e.PrelaunchActivated == false)
            {
                if (rootFrame.Content == null)
                {
                    // When the navigation stack isn't restored navigate to the first page,
                    // configuring the new page by passing required information as a navigation
                    // parameter
                    rootFrame.Navigate(typeof(MainPage), e.Arguments);
                }
                // Ensure the current window is active
                Window.Current.Activate();
            }
        }

        /// <summary>
        /// Invoked when Navigation to a certain page fails
        /// </summary>
        /// <param name="sender">The Frame which failed navigation</param>
        /// <param name="e">Details about the navigation failure</param>
        void OnNavigationFailed(object sender, NavigationFailedEventArgs e)
        {
            throw new Exception("Failed to load Page " + e.SourcePageType.FullName);
        }

        /// <summary>
        /// Invoked when application execution is being suspended.  Application state is saved
        /// without knowing whether the application will be terminated or resumed with the contents
        /// of memory still intact.
        /// </summary>
        /// <param name="sender">The source of

/*
 * Copyright (C) Narf Industries <info@narfindustries.com>
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included
 * in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
*/
#include <libcgc.h>
#include <stdint.h>

#include "order.h"

Order *pop_order_from_list(Order **o_list) {
	if (NULL == *o_list) return NULL;

	Order *o = *o_list;
	*o_list = (Order *)o->next;

	return o;
}

void append_order_to_list(Order **o_list, Order *o) {
	Order *cur = *o_list;
	o->next = NULL;

	if (NULL == cur) {
		*o_list = o;
	} else {
		for (; NULL != cur->next; cur=(Order *)cur->next);

		cur->next = o;
	}
}

unsigned char get_order_list_size(Order *o_list) {
	Order *cur = o_list;
	unsigned char count = 0;

	while (NULL != cur) {
		cur=(Order *)cur->next;
		count++;
	}
	return

@Provider
public class ApiOriginFilter implements Filter {

    private String allowOrigin;
    private String allowCredentials;
    private String allowMethods;
    private String allowHeaders;
    private String exposeHeaders;
    private String maxAge;

    public ApiOriginFilter(PropertiesConfiguration mirthProperties) {
        allowOrigin = mirthProperties.getString("server.api.accesscontrolalloworigin");
        allowCredentials = mirthProperties.getString("server.api.accesscontrolallowcredentials");
        allowMethods = mirthProperties.getString("server.api.accesscontrolallowmethods");
        allowHeaders = mirthProperties.getString("server.api.accesscontrolallowheaders");
        exposeHeaders = mirthProperties.getString("server.api.accesscontrolexposeheaders");
        maxAge = mirthProperties.getString("server.api.accesscontrolmaxage");
    }

    @Override
    public void init(FilterConfig filterConfig) throws ServletException {}

    @Override
    public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException {
        HttpServletResponse res = (HttpServletResponse) response;
        if (StringUtils.isNotBlank(allowOrigin)) {
            res.addHeader("Access-Control-Allow-Origin", allowOrigin);
        }
        if (StringUtils.isNotBlank(allowCredentials)) {
            res.addHeader("Access-Control-Allow-Credentials", Boolean.toString(BooleanUtils.toBoolean(allowCredentials)));
        }
        if (StringUtils.isNotBlank(allowMethods)) {
            res.addHeader("Access-Control-Allow-Methods", allowMethods);
        }
        if (StringUtils.isNotBlank(allowHeaders)) {
            res.addHeader("Access-Control-Allow-Headers", allowHeaders);
        }
        if (StringUtils.isNotBlank(exposeHeaders)) {
            res.addHeader("Access-Control-Expose-Headers", exposeHeaders);
        }
        if (StringUtils.isNotBlank(maxAge)) {
            res.addHeader("Access-Control-Max-Age", Long.toString(NumberUtils.toLong(maxAge, 300L)));
        }

		k3d::mesh::points_t::iterator point = const_cast<k3d::mesh::points_t&>(*Output.points).begin();
		for(k3d::int32_t row = 0; row != point_v_samples; ++row)
		{
			const k3d::double_t row_percent = k3d::ratio(row, point_v_samples - 1);
			
			for(k3d::int32_t column = 0; column != point_u_samples; ++column)
			{
				const k3d::double_t column_percent = k3d::ratio(column, point_u_samples - 1);

				const k3d::double_t u = k3d::mix(-0.5 * u_size, 0.5 * u_size, column_percent);
				const k3d::double_t v = k3d::mix(-0.5 * v_size, 0.5 * v_size, row_percent);

				values[0] = u;
				values[1] = v;
				const k3d::double_t w = parser.evaluate(&values[0]);

				*point++ = k3d::to_point((u * i) + (v * j) + (w * k));
			}
		}
	}

	static k3d::iplugin_factory& get_factory()
	{
		static k3d::document_plugin_factory<surface_plot, k3d::interface_list<k3d::imesh_source > > factory(
			k3d::uuid(0xf2434d00, 0xd54a4482, 0xaea14eb6, 0x40a967d3),
			"SurfacePlot",
			_("Creates a 3D surface plot."),
			"Math",
			k3d::iplugin_factory::STABLE);

		return factory;
	}

private:
	k3d_data(k3d::string_t, immutable_name, change_signal, with_undo, local_storage, no_constraint, writable_property, with_serialization) m_function;
	k3d_data

	if (c->frequency == 0)
		bs = 0x03;
	else if (c->frequency < 443250000)
		bs = 0x02;
	else
		bs = 0x08;

	pllbuf[0] = 0x60;
	pllbuf[1] = div >> 8;
	pllbuf[2] = div & 0xff;
	pllbuf[3] = cp;
	pllbuf[4] = bs;

	return 5;
}

static struct mt352_config thomson_dtt7579_config = {
	.demod_address = 0x0f,
	.demod_init = thomson_dtt7579_demod_init,
};

static struct zl10353_config thomson_dtt7579_zl10353_config = {
	.demod_address = 0x0f,
};

static int cx24108_tuner_set_params(struct dvb_frontend *fe)
{
	struct dtv_frontend_properties *c = &fe->dtv_property_cache;
	u32 freq = c->frequency;
	int i, a, n, pump;
	u32 band, pll;
	u32 osci[]={950000,1019000,1075000,1178000,1296000,1432000,
		1576000,1718000,1856000,2036000,2150000};
	u32 bandsel[]={0,0x00020000,0x00040000,0x00100800,0x00101000,
		0x00102000,0x00104000,0x00108000,0x00110000,
		0x00120000,0x00140000};

	#define XTAL 1011100 /* Hz, really 1.0111 MHz and a /10 prescaler */
	dprintk("cx24108 debug: entering SetTunerFreq, freq=%d\n", freq);

	/* This is really the bit driving the tuner chip cx24108 */

	if (freq<950000)
		freq = 950000; /* kHz */
	else if (freq>2150000

extern int usb_hub_claim_port(struct usb_device *hdev, unsigned port,
		struct dev_state *owner);
extern int usb_hub_release_port(struct usb_device *hdev, unsigned port,
		struct dev_state *owner);
extern void usb_hub_release_all_ports(struct usb_device *hdev,
		struct dev_state *owner);
extern bool usb_device_is_owned(struct usb_device *udev);

extern int  usb_hub_init(void);
extern void usb_hub_cleanup(void);
extern int usb_major_init(void);
extern void usb_major_cleanup(void);

#ifdef	CONFIG_PM

extern int usb_suspend(struct device *dev, pm_message_t msg);
extern int usb_resume(struct device *dev, pm_message_t msg);
extern int usb_resume_complete(struct device *dev);

extern int usb_port_suspend(struct usb_device *dev, pm_message_t msg);
extern int usb_port_resume(struct usb_device *dev, pm_message_t msg);

#else

static inline int usb_port_suspend(struct usb_device *udev, pm_message_t msg)
{
	return 0;
}

static inline int usb_port_resume(struct usb_device *udev, pm_message_t msg)
{
	return 0;
}

#endif

#ifdef CONFIG_PM_RUNTIME

extern void usb_autosuspend_device(struct usb_device *udev);
extern int usb_autoresume_device(struct usb_device *udev);
extern int usb_remote_wakeup(struct usb_device *dev);
extern int usb_runtime_suspend(struct device *dev);
extern int usb_runtime_resume(struct device *dev);
extern int usb_runtime_idle(struct device *dev);
extern int usb_set_usb2_hardware_lpm(struct usb_device *udev, int enable);

#else

#define usb_autosuspend_device(udev)		do

}






extern "C" __declspec(dllexport)
void getBinSize(char * buf, int len, int dim, int binNum, int * boundary, int * binSize)
{
	for (int i = 0; i < binNum; i++)
	{
		binSize[i] = 0;
	}
	for (int i = 0; i < len; i++)
	{
		int index = HASH(buf + i*dim);// % binNum;
		binSize[boundary[index]] += dim;
	}
}




extern "C" __declspec(dllexport)
void stdsort(void* buf, int len, int dim)
{
	//char ** pointer = new char *[len];

	std::vector<char*> pointer(len);

	char * p = (char *)buf;
	for (int i = 0; i < len; i++)
	{
		pointer[i] = p;
		p = p + dim;
	}

	std::sort(pointer.begin(), pointer.end(), comparec);

	char* tbuf = new char[len*dim];

	for (int i = 0; i < len; i++)
	{
		//swapcode(char, pointer + i, tbuf + i*dim,dim);
		memcpy_s(tbuf + i*dim, len*dim-i*dim, pointer[i], dim);
	}

	for (int i = 0; i < len; i++)
	{
		//swapcode(char, (char*)buf + (i*dim), tbuf + i*dim, dim);
		memcpy_s((char*)buf + (i*dim), len*dim-i*dim, tbuf + i*dim, dim);
	}

	//delete pointer;
	delete tbuf;
}



extern "C" __declspec(dllexport)
void MyMemoryCopy(char* srcBuf, int srcOff, char* dest, int destOff, int dstSize, int size)
{
	memcpy_s(dest + destOff, dstSize, srcBuf + srcOff, size);
}

#pragma unmanaged
int __c

	"github.com/influxdata/platform"
)

var _ platform.OrganizationService = &OrganizationService{}

// OrganizationService is a mock organization server.
type OrganizationService struct {
	FindOrganizationByIDF func(ctx context.Context, id platform.ID) (*platform.Organization, error)
	FindOrganizationF     func(ctx context.Context, filter platform.OrganizationFilter) (*platform.Organization, error)
	FindOrganizationsF    func(ctx context.Context, filter platform.OrganizationFilter, opt ...platform.FindOptions) ([]*platform.Organization, int, error)
	CreateOrganizationF   func(ctx context.Context, b *platform.Organization) error
	UpdateOrganizationF   func(ctx context.Context, id platform.ID, upd platform.OrganizationUpdate) (*platform.Organization, error)
	DeleteOrganizationF   func(ctx context.Context, id platform.ID) error
}

//FindOrganizationByID calls FindOrganizationByIDF.
func (s *OrganizationService) FindOrganizationByID(ctx context.Context, id platform.ID) (*platform.Organization, error) {
	return s.FindOrganizationByIDF(ctx, id)
}

//FindOrganization calls FindOrganizationF.
func (s *OrganizationService) FindOrganization(ctx context.Context, filter platform.OrganizationFilter) (*platform.Organization, error) {
	return s.FindOrganizationF(ctx, filter)
}

//FindOrganizations calls FindOrganizationsF.
func (s *OrganizationService) FindOrganizations(ctx context.Context, filter platform.OrganizationFilter, opt ...platform.FindOptions) ([]*platform.Organization, int, error) {
	return s.FindOrganizationsF(ctx, filter, opt...)
}

// CreateOrganization calls CreateOrganizationF.
func (s *OrganizationService) CreateOrganization(ctx context.Context, b *platform.Organization) error {
	return s.CreateOrganizationF(ctx, b)
}

// UpdateOrganization calls UpdateOrganizationF.
func (s *OrganizationService) UpdateOrganization(ctx context.Context, id platform.

      "Work" shall mean the work of authorship, whether in Source or
      Object form, made available under the License, as indicated by a
      copyright notice that is included in or attached to the work
      (an example is provided in the Appendix below).

      "Derivative Works" shall mean any work, whether in Source or Object
      form, that is based on (or derived from) the Work and for which the
      editorial revisions, annotations, elaborations, or other modifications
      represent, as a whole, an original work of authorship. For the purposes
      of this License, Derivative Works shall not include works that remain
      separable from, or merely link (or bind by name) to the interfaces of,
      the Work and Derivative Works thereof.

      "Contribution" shall mean any work of authorship, including
      the original version of the Work and any modifications or additions
      to that Work or Derivative Works thereof, that is intentionally
      submitted to Licensor for inclusion in the Work by the copyright owner
      or by an individual or Legal Entity authorized to submit on behalf of
      the copyright owner. For the purposes of this definition, "submitted"
      means any form of electronic, verbal, or written communication sent
      to the Licensor or its representatives, including but not limited to
      communication on electronic mailing lists, source code control systems,
      and issue tracking systems that are managed by, or on behalf of, the
      Licensor for the purpose of discussing and improving the Work, but
      excluding communication that is conspicuously marked or otherwise
      designated in writing by the copyright owner as "Not a Contribution."

      "Contributor" shall mean Licensor and any individual or Legal Entity
      on behalf of whom a Contribution has been received by Licensor and
      subsequently incorporated within the Work.

   2. Grant of Copyright License. Subject to the terms and conditions of
      this License, each Contributor hereby grants to You a perpetual,
      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
      copyright license to reproduce, prepare Derivative Works of,
      publicly display, publicly perform, sublicense, and distribute the
      Work and such Derivative Works in Source or Object form.

   3. Grant of Patent License

   /* Make sure there is still something to evaluate. */
   if( startIdx > endIdx )
   {
      /* Succeed... but no data in the output. */
      VALUE_HANDLE_DEREF_TO_ZERO(outBegIdx);
      VALUE_HANDLE_DEREF_TO_ZERO(outNBElement);
      return ENUM_VALUE(RetCode,TA_SUCCESS,Success);
   }

   /* Do the K calculation:
    *
    *    Kt = 100 x ((Ct-Lt)/(Ht-Lt))
    *
    * Kt is today stochastic
    * Ct is today closing price.
    * Lt is the lowest price of the last K Period (including today)
    * Ht is the highest price of the last K Period (including today)
    */

   /* Proceed with the calculation for the requested range.
    * Note that this algorithm allows the input and
    * output to be the same buffer.
    */
   outIdx = 0;

   /* Calculate just enough K for ending up with the caller 
    * requested range. (The range of k must consider all
    * the lookback involve with the smoothing).
    */
   trailingIdx = startIdx-lookbackTotal;
   today       = trailingIdx+lookbackK;
   lowestIdx   = highestIdx = -1;
   diff = highest = lowest  = 0.0;

   /* Allocate a temporary buffer large enough to
    * store the K.
    *
    * If the output is the same as the input, great
    * we just save ourself one memory allocation.
    */
   #if !defined( _MANAGED ) && !defined(USE_SINGLE_PRECISION_INPUT) && !defined( _JAVA )
      bufferIsAllocated = 0;
   #endif

   #if defined(USE_SINGLE_PRECISION_INPUT) || defined( USE_SUBARRAY )
      /* Always alloc, since output is of different type and
       * its allocated size is not guarantee to be as large as
       * the input.
       */
      ARRAY_ALLOC( tempBuffer, endIdx-today+1 );
   #else
      if( (out

        final XStream xstream = createTrustingXStream();

        final InternalKnowledgeBase goodKBase = (InternalKnowledgeBase) xstream.fromXML( getClass().getResourceAsStream( name ) );

        nodesEquals( goodKBase.getRete(),
                     kBase.getRete() );
    }

    private void nodesEquals(final Object object1,
                             final Object object2) {
        assertEquals( object1 + " is not of the same type as " + object2,
                      object1.getClass(),
                      object2.getClass() );

        assertEquals( object1 + " is not equal to " + object2,
                      object1,
                      object2 );

        if ( object1 instanceof ObjectSource) {
            final ObjectSource source1 = (ObjectSource) object1;
            final ObjectSource source2 = (ObjectSource) object2;

            final ObjectSink[] list1 = source1.getObjectSinkPropagator().getSinks();
            final ObjectSink[] list2 = source2.getObjectSinkPropagator().getSinks();

            assertEquals( object1.getClass() + " nodes have different number of sinks",
                          list1.length,
                          list2.length );

            for ( int i = 0, size = list1.length; i < size; i++ ) {
                nodesEquals( list1[i],
                             list2[i] );
            }
        } else if ( object1 instanceof LeftTupleSource) {
            final LeftTupleSource source1 = (LeftTupleSource) object1;
            final LeftTupleSource source2 = (LeftTupleSource) object2;

            final LeftTupleSink[] list1 = source1.getSinkPropagator().getSinks();
            final LeftTupleSink[] list2 = source2.getSinkPropagator().getSinks();

            assertEquals( object1.getClass() + " nodes have different number of sinks",
                          list1.length,
                          list2.length );

            for ( int i = 0, size = list1.length; i < size; i++ ) {
                nodesEquals( list1[i],
                             list2[i] );
            }
        }

# Tenko parser autogenerated test case

- From: tests/testcases/assigns/to_keyword/autogen.md
- Path: tests/testcases/assigns/to_keyword/gen/assign_to_paren-wrapped_keyword_var_inside_delete_in_param_default/static.md

> :: assigns : to keyword : gen : assign to paren-wrapped keyword var inside delete in param default
>
> ::> static

## Input


`````js
(x = delete ((static) = f)) => {}
`````

## Output

_Note: the whole output block is auto-generated. Manual changes will be overwritten!_

Below follow outputs in five parsing modes: sloppy, sloppy+annexb, strict script, module, module+annexb.

Note that the output parts are auto-generated by the test runner to reflect actual result.

### Sloppy mode

Parsed with script goal and as if the code did not start with strict mode header.

`````
ast: {
  type: 'Program',
  loc:{start:{line:1,column:0},end:{line:1,column:33},source:''},
  body: [
    {
      type: 'ExpressionStatement',
      loc:{start:{line:1,column:0},end:{line:1,column:33},source:''},
      expression: {
        type: 'ArrowFunctionExpression',
        loc:{start:{line:1,column:0},end:{line:1,column:33},source:''},
        params: [
          {
            type: 'AssignmentPattern',
            loc:{start:{line:1,column:1},end:{line:1,column:26},source:''},
            left: {
              type: 'Identifier',
              loc:{start:{line:1,column:1},end:{line:1,column:2},source:''},
              name: 'x'
            },
            right: {
              type: 'UnaryExpression',
              loc:{start:{line:1,column:5},end:{line:1,column:26},source:''},
              operator: 'delete',
              prefix

private import gobject.ObjectG;
private import gstreamer.Toc;
private import gstreamer.c.functions;
public  import gstreamer.c.types;
public  import gstreamerc.gstreamertypes;


/**
 * Element interface that allows setting of the TOC.
 * 
 * Elements that support some kind of chapters or editions (or tracks like in
 * the FLAC cue sheet) will implement this interface.
 * 
 * If you just want to retrieve the TOC in your application then all you
 * need to do is watch for TOC messages on your pipeline's bus (or you can
 * perform TOC query). This interface is only for setting TOC data, not for
 * extracting it. To set TOC from the application, find proper tocsetter element
 * and set TOC using gst_toc_setter_set_toc().
 * 
 * Elements implementing the #GstTocSetter interface can extend existing TOC
 * by getting extend UID for that (you can use gst_toc_find_entry() to retrieve it)
 * with any TOC entries received from downstream.
 */
public interface TocSetterIF{
	/** Get the main Gtk struct */
	public GstTocSetter* getTocSetterStruct(bool transferOwnership = false);

	/** the main Gtk struct as a void* */
	protected void* getStruct();


	/** */
	public static GType getType()
	{
		return gst_toc_setter_get_type();
	}

	/**
	 * Return current TOC the setter uses. The TOC should not be
	 * modified without making it writable first.
	 *
	 * Returns: TOC set, or %NULL. Unref with
	 *     gst_toc_unref() when no longer needed
	 */
	public Toc getToc();

	/**
	 * Reset the internal TOC. Elements should call this from within the
	 * state-change handler.
	 */
	public void reset();

	/**
	 * Set the given TOC on the setter. Previously set TOC will be
	 * unreffed before setting a new one.
	 *
	 * Params:
	 *     toc = a #GstToc to set.
	 */

DEFINE_SPINLOCK(krb5_seq_lock);

u32
gss_get_mic_kerberos(struct gss_ctx *gss_ctx, struct xdr_buf *text,
		struct xdr_netobj *token)
{
	struct krb5_ctx		*ctx = gss_ctx->internal_ctx_id;
	char			cksumdata[16];
	struct xdr_netobj	md5cksum = {.len = 0, .data = cksumdata};
	unsigned char		*ptr, *msg_start;
	s32			now;
	u32			seq_send;

	dprintk("RPC:       gss_krb5_seal\n");
	BUG_ON(ctx == NULL);

	now = get_seconds();

	token->len = g_token_size(&ctx->mech_used, GSS_KRB5_TOK_HDR_LEN + 8);

	ptr = token->data;
	g_make_token_header(&ctx->mech_used, GSS_KRB5_TOK_HDR_LEN + 8, &ptr);

	/* ptr now at header described in rfc 1964, section 1.2.1: */
	ptr[0] = (unsigned char) ((KG_TOK_MIC_MSG >> 8) & 0xff);
	ptr[1] = (unsigned char) (KG_TOK_MIC_MSG & 0xff);

	msg_start = ptr + GSS_KRB5_TOK_HDR_LEN + 8;

	*(__be16 *)(ptr + 2) = htons(SGN_ALG_DES_MAC_MD5);
	memset(ptr + 4, 0xff, 4);

	if (make_checksum("md5", ptr, 8, text, 0, &md5cksum))
		return GSS_S_FAILURE;

	if (krb5_encrypt(ctx->seq, NULL, md5cksum.data,
			  md5cksum.data, md5cksum.len))
		return GSS_S_FAILURE;

	memcpy(ptr + GSS

  virtual std::string toString(int level = 0) const {
    std::ostringstream ss;
    ss << "(?)";
    return ss.str();
  }

protected:
  const Type* resultType_;
};

// Numeric integer literals like "3".
class IntLiteral : public Expression {
  Text value_;
  const uint8_t radix_;
public:
  IntLiteral(Text value, uint8_t radix = 10)
    : Expression(TIntLiteral, Type::Int), value_(value), radix_(radix) {}

  const Text& text() const { return value_; }
  const uint8_t& radix() const { return radix_; }
  
  virtual std::string toString(int level = 0) const {
    std::ostringstream ss;
    ss << value_;
    return ss.str();
  }
};

// Numeric fractional literals like "1.2".
class FloatLiteral : public Expression {
  Text value_;
public:
  FloatLiteral(Text value) : Expression(TFloatLiteral, Type::Float), value_(value) {}
  const Text& text() const { return value_; }
  virtual std::string toString(int level = 0) const {
    std::ostringstream ss;
    ss << value_;
    return ss.str();
  }
};

// Boolean literal, namely "true" or "false"
class BoolLiteral : public Expression {
  bool value_;
public:
  BoolLiteral(bool value) : Expression(TBoolLiteral, Type::Bool), value_(value) {}
  inline bool isTrue() const { return value_; }
  virtual std::string toString(int level = 0) const {
    std::ostringstream ss;
    ss << (value_ ? "true" : "false");
    return ss.str();
  }
};

/// Assigning a value to a symbol or variable, e.g. foo = 5
class Assignment : public Expression {
public:
  
  Assignment(Variable *var, Expression *rhs)
    : Expression(TAssignment), var_(var), rhs_(rhs) {}

  const Variable* variable

Please fill in the next few questions only if you compiled Bochs
yourself, as opposed to downloading a binary.

Did the configure script run ok, and detect your hardware and
operating system?
  [ ] Yes
  [ ] No, configure crashed.
  [X] No, configure ran ok but produced a bad configuration.
  [ ] No, I cannot run configure on my platform (win32 and mac).

If you used configure, what arguments did you give it?  If you used a
.conf.* script, give the name of the .conf script instead.
[
NOTE: This was done on a system that has no X windows libraries!
./configure (no args): it said it could not find X windows libraries, 
   then it set itself up for X windows anyway.  This failed of course.
   If I install X windows I'll try it again.
./configure --with-term: could not find mvaddch in any of the 
   three libraries it searched (curses, ncurses, termlib).  So I changed
   configure.in to search for waddch instead of mvwaddch, ran autoconf
   again, and it said that waddch is found in curses.  However it still
   will not build because of a few missing functions: keypad(), set_curs(),
   and nodelay().  It's only complaining about "implicit declaration" of
   these; they may actually be in the library but not the header?
./configure --with-rfb: worked great!  Not tested much though.
]

What compiler did you use?  (Please include version.)
[Reading specs from /usr/libexec/gcc/darwin/ppc/2.95.2/specs
Apple Computer, Inc. version gcc-926, based on gcc version 2.95.2 19991024
(release) ]

Did Bochs compile clean without any hacking?
  [X] Yes, once I started using RFB mode.
  [ ] No

If you had to make changes to compile, please summarize the problems you 
had or include diffs.
[./configure --with-rfb works fine
X will probably be ok if I ever install it.
]

End of compile-specific questions!

What

            // Generate IV
            uint seed = Util.Rand32();
            if (pk4.PID == 1 || IsManaphyEgg) // Create Nonshiny
                seed = GeneratePID(seed, pk4);

            if (!IsManaphyEgg)
                seed = Util.Rand32(); // reseed, do not have method 1 correlation

            // Generate IVs
            if (pk4.IV32 == 0) // Ignore Nickname/Egg flag bits; none are set for varied-IV gifts.
            {
                uint iv1 = ((seed = RNG.LCRNG.Next(seed)) >> 16) & 0x7FFF;
                uint iv2 = ((RNG.LCRNG.Next(seed)) >> 16) & 0x7FFF;
                pk4.IV32 = iv1 | iv2 << 15;
            }
        }

        private static void SetHatchedEggDetails(PK4 pk4)
        {
            pk4.IsEgg = false;
            // Met Location & Date is modified when transferred to pk5; don't worry about it.
            pk4.EggMetDate = DateTime.Now;
        }

        private void SetUnhatchedEggDetails(PK4 pk4)
        {
            pk4.IsEgg = true;
            pk4.IsNicknamed = false;
            pk4.Nickname = SpeciesName.GetSpeciesNameGeneration(0, pk4.Language, Format);
            pk4.EggMetDate = DateTime.Now;
        }

        private static uint GeneratePID(uint seed, PK4 pk4)
        {
            do
            {
                uint pid1 = (seed = RNG.LCRNG.Next(seed)) >> 16; // low
                uint pid2 = (seed = RNG.LCRNG.Next(seed)) & 0xFFFF0000; // hi
                pk4.PID = pid2 | pid1;
                // sanity check gender for non-genderless PID cases
            } while (!pk4.IsGenderValid());

            while (pk4.IsShiny) // Call the ARNG to change the PID
                pk4.PID = RNG.ARNG.Next(

  it should "provide sensible defaults for optional annotations" in {
    val a =
      fullActivation
        .copy(
          duration = None,
          annotations = Parameters(WhiskActivation.kindAnnotation, "testkind") ++ Parameters(
            WhiskActivation.pathAnnotation,
            "ns2/a"))

    Activation.from(a) shouldBe Success(
      Activation(
        "ns2/a",
        activationId.asString,
        0,
        toDuration(0),
        toDuration(0),
        toDuration(0),
        "testkind",
        false,
        0,
        None,
        Some(42)))
  }

  it should "Transform a activation with status code" in {
    val resultWithError =
      """
        |{
        | "statusCode" : 404,
        | "body": "Requested resource not found"
        |}
        |""".stripMargin.parseJson
    val a =
      fullActivation
        .copy(response = ActivationResponse.applicationError(resultWithError, Some(42)))
    Activation.from(a).map(act => act.userDefinedStatusCode) shouldBe Success(Some(404))
  }

  it should "Transform a activation with error status code" in {
    val resultWithError =
      """
        |{
        | "error": {
        |   "statusCode" : "404",
        |   "body": "Requested resource not found"
        | }
        |}
        |""".stripMargin.parseJson
    Activation.userDefinedStatusCode(Some(resultWithError)) shouldBe Some(404)
  }

  it should "Transform a activation with error status code with invalid error code" in {
    val resultWithInvalidError =
      """
        |{
        |   "statusCode" : "i404",
        |   "body": "Requested resource not found"
        |}
        |""".stripMargin.parseJson
    Activation.userDefinedStatusCode(Some(resultWithInvalidError)) shouldBe Some(400)
  }

  def toDuration(milliseconds: Long) = new FiniteDuration(

} // namespace aux

namespace aux {

template<>
struct set_chooser<16>
{
    template<
          typename T0, typename T1, typename T2, typename T3, typename T4
        , typename T5, typename T6, typename T7, typename T8, typename T9
        , typename T10, typename T11, typename T12, typename T13, typename T14
        , typename T15, typename T16, typename T17, typename T18, typename T19
        >
    struct result_
    {
        typedef typename set16<
              T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15
            >::type type;

    };
};

} // namespace aux

namespace aux {

template<>
struct set_chooser<17>
{
    template<
          typename T0, typename T1, typename T2, typename T3, typename T4
        , typename T5, typename T6, typename T7, typename T8, typename T9
        , typename T10, typename T11, typename T12, typename T13, typename T14
        , typename T15, typename T16, typename T17, typename T18, typename T19
        >
    struct result_
    {
        typedef typename set17<
              T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16
            >::type type;

    };
};

} // namespace aux

namespace aux {

template<>
struct set_chooser<18>
{
    template<
          typename T0, typename T1, typename T2, typename T3, typename T4
        , typename T5, typename T6, typename T7, typename T8, typename T9
        , typename T10, typename T11, typename T12, typename T13, typename T14
        , typename T15, typename T16, typename T17, typename T18, typename T19
        >


goog.module('grrUi.semantic.objectLabelDirective');
goog.module.declareLegacyNamespace();



/**
 * Controller for ObjectLabelDirective.
 * @unrestricted
 */
const ObjectLabelController = class {
  /**
   * @param {!angular.Scope} $scope
   * @ngInject
   */
  constructor($scope) {
    /** @private {!angular.Scope} */
    this.scope_ = $scope;

    /** @export {?string} */
    this.labelName;

    /** @export {?string} */
    this.labelOwner;

    this.scope_.$watch('::value', this.onValueChange_.bind(this));
  }

  /**
   * Handles changes of scope.value attribute.
   *
   * @param {number} newValue Label object (either fully typed or not).
   * @private
   */
  onValueChange_(newValue) {
    if (!newValue) {
      this.labelName = this.labelType = null;
    }

    if (angular.isDefined(newValue['value'])) {
      // Passed value contains full type information.
      this.labelName = newValue['value']['name']['value'];
      this.labelOwner = newValue['value']['owner']['value'];
    } else {
      // Passed value doesn't have type information;
      this.labelName = newValue['name'];
      this.labelOwner = newValue['owner'];
    }
  }
};



/**
 * Directive that displays AFF4 object label.
 *
 * @return {!angular.Directive} Directive definition object.
 * @ngInject
 * @export
 */
exports.ObjectLabelDirective = function() {
  return {
    scope: {value: '='},
    restrict: 'E',
    templateUrl: '/static/angular-components/semantic/object-label.html',
    controller: ObjectLabelController,
    controllerAs: 'controller'
  };
};


/**
 * Name of the directive in Angular.
 */
exports.ObjectLabelDirective.directive_name = 'grrObjectLabel';

/**


import com.sun.istack.internal.NotNull;
import com.sun.xml.internal.ws.api.WSBinding;
import com.sun.xml.internal.ws.api.message.Packet;
import com.sun.xml.internal.ws.api.pipe.NextAction;
import com.sun.xml.internal.ws.api.pipe.Tube;
import com.sun.xml.internal.ws.api.pipe.TubeCloner;
import com.sun.xml.internal.ws.client.HandlerConfiguration;

import javax.xml.namespace.QName;
import javax.xml.ws.soap.SOAPFaultException;
import java.util.Set;

/**
 * Performs soap mustUnderstand processing for clients.
 *
 * @author Rama Pulavarthi
 */
public class ClientMUTube extends MUTube {

    public ClientMUTube(WSBinding binding, Tube next) {
        super(binding, next);
    }

    protected ClientMUTube(ClientMUTube that, TubeCloner cloner) {
        super(that,cloner);
    }

    /**
     * Do MU Header Processing on incoming message (response)
     *
     * @return
     *         if all the headers in the packet are understood, returns an action to
     *         call the previous pipes with response packet
     * @throws SOAPFaultException
     *         if all the headers in the packet are not understood, throws SOAPFaultException
     */
    @Override @NotNull
    public NextAction processResponse(Packet response) {
        if (response.getMessage() == null) {
            return super.processResponse(response);
        }
        HandlerConfiguration handlerConfig = response.handlerConfig;

        if (handlerConfig == null) {
            //Use from binding instead of defaults in case response packet does not have it,
            //may have been changed from the time of invocation, it ok as its only fallback case.
            handlerConfig = binding.getHandlerConfig();
        }
        Set<QName> misUnderstoodHeaders = getMisUnderstoodHeaders(response.getMessage().getHeaders(), handlerConfig.getRoles(),binding.getKnownHeaders());
        if((mis

<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>CFBundleDevelopmentRegion</key>
	<string>en</string>
	<key>CFBundleExecutable</key>
	<string>$(EXECUTABLE_NAME)</string>
	<key>CFBundleIdentifier</key>
	<string>$(PRODUCT_BUNDLE_IDENTIFIER)</string>
	<key>CFBundleInfoDictionaryVersion</key>
	<string>6.0</string>
	<key>CFBundleName</key>
	<string>bloc_complex</string>
	<key>CFBundlePackageType</key>
	<string>APPL</string>
	<key>CFBundleShortVersionString</key>
	<string>$(FLUTTER_BUILD_NAME)</string>
	<key>CFBundleSignature</key>
	<string>????</string>
	<key>CFBundleVersion</key>
	<string>$(FLUTTER_BUILD_NUMBER)</string>
	<key>LSRequiresIPhoneOS</key>
	<true/>
	<key>UILaunchStoryboardName</key>
	<string>LaunchScreen</string>
	<key>UIMainStoryboardFile</key>
	<string>Main</string>
	<key>UISupportedInterfaceOrientations</key>
	<array>
		<string>UIInterfaceOrientationPortrait</string>
		<string>UIInterfaceOrientationLandscapeLeft</string>
		<string>UIInterfaceOrientationLandscapeRight</string>
	</array>
	<key>UISupportedInterfaceOrientations~ipad</key>
	<array>
		<string>UIInterfaceOrientationPortrait</string>
		<string>UIInterfaceOrientationPortraitUpsideDown</string>
		<string>UIInterfaceOrientationLandscapeLeft</string>
		<string>UIInterfaceOrientationLandscapeRight</string>
	</array>
	<key>UIViewControllerBasedStatusBarAppearance</key>


            cpuLoadStore.loadData(data);
        }
        else {
            cpuLoadStore.data.removeAt(0);
            cpuLoadStore.data.each(function(item, key) {
                item.data.time = key;
            });

            var lastData = cpuLoadStore.last().data;
            cpuLoadStore.loadData([{
                core1: generate(lastData.core1),
                core2: generate(lastData.core2),
                time: lastData.time + 1
            }], true);
        }

    }

    generateCpuLoad();

    memoryPieChartConfig = {
        flex: 1,
        xtype: 'chart',
        animate: {
            duration: 250
        },
        store: memoryStore,
        shadow: true,

        legend: {
            position: 'right'
        },
        insetPadding: 40,
        theme: 'Memory:gradients',
        series: [{
            donut: 30,
            type: 'pie',
            field: 'memory',
            showInLegend: true,
            tips: {
                trackMouse: true,
                width: 140,
                height: 28,
                renderer: function(storeItem, item) {
                    //calculate percentage.
                    var total = 0;
                    memoryStore.each(function(rec) {
                        total += rec.get('memory');
                    });
                    this.setTitle(storeItem.get('name') + ': ' + Math.round(storeItem.get('memory') / total * 100) + '%');
                }
            },
            highlight: {
                segment: {
                    margin: 20
                }
            },
            labelTitle: {
                font: '13px Arial'
            },
            label: {
                field: 'name',
                display: 'rotate',
                contrast: true,
                font: '12px Arial'
            }
        }]
    };

    barChartConfig = {
        flex: 1,
        xtype: 'chart',
        theme: 'Category1',
        store: processesMemoryStore,
        animate: {
            easing: 'ease-in-

  <td style="padding-left: 0.5em;">
   <div id="projectname">AngelScript
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.3.1 -->
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('files.html','');});
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">File List</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock">Here is a list of all documented files with brief descriptions:</div><div class="directory">
<table class="directory">
<tr id="row_0_" class="even"><td class="entry"><img src="ftv2lastnode.png" alt="\" width="16" height="22" /><img src="ftv2doc.png" alt="*" width="24" height="22" /><a class="el" href="angelscript_8h.html" target="_self">angelscript.h</a></td><td class="desc">The API definition for AngelScript</td></tr>
</table>
</div><!-- directory -->
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="footer">Generated on Tue Oct 21 2014 22:29:18 for AngelScript by
    <a href="http://www.doxygen

(*
 * Tuples - functions for tuples
 * Copyright (C) 2009 Edgar Friendly
 *               2011 Ashish Agarwal
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version,
 * with the special exception on linking described in file LICENSE.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *)

(** Tuples.

    NOTE: API changes are expected in a future release.

    Modules are provided for tuples with 2, 3, 4, and 5
    elements. Each provides the following categories of functions.

    Creation. Functions [make] take [n] arguments and build
    a [n]-tuple.

    Projection. Functions [first], [second], [third], [fourth], and [fifth]
    extract a single element. Also, multiple elements can be
    extracted. For example, {!Tuple3.get13} returns the first and
    third elements of a 3-tuple. All possible combinations are
    provided.

    Note there are no [get] functions in Tuple2 because [first] and
    [second] already cover all possibilities. However, [swap] is
    provided, which can be thought of as projecting items in a
    different order.

    Mapping. Apply a function to one or all elements of a
    tuple. Functions [map1], [map2], etc. map a given function to the
    first, second, etc. element of a tuple. All elements can be mapped
    using [map] or [mapn]. For example, {!Tuple3.map} [f g h] will
    apply [f], [g], and [h] to the three

/*
 * Copyright (c) 2014, NVIDIA CORPORATION. All rights reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */
#include <subdev/ibus.h>
#include <subdev/timer.h>

static void
gk20a_ibus_init_ibus_ring(struct nvkm_subdev *ibus)
{
	struct nvkm_device *device = ibus->device;
	nvkm_mask(device, 0x137250, 0x3f, 0);

	nvkm_mask(device, 0x000200, 0x20, 0);
	usleep_range(20, 30);
	nvkm_mask(device, 0x000200, 0x20, 0x20);

	nvkm_wr32(device, 0x12004c, 0x4);
	nvkm_wr32(device, 0x122204, 0x2);
	nvkm_rd32(device, 0x122204);

	/*
	 * Bug: increase clock timeout to avoid operation failure at high
	 * gpcclk rate.
	 */
	nvkm_wr32(device, 0x122354, 0x800);
	nvkm_wr32(device, 0

<?php
/*
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * This software consists of voluntary contributions made by many individuals
 * and is licensed under the MIT license. For more information, see
 * <http://www.doctrine-project.org>.
 */

/**
 * Conversion Exception is thrown when the database to PHP conversion fails.
 *
 * @link   www.doctrine-project.org
 * @since  2.0
 * @author Benjamin Eberlei <kontakt@beberlei.de>
 * @author Guilherme Blanco <guilhermeblanco@hotmail.com>
 * @author Jonathan Wage <jonwage@gmail.com>
 * @author Roman Borschel <roman@code-factory.org>
 */
namespace Doctrine\DBAL\Types;

class ConversionException extends \Doctrine\DBAL\DBALException
{
    /**
     * Thrown when a Database to Doctrine Type Conversion fails.
     *
     * @param string $value
     * @param string $toType
     *
     * @return \Doctrine\DBAL\Types\ConversionException
     */
    static public function conversionFailed($value, $toType)
    {
        $value = (strlen($value) > 32) ? substr($value, 0, 20) . "..." : $value;

        return new self('Could not convert database value "' . $value . '" to Doctrine Type ' . $toType);
    

#include "curl_setup.h"

#include "curl_gethostname.h"

/*
 * Curl_gethostname() is a wrapper around gethostname() which allows
 * overriding the host name that the function would normally return.
 * This capability is used by the test suite to verify exact matching
 * of NTLM authentication, which exercises libcurl's MD4 and DES code
 * as well as by the SMTP module when a hostname is not provided.
 *
 * For libcurl debug enabled builds host name overriding takes place
 * when environment variable CURL_GETHOSTNAME is set, using the value
 * held by the variable to override returned host name.
 *
 * Note: The function always returns the un-qualified hostname rather
 * than being provider dependent.
 *
 * For libcurl shared library release builds the test suite preloads
 * another shared library named libhostname using the LD_PRELOAD
 * mechanism which intercepts, and might override, the gethostname()
 * function call. In this case a given platform must support the
 * LD_PRELOAD mechanism and additionally have environment variable
 * CURL_GETHOSTNAME set in order to override the returned host name.
 *
 * For libcurl static library release builds no overriding takes place.
 */

int Curl_gethostname(char *name, GETHOSTNAME_TYPE_ARG2 namelen)
{
#ifndef HAVE_GETHOSTNAME

  /* Allow compilation and return failure when unavailable */
  (void) name;
  (void) namelen;
  return -1;

#else
  int err;
  char *dot;

#ifdef DEBUGBUILD

  /* Override host name when environment variable CURL_GETHOSTNAME is set */
  const char *force_hostname = getenv("CURL_GETHOSTNAME");
  if(force_hostname) {
    strncpy(name, force_hostname, namelen);
    err = 0;
  }
  else {
    name[0] = '\0';
    err = gethostname(name, namelen);
  }

#else /* DEBUGBUILD */

  /* The call to system's gethostname() might get intercepted by

const (
	AF_ALG                           = 0x26
	AF_APPLETALK                     = 0x5
	AF_ASH                           = 0x12
	AF_ATMPVC                        = 0x8
	AF_ATMSVC                        = 0x14
	AF_AX25                          = 0x3
	AF_BLUETOOTH                     = 0x1f
	AF_BRIDGE                        = 0x7
	AF_CAIF                          = 0x25
	AF_CAN                           = 0x1d
	AF_DECnet                        = 0xc
	AF_ECONET                        = 0x13
	AF_FILE                          = 0x1
	AF_IB                            = 0x1b
	AF_IEEE802154                    = 0x24
	AF_INET                          = 0x2
	AF_INET6                         = 0xa
	AF_IPX                           = 0x4
	AF_IRDA                          = 0x17
	AF_ISDN                          = 0x22
	AF_IUCV                          = 0x20
	AF_KCM                           = 0x29
	AF_KEY                           = 0xf
	AF_LLC                           = 0x1a
	AF_LOCAL                         = 0x1
	AF_MAX                           = 0x2a
	AF_MPLS                          = 0x1c
	AF_NETBEUI                       = 0xd
	AF_NETLINK                       = 0x10
	AF_NETROM                        = 0x6
	AF_NFC                           = 0x27
	AF_PACKET                        = 0x11
	AF_PHONET                        = 0x23
	AF_PPPOX                         = 0x18
	AF_RDS                           = 0x15
	AF_ROSE                          = 0xb
	AF_ROUTE                         = 0x10
	AF_RXRPC                         = 0x21
	AF_SECURITY                      = 0xe
	AF_SNA                           = 0x16
	AF_TIPC                          = 0x1e
	AF_UNIX                          = 0x1
	AF_UNSPEC                        = 0x0
	AF_

/** Grammar from tour chapter augmented with actions */
grammar Expr;

@header {
}

@parser::members {
@property
def memory(self):
    if not hasattr(self, '_map'):
        setattr(self, '_map', {})
    return self._map
    
@memory.setter
def memory_setter(self, value):
    if not hasattr(self, '_map'):
        setattr(self, '_map', {})
    self._map = value
    
def eval(self, left, op, right):
    if   ExprParser.MUL == op.type:
        return left * right
    elif ExprParser.DIV == op.type:
        return left / right
    elif ExprParser.ADD == op.type:
        return left + right
    elif ExprParser.SUB == op.type:
        return left - right
    else:
        return 0
}

stat:   e NEWLINE           {print($e.v);}
    |   ID '=' e NEWLINE    {self.memory[$ID.text] = $e.v}
    |   NEWLINE                   
    ;

e returns [int v]
    : a=e op=('*'|'/') b=e  {$v = self.eval($a.v, $op, $b.v)}
    | a=e op=('+'|'-') b=e  {$v = self.eval($a.v, $op, $b.v)}
    | INT                   {$v = $INT.int}    
    | ID
      {
id = $ID.text
$v = self.memory.get(id, 0)
      }
    | '(' e ')'             {$v = $e.v}       
    ; 

MUL : '*' ;
DIV : '/' ;
ADD : '+' ;
SUB : '-' ;

ID  :   [a-zA-Z]+ ;      // match identifiers
INT :   [0-9]+ ;         // match integers
NEWLINE:'\r'? '\n' ;     // return newlines to parser (is end-statement signal)
WS  :   [ \t

﻿<?xml version="1.0" encoding="utf-8"?>
<Package xmlns="http://schemas.microsoft.com/appx/manifest/foundation/windows10" xmlns:mp="http://schemas.microsoft.com/appx/2014/phone/manifest" xmlns:uap="http://schemas.microsoft.com/appx/manifest/uap/windows10" IgnorableNamespaces="uap mp">
  <Identity Name="ffaee00c-a350-48bb-9a8d-a19c46a0a880" Publisher="CN=Dave" Version="1.0.0.0" />
  <mp:PhoneIdentity PhoneProductId="ffaee00c-a350-48bb-9a8d-a19c46a0a880" PhonePublisherId="00000000-0000-0000-0000-000000000000" />
  <Properties>
    <DisplayName>eShopOnContainers.TestRunner.Windows</DisplayName>
    <PublisherDisplayName>Dave</PublisherDisplayName>
    <Logo>Assets\StoreLogo.png</Logo>
  </Properties>
  <Dependencies>
    <TargetDeviceFamily Name="Windows.Universal" MinVersion="10.0.0.0" MaxVersionTested="10.0.0.0" />
  </Dependencies>
  <Resources>
    <Resource Language="x-generate" />
  </Resources>
  <Applications>
    <Application Id="App" Executable="$targetnametoken$.exe" EntryPoint="eShopOnContainers.TestRunner.Windows.App">
      <uap:VisualElements DisplayName="eShopOnContainers.TestRunner.Windows" Square150x150Logo="Assets\Square150x150Logo.png" Square44x44Logo="Assets\Square44x44Logo.png" Description="eShopOnContainers.TestRunner.Windows" BackgroundColor="transparent">
        <uap:DefaultTile Wide310x150Logo="Assets\Wide310x150Logo.png">
        </uap:DefaultTile>
        <uap:SplashScreen Image="Assets\SplashScreen.png" />
      </uap:VisualElements>

import {createReducer, createListReducer} from './create-reducer';

interface SomeRandomEntity {
  id: string;
  name: string;
  description: string;
  someNestedObject: {
    foo: number;
  }
}

describe('createBaseReducer', () => {

  const entity: SomeRandomEntity = {
    id: '1',
    name: 'someName',
    description: 'words go here',
    someNestedObject: {
      foo: 10
    }
  }

  it('should handle create actions', () => {
    const reducer = createReducer<SomeRandomEntity>('someEntity')
    const action = {
      type: 'someEntity.create',
      someEntity: entity,
      id: '1'
    }
    const newState = reducer(undefined, action);

    expect(newState).toEqual(entity);
    expect(newState).not.toBe(entity);
  });

  it('should handle delete actions', () => {
    const reducer = createReducer<SomeRandomEntity>('someEntity')
    const action = {
      type: 'someEntity.delete',
      id: '1'
    }
    const newState = reducer(entity, action);
    expect(newState).toBe(entity);
  });

  it('should handle update actions', () => {
    const reducer = createReducer<SomeRandomEntity>('someEntity')
    const action = {
      type: 'someEntity.update.name',
      name: 'newName',
      id: '1'

    }
    const newState = reducer(entity, action);
    expect(newState).toBeDefined;
    expect(newState!.name).toEqual('newName');
  });

  it('should handle update actions of deep properties', () => {
    const reducer = createReducer<SomeRandomEntity>('someEntity')
    const action = {
      type: 'someEntity.update.someNestedObject',
      id: '1',
      someNestedObject: {
        foo: 11
      }
    }
    const newState = reducer(entity

/* Handle */
.ui.slider.checkbox .box:after,
.ui.slider.checkbox label:after {
  background: @handleBackground;
  position: absolute;
  content: '' !important;
  opacity: 1;
  z-index: 2;

  border: none;
  box-shadow: @handleBoxShadow;
  width: @sliderHandleSize;
  height: @sliderHandleSize;
  top: @sliderHandleOffset;
  left: 0em;
  transform: none;

  border-radius: @circularRadius;
  transition: @sliderHandleTransition;
}

/* Focus */
.ui.slider.checkbox input:focus ~ .box:before,
.ui.slider.checkbox input:focus ~ label:before {
  background-color: @toggleFocusColor;
  border: none;
}

/* Hover */
.ui.slider.checkbox .box:hover,
.ui.slider.checkbox label:hover {
  color: @sliderHoverLabelColor;
}
.ui.slider.checkbox .box:hover::before,
.ui.slider.checkbox label:hover::before {
  background: @sliderHoverLaneBackground;
}

/* Active */
.ui.slider.checkbox input:checked ~ .box,
.ui.slider.checkbox input:checked ~ label {
  color: @sliderOnLabelColor !important;
}
.ui.slider.checkbox input:checked ~ .box:before,
.ui.slider.checkbox input:checked ~ label:before {
  background-color: @sliderOnLineColor !important;
}
.ui.slider.checkbox input:checked ~ .box:after,
.ui.slider.checkbox input:checked ~ label:after {
  left: @sliderTravelDistance;
}

/* Active Focus */
.ui.slider.checkbox input:focus:checked ~ .box,
.ui.slider.checkbox input:focus:checked ~ label {
  color: @sliderOnFocusLabelColor !important;
}
.ui.slider.checkbox input:focus:checked ~ .box:before,
.ui.slider.checkbox input:focus:checked ~ label:before {
  background-color: @sliderOnFocusLine

public class NewManifestWizard extends BasicNewResourceWizard implements INewWizard {
	public static class NewManifestWizardPage extends WizardNewFileCreationPage {

		public NewManifestWizardPage(IStructuredSelection selection) {
			super("newPuppetManifestPage", selection);
			setTitle("Puppet Manifest File");
			setFileExtension("pp");
			setDescription("This wizard creates a new file with *.pp extension that can be opened by the Puppet Manifest Editor.");
		}

		@Override
		protected IFile createFileHandle(IPath filePath) {
			if(!"pp".equals(filePath.getFileExtension())) {
				filePath = filePath.addFileExtension("pp");
			}
			return super.createFileHandle(filePath);
		}

	}

	// private ISelection selection;

	private NewManifestWizardPage page;

	// /**
	// * The worker method. It will find the container, create the
	// * file if missing or just replace its contents, and open
	// * the editor on the newly created file.
	// */
	//
	// private void doFinish(String containerName, String fileName, IProgressMonitor monitor) throws CoreException {
	// // create a sample file
	// monitor.beginTask("Creating " + fileName, 2);
	// IWorkspaceRoot root = ResourcesPlugin.getWorkspace().getRoot();
	// IResource resource = root.findMember(new Path(containerName));
	// if(!resource.exists() || !(resource instanceof IContainer)) {
	// throwCoreException("Container \"" + containerName + "\" does not exist.");
	// }
	// IContainer container = (IContainer) resource;
	// final IFile file = container.getFile(new Path(fileName));
	// try {
	// InputStream stream = openContentStream();
	// if(file.exists()) {
	// file.setContents(stream, true, true, monitor);
	// }
	// else {
	// file.create(stream, true, monitor);
	// }
	// stream.close();
	// }
	// catch(IOException e) {

      <li><a href="pages.html"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.html"><span>Animation&#160;&&#160;Constants</span></a></li>
      <li class="current"><a href="annotated.html"><span>Classes</span></a></li>
      <li><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.html"><span>Class&#160;List</span></a></li>
      <li><a href="classes.html"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.html"><span>Class&#160;Hierarchy</span></a></li>
      <li class="current"><a href="functions.html"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
  <div id="navrow3" class="tabs2">
    <ul class="tablist">
      <li class="current"><a href="functions.html"><span>All</span></a></li>
      <li><a href="functions_func.html"><span>Functions</span></a></li>
      <li><a href="functions_vars.html"><span>Variables</span></a></li>
      <li><a href="functions_prop.html"><span>Properties</span></a></li>
    </ul>
  </div>
  <div id="navrow4" class="tabs3">
    <ul class="tablist">
      <li><a href="functions.html#index_a"><span>a</span></a></li>
      <li><a href="functions_0x62.html#index_b"><span>b</span></a></li>
      <li><a href="functions_0x63.html#index_c"><span>c</span></a></li>
      <li class="current"><a href

package image

import (
	"io/ioutil"
	"os"
	"testing"

	"github.com/docker/cli/cli/trust"
	registrytypes "github.com/docker/docker/api/types/registry"
	"github.com/theupdateframework/notary/client"
	"github.com/theupdateframework/notary/passphrase"
	"github.com/theupdateframework/notary/trustpinning"
	"gotest.tools/assert"
)

func unsetENV() {
	os.Unsetenv("DOCKER_CONTENT_TRUST")
	os.Unsetenv("DOCKER_CONTENT_TRUST_SERVER")
}

func TestENVTrustServer(t *testing.T) {
	defer unsetENV()
	indexInfo := &registrytypes.IndexInfo{Name: "testserver"}
	if err := os.Setenv("DOCKER_CONTENT_TRUST_SERVER", "https://notary-test.com:5000"); err != nil {
		t.Fatal("Failed to set ENV variable")
	}
	output, err := trust.Server(indexInfo)
	expectedStr := "https://notary-test.com:5000"
	if err != nil || output != expectedStr {
		t.Fatalf("Expected server to be %s, got %s", expectedStr, output)
	}
}

func TestHTTPENVTrustServer(t *testing.T) {
	defer unsetENV()
	indexInfo := &registrytypes.IndexInfo{Name: "testserver"}
	if err := os.Setenv("DOCKER_CONTENT_TRUST_SERVER", "http://notary-test.com:5000"); err != nil {
		t.Fatal("Failed to set ENV variable")
	}
	_, err := trust.Server(indexInfo)
	if err == nil {
		t.Fatal("Expected error with invalid scheme")
	}
}

func TestOfficialTrustServer(t *testing.T) {
	indexInfo := &registrytypes.IndexInfo{Name: "testserver", Official: true}
	output, err := trust.Server(

// Copyright (c) Athena Dev Teams - Licensed under GNU GPL
// For more information, see LICENCE in the main folder

#ifndef _SHOWMSG_H_
#define _SHOWMSG_H_

// for help with the console colors look here:
// http://www.edoceo.com/liberum/?doc=printf-with-color
// some code explanation (used here):
// \033[2J : clear screen and go up/left (0, 0 position)
// \033[K  : clear line from actual position to end of the line
// \033[0m : reset color parameter
// \033[1m : use bold for font

#define CL_RESET	"\033[0m"
#define CL_CLS		"\033[2J"
#define CL_CLL		"\033[K"

// font settings
#define CL_BOLD		"\033[1m"
#define CL_NORM		CL_RESET
#define CL_NORMAL	CL_RESET
#define CL_NONE		CL_RESET
// foreground color and bold font (bright color on windows)
#define CL_WHITE	"\033[1;37m"
#define CL_GRAY		"\033[1;30m"
#define CL_RED		"\033[1;31m"
#define CL_GREEN	"\033[1;32m"
#define CL_YELLOW	"\033[1;33m"
#define CL_BLUE		"\033[1;34m"
#define CL_MAGENTA	"\033[1;35m"
#define CL_CYAN		"\033[1;36m"

// background color
#define CL_BG_BLACK		"\033[40m"
#define CL_BG_RED		"\033[41m"
#define CL_BG_GREEN		"\033[42m"
#define CL_BG_YELLOW	"\033[43m"
#define CL_BG_BLUE		"\033[44m"
#define CL_BG_MAGENTA	"\033[45m"
#define CL_BG_CYAN		

  /**
   * Factory for constructing wavelet data copies.
   *
   * @param <T> type constructed by this factory.
   */
  interface Factory<T extends WaveletData> extends ReadableWaveletData.Factory<T> {}

  /**
   * Gets a document and its metadata from this wavelet.
   *
   * @return the requested document container, or null if it doesn't exist
   */
  @Override
  BlipData getDocument(String documentName);

  /**
   * Creates a document in this wavelet.
   *
   * @param id                   identifier of the document
   * @param author               author of the new document
   * @param contributors         participants who have contributed to the document
   * @param content              initial content of the document
   * @param lastModifiedVersion  version of last worthy modification
   * @param lastModifiedTime     epoch time of last worthy modification
   * @return the created document
   * @throws IllegalStateException if this wavelet already has a document
   *         with the requested id
   */
  BlipData createDocument(String id, ParticipantId author,
      Collection<ParticipantId> contributors, DocInitialization content,
      long lastModifiedTime, long lastModifiedVersion);

  /**
   * Adds a participant to this wavelet, ensuring it is in the participants
   * collection. The new participant is added to the end of the collection if it
   * was not already present.
   *
   * @param participant participant to add
   * @return false if the given participant was already a participant of this
   *         wavelet.
   */
  boolean addParticipant(ParticipantId participant);

  /**
   * Adds a participant to this wavelet at a specified position in the
   * participant list, ensuring it is in the participants collection.
   * Implementations of this interface may assume that this is an infrequently
   * used method and implement it inefficiently.
   *
   * @param participant participant to add
   * @param position position in participant list where to add the participant
   * @return false if the given participant was already a participant of this
   *         wavelet, in which case its position is unaffected.
   * @throws IndexOutOf

    check(line.concat(line), string + string);
    check(line.indentTail(4).concat(line), string + string);
    check(line.concat(line.indentTail(4)), string + string);
    check(line.indentTail(8).concat(line.indentTail(4)), string + string);

    line.eachPos(function (start) {
      line.eachPos(function (end) {
        check(line.slice(start, end), string.slice(start.column, end.column));
      }, start);
    });
  });

  it("Slice", function SliceTest() {
    const code = String(SliceTest),
      lines = fromString(code);
    checkAllSlices(lines);
  });

  function checkAllSlices(lines: any) {
    lines.eachPos(function (start: any) {
      lines.eachPos(function (end: any) {
        check(lines.slice(start, end), lines.bootstrapSlice(start, end));
        check(
          lines.sliceString(start, end),
          lines.bootstrapSliceString(start, end),
        );
      }, start);
    });
  }

  function getSourceLocation(lines: any) {
    return { start: lines.firstPos(), end: lines.lastPos() };
  }

  it("GetSourceLocation", function GetSourceLocationTest() {
    const code = String(GetSourceLocationTest),
      lines = fromString(code);

    function verify(indent: any) {
      const indented = lines.indentTail(indent),
        loc = getSourceLocation(indented),
        string = indented.toString(),
        strings = string.split(eol),
        lastLine = strings[strings.length - 1];

      assert.strictEqual(loc.end.line, strings.length);
      assert.strictEqual(loc.end.column, lastLine.length);

      assert.deepEqual(
        loc,
        getSourceLocation(indented.slice(loc.start, loc.end)),
      );
    }

    verify(0);
    verify(4);
    verify(-4

describe('bin script', function () {

    it('should run as a shell script with no arguments', function (done) {
        testCmd('./bin.js', [], done);
    });

    it('should run as a shell script with arguments', function (done) {
        testCmd('./bin.js', [ 'a', 'b', 'c' ], done);
    });

    it('should run as a node script with no arguments', function (done) {
        testCmd('node bin.js', [], done);
    });

    it('should run as a node script with arguments', function (done) {
        testCmd('node bin.js', [ 'x', 'y', 'z' ], done);
    });

    describe('path returned by "which"', function () {

        beforeEach(function () {
            this.which = spawn('which', ['node']);
        });

        it('should match the actual path to the script file', function (done) {
            this.which.stdout.on('data', function (buf) {
                testCmd(buf.toString().trim() + ' bin.js', [], done);
            });
            this.which.stderr.on('data', done);
        });

        it('should match the actual path to the script file, with arguments', function (done) {
            this.which.stdout.on('data', function (buf) {
                testCmd(buf.toString().trim() + ' bin.js', [ 'q', 'r' ], done);
            });
            this.which.stderr.on('data', done);
        });

    });

});

function testCmd(cmd, args, done) {

    var oldDir = process.cwd();
    process.chdir(__dirname + '/_');
    
    var cmds = cmd.split(' ');
    
    var bin = spawn(cmds[0], cmds.slice(1).concat(args.map(String)));
    process.chdir(oldDir);
    
    bin.stderr.on('data', done);
    
    bin.stdout.on('data', function (buf) {
        var _ = JSON.parse(buf.toString());
        _.map(String).should.

// New creates a new Cache.
// If maxEntries is zero, the cache has no limit and it's assumed
// that eviction is done by the caller.
func New(maxEntries int) *Cache {
	return &Cache{
		MaxEntries: maxEntries,
		ll:         list.New(),
		cache:      make(map[interface{}]*list.Element),
	}
}

// Add adds a value to the cache.
func (c *Cache) Add(key Key, value interface{}) {
	if c.cache == nil {
		c.cache = make(map[interface{}]*list.Element)
		c.ll = list.New()
	}
	if ee, ok := c.cache[key]; ok {
		c.ll.MoveToFront(ee)
		ee.Value.(*entry).value = value
		return
	}
	ele := c.ll.PushFront(&entry{key, value})
	c.cache[key] = ele
	if c.MaxEntries != 0 && c.ll.Len() > c.MaxEntries {
		c.RemoveOldest()
	}
}

// Get looks up a key's value from the cache.
func (c *Cache) Get(key Key) (value interface{}, ok bool) {
	if c.cache == nil {
		return
	}
	if ele, hit := c.cache[key]; hit {
		c.ll.MoveToFront(ele)
		return ele.Value.(*entry).value, true
	}
	return
}

// Remove removes the provided key from the cache.
func (c *Cache) Remove(key Key) {
	if c.cache == nil {
		return
	}
	if ele, hit := c.cache[key]; hit {
		c.removeElement(ele)
	}
}

// RemoveOldest removes the oldest item from the cache.
func (c *Cache) RemoveOldest() {
	if c.cache == nil {
		return
	}
	ele := c.ll.Back()
	if ele != nil {
		c.removeElement(ele)
	}
}

func (c *Cache)

        // Set product visible
        cy.get('.sw-product-detail__select-visibility')
            .scrollIntoView();
        cy.get('.sw-product-detail__select-visibility').typeMultiSelectAndCheck('Storefront');
        cy.get('.sw-product-detail__select-visibility .sw-select-selection-list__input')
            .type('{esc}');

        // Save product
        cy.get(page.elements.productSaveAction).click();
        cy.wait('@saveData').then((xhr) => {
            expect(xhr).to.have.property('status', 204);
        });
        cy.get(page.elements.smartBarBack).click();
        cy.get(`${page.elements.dataGridRow}--0 .sw-data-grid__cell--name`)
            .contains('Product with file upload image');

        // Verify in storefront
        cy.visit('/');
        cy.get('input[name=search]').type('Product with file upload image');
        cy.get('.search-suggest-container').should('be.visible');
        cy.get('.search-suggest-product-name')
            .contains('Product with file upload image')
            .click();

        cy.get('.product-detail-name').contains('Product with file upload image');
        cy.get('.product-detail-price').contains('10.00');
    });

    it('@base @catalogue: update and read product', () => {
        const page = new ProductPageObject();

        // Request we want to wait for later
        cy.server();
        cy.route({
            url: `${Cypress.env('apiPath')}/product/*`,
            method: 'patch'
        }).as('saveData');

        // Edit base data of product
        cy.clickContextMenuItem(
            '.sw-entity-listing__context-menu-edit-action',
            page.elements.contextMenuButton,
            `${page.elements.dataGridRow}--0`
        );

        cy.get('input[name=sw-field--product-name]').clearTypeAndCheck('What remains of Edith Finch');
        cy.get('.sw-field

    });
  </script>
</head>
<body>
  <nav>
    <h1>Music</h1>
  </nav>
  <article id='music'>
    <section>
      <h2>Music</h2>
      <ul class='list'>
        <li class='comp'>
          <aside>
            <img title='Imagine Dragons' src="../images/music/Imagine Dragons.jpg" height="80px">
          </aside>
          <div>
            <h3>Imagine Dragons</h3>
            <h4>Radioactive</h4>
            <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea.</p>
          </div>
        </li>
        <li class='comp'>
          <aside>
            <img title='Hurry and Harm' src="../images/music/Hurry and Harm.jpg" height="80px">
          </aside>
          <div>
            <h3>The Hurry and the Harm</h3>
            <h4>Hurt</h4>
            <p>Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo.</p>
          </div>
        <li class='comp'>
          <aside>
            <img title='Permanent' src="../images/music/Permanent.jpg" height="80px">
          </aside>
          <div>
            <h3>David Cook</h3>
            <h4>Permanent</h4>
            <p>Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesci

//|++++++++++++++++++++++++++++++++++++|//
- (void)dealloc
{
    [_elements release];
    
    [super dealloc];
}

//◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦//
#pragma mark -  List Values
//◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦//

@synthesize elements = _elements;

//◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦◦�

	/* Not all codecs need to load another verb */
	return 0;
}

/*
 * Wait 50usec for the codec to indicate it is ready.
 * No response would imply that the codec is non-operative.
 */

static int wait_for_ready(u8 *base)
{
	/* Use a 50 usec timeout - the Linux kernel uses the same duration */
	int timeout = 50;

	while (timeout--) {
		u32 reg32 = read32(base + HDA_ICII_REG);
		if (!(reg32 & HDA_ICII_BUSY))
			return 0;
		udelay(1);
	}

	return -1;
}

/*
 * Wait 50usec for the codec to indicate that it accepted the previous command.
 * No response would imply that the code is non-operative.
 */

static int wait_for_valid(u8 *base)
{
	u32 reg32;
	/* Use a 50 usec timeout - the Linux kernel uses the same duration */
	int timeout = 50;

	/* Send the verb to the codec */
	reg32 = read32(base + HDA_ICII_REG);
	reg32 |= HDA_ICII_BUSY | HDA_ICII_VALID;
	write32(base + HDA_ICII_REG, reg32);

	while (timeout--) {
		reg32 = read32(base + HDA_ICII_REG);
		if ((reg32 & (HDA_ICII_VALID | HDA_ICII_BUSY)) == HDA_ICII_VALID)
			return 0;
		udelay(1);
	}

	return -1;
}

static void codec_init(struct device *dev, u8 *base, int addr)
{
	u32 reg32;
	const u32 *verb;
	u32 verb_size;
	int i;

	printk(BIOS_DEBUG, "Azalia: Initializing codec #%d\n", addr);

	/* 1 */
	if (wait_for_ready(base) == -1) {
		printk(BIOS_DEBUG, "  codec not ready

        expect(AmbassadorTaskAssignment.count).to eq(2)
        expect(Ambassador.find(user.id).ambassador_tasks).to match_array(tasks)
      end
    end

    context "given a non-ambassador organization" do
      it "does not enqueue a job to assign ambassador tasks to the given user" do
        user = FactoryBot.create(:user_confirmed)
        org = FactoryBot.create(:organization)
        expect(AmbassadorTaskAssignment.count).to eq(0)

        FactoryBot.create(:membership_claimed, organization: org, user: user)
        Sidekiq::Worker.drain_all

        expect(AmbassadorTaskAssignment.count).to eq(0)
      end
    end
  end

  describe ".ambassador_organizations" do
    it "returns all and only ambassador organizations" do
      FactoryBot.create(:membership_claimed)
      ambassador_orgs = FactoryBot.create_list(:membership_ambassador, 3)
      found_orgs = Membership.ambassador_organizations
      expect(found_orgs.order(:created_at)).to eq(ambassador_orgs.sort_by(&:created_at))
    end
  end

  describe "admin?" do
    context "admin" do
      it "returns true" do
        membership = Membership.new(role: "admin")
        expect(membership.admin?).to be_truthy
      end
    end
    context "member" do
      it "returns true" do
        membership = Membership.new(role: "member")
        expect(membership.admin?).to be_falsey
      end
    end
  end

  describe "ambassador membership without user" do
    let!(:organization) { FactoryBot.create(:organization_ambassador) }
    let!(:ambassador_task) { FactoryBot.create(:ambassador_task) }
    let(:email) { "new@ambassador.edu" }
    let(:membership) { FactoryBot.build(:membership, organization: organization, invited_email: email) }
    it "creates the tasks when it can create the tasks"

// Copy a single uncompressed data block from input to output.
func (f *decompressor) dataBlock() {
	// Uncompressed.
	// Discard current half-byte.
	f.nb = 0
	f.b = 0

	// Length then ones-complement of length.
	nr, err := io.ReadFull(f.r, f.buf[0:4])
	f.roffset += int64(nr)
	if err != nil {
		f.err = &ReadError{f.roffset, err}
		return
	}
	n := int(f.buf[0]) | int(f.buf[1])<<8
	nn := int(f.buf[2]) | int(f.buf[3])<<8
	if uint16(nn) != uint16(^n) {
		f.err = CorruptInputError(f.roffset)
		return
	}

	if n == 0 {
		// 0-length block means sync
		f.flush((*decompressor).nextBlock)
		return
	}

	f.copyLen = n
	f.copyData()
}

// copyData copies f.copyLen bytes from the underlying reader into f.hist.
// It pauses for reads when f.hist is full.
func (f *decompressor) copyData() {
	n := f.copyLen
	for n > 0 {
		m := len(f.hist) - f.hp
		if m > n {
			m = n
		}
		m, err := io.ReadFull(f.r, f.hist[f.hp:f.hp+m])
		f.roffset += int64(m)
		if err != nil {
			f.err = &ReadError{f.roffset, err}
			return
		}
		n -= m
		f.hp += m
		if f.hp == len(f.hist) {
			f.copyLen = n
			f.flush((*decompressor).copyData)
			return
		}
	}
	f.step = (*decompressor).nextBlock
}



import com.oreilly.demo.android.pa.clientserver.server.ServerStatic;
import com.oreilly.demo.android.pa.clientserver.server.dataobjects.User;


public class AddUserServlet extends BaseServlet {
	private static final long serialVersionUID = 3314034629918477254L;

	@Override
	protected void response(HttpServletRequest req, HttpServletResponse res) {
		if(res == null) return;
		if(ServerStatic.getConfig().getUserData() == null) {
			res.setStatus(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);
			res.setContentLength(0);
			return;
		}
		
		String username = req.getParameter("username");
		String password = req.getParameter("password");
		
		if(username == null || password == null) {
			res.setStatus(HttpServletResponse.SC_FORBIDDEN);
			res.setContentLength(0);
			return;
		}
		
		User user = ServerStatic.getConfig().getUserData().getUser(username);
		if(user != null) {
			res.setStatus(HttpServletResponse.SC_FORBIDDEN);
			res.setContentLength(0);
			return;
		}
		
		user = new User();
		user.username = username;
		user.password = password;
		user.name = req.getParameter("name");
		user.phone = req.getParameter("phone");
		
		ServerStatic.getConfig().getUserData().addUser(user);
		
		try {
			ServerStatic.getConfig().getUserData().saveData();
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		res.setStatus(HttpServletResponse.SC_OK);
		try {
			JSONObject json = new JSONObject();
			json.put("id", user.id);
			byte[] b = json.toString().getBytes();
			res.getOutputStream().write(b);
			res.setContentLength(b.length);
		} catch (Throwable t) {
			res.setContentLength(0);
		}
	}

	@Override
	public String

<resources name="en" flag="gb" title="English">
	<string name="_sys_module_linkedin"><![CDATA[LinkedIn Connect]]></string>
	<string name="_bx_linkedin"><![CDATA[LinkedIn Connect]]></string>
	<string name="_bx_linkedin_settings"><![CDATA[LinkedIn Connect]]></string>
	<string name="_bx_linkedin_information_block"><![CDATA[
        <p>This module can be used to login to this site using LinkedIn credentials.</p>
        <p>To make it work, <a target="_blank" href="https://www.linkedin.com/developer/apps">create LinkedIn app</a> and specify all the details, particularly:
            <ul>
                <li>For "Application Permissions": <strong>r_basicprofile</strong> and <strong>r_emailaddress</strong></li>
                <li>For the redirect URL: <strong>{0}</strong></li>
            </ul>
            Then enter generated Client ID & Secret pair in this module settings.
        </p>]]></string>
	<string name="_bx_linkedin_profile_error_api_keys"><![CDATA[Please configure the module in admin panel (can't define Client ID and Secret)]]></string>
	<string name="_bx_linkedin_auth_title"><![CDATA[Login with LinkedIn]]></string>	

    <string name="_bx_linkedin_adm_stg_cpt_type"><![CDATA[LinkedIn Connect]]></string>
    <string name="_bx_linkedin_option_app_id"><![CDATA[Client ID]]></string>
    <string name="_bx_linkedin_option_app_secret"><![CDATA[Client Secret]]></string>

	<string name="_bx_linkedin_et_password_generated"><![CDATA[LinkedIn connect temporary password]]></string>
	<string name="_bx_linkedin_et_password_generated_subject"><![CDATA[Temporary password]]></string>
	<string name="_bx_linkedin_et_password_generated_body"><![CDATA[{email_header}
<p>Temporary password - <b>{password}</b></p>
<p>Change it after logging

    //cast to int operator evaluates data using T binary functor
    inline operator int() const { return count_ % 2; }
  private:
    int count_;
  };

  template <class T, typename Unit>
  inline BooleanOp<T, Unit>& BooleanOp<T, Unit>::operator=(const BooleanOp& that) {
    scanData_ = that.scanData_;
    nextItr_ = scanData_.begin();
    nullT_ = that.nullT_;
    return *this;
  }

  //appends output edges to cT
  template <class T, typename Unit>
  template <class cT>
  inline void BooleanOp<T, Unit>::processInterval(cT& outputContainer, interval_data<Unit> ivl, T deltaCount) {
    typename ScanData::iterator lowItr = lookup_(ivl.low());
    typename ScanData::iterator highItr = lookup_(ivl.high());
    //add interval to scan data if it is past the end
    if(lowItr == scanData_.end()) {
      lowItr = insert_(ivl.low(), deltaCount);
      highItr = insert_(ivl.high(), nullT_);
      evaluateInterval_(outputContainer, ivl, nullT_, deltaCount);
      return;
    }
    //ensure that highItr points to the end of the ivl
    if(highItr == scanData_.end() || (*highItr).first > ivl.high()) {
      T value = nullT_;
      if(highItr != scanData_.begin()) {
        --highItr;
        value = highItr->second;
      }
      nextItr_ = highItr;
      highItr = insert_(ivl.high(), value);
    }
    //split the low interval if needed
    if(lowItr->first > ivl.low()) {
      if(lowItr != scanData_.begin()) {
        --lowItr;
        nextItr_ = lowItr;
        lowItr = insert_(ivl.low(), lowItr->second);
      } else {
        nextItr_ = lowItr;
        lowItr =

package io.cattle.platform.bootstrap.script;

import io.cattle.platform.archaius.util.ArchaiusUtil;
import io.cattle.platform.iaas.api.request.handler.ScriptsHandler;
import io.cattle.platform.token.impl.RSAKeyProvider;
import io.github.ibuildthecloud.gdapi.request.ApiRequest;

import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.security.cert.Certificate;

import javax.inject.Inject;

import org.apache.commons.io.IOUtils;

import com.netflix.config.DynamicStringProperty;

public class BootstrapScriptsHandler implements ScriptsHandler {

    private static final DynamicStringProperty BOOTSTRAP_SOURCE = ArchaiusUtil.getString("bootstrap.source");
    private static final DynamicStringProperty REQUIRED_IMAGE = ArchaiusUtil.getString("bootstrap.required.image");

    private static final String BOOTSTRAP = "bootstrap";

    @Inject
    RSAKeyProvider keyProvider;

    @Override
    public boolean handle(ApiRequest request) throws IOException {
        if (!BOOTSTRAP.equals(request.getId())) {
            return false;
        }

        byte[] content = getBootstrapSource(request);
        IOUtils.copy(new ByteArrayInputStream(content), request.getServletContext().getResponse().getOutputStream());

        return true;
    }

    protected byte[] getBootstrapSource(ApiRequest apiRequest) throws IOException {
        ClassLoader cl = BootstrapScriptsHandler.class.getClassLoader();
        Certificate cert = keyProvider.getCACertificate();
        byte[] pem = keyProvider.toBytes(cert);
        try (InputStream is = cl.getResourceAsStream(BOOTSTRAP_SOURCE.get())) {
            String content = IOUtils.toString(is);
            content = content.replace("REQUIRED_IMAGE=", String.format("REQUIRED_IMAGE=\"%s\"", REQUIRED_IMAGE.get()));
            content = content.replace("DETECTED_CATTLE_AGENT_IP=",

#! /bin/sh
# 
# Get the architecture of the system and convert the string into one
# of ia64 or i386.
#
# @rocks@
# Copyright (c) 2000 - 2010 The Regents of the University of California
# All rights reserved. Rocks(r) v5.4 www.rocksclusters.org
# https://github.com/Teradata/stacki/blob/master/LICENSE-ROCKS.txt
# @rocks@
#
# $Log$
# Revision 1.2  2010/09/07 23:53:04  bruno
# star power for gb
#
# Revision 1.1  2010/06/22 21:07:44  mjk
# build env moving into base roll
#
# Revision 1.15  2009/05/01 19:06:45  mjk
# chimi con queso
#
# Revision 1.14  2008/10/18 00:55:43  mjk
# copyright 5.1
#
# Revision 1.13  2008/03/06 23:41:28  mjk
# copyright storm on
#
# Revision 1.12  2007/10/10 23:10:54  anoop
# New Arch i86pc supported. Does not fall back to i386
#
# Revision 1.11  2007/06/23 04:03:16  mjk
# mars hill copyright
#
# Revision 1.10  2006/09/11 22:46:51  mjk
# monkey face copyright
#
# Revision 1.9  2006/08/10 00:09:12  mjk
# 4.2 copyright
#
# Revision 1.8  2006/06/21 22:52:44  nadya
# add solaris
#
# Revision 1.7  2005/12/30 20:43:17  mjk
# *** empty log message ***
#
# Revision 1.6  2005/10/12 18:08:18  mjk
# final copyright for 4.1
#
# Revision 1.5  2005/09/16 01:02:00  mjk
# updated copyright
#
# Rev

        // attach the shaders to the program
        prog.AttachShader(vs);
        prog.AttachShader(fs);
        // link it
        prog.Link();

        // and use it
        gl.Program.Bind(prog);
        // bind the VAO for the rectangle
        gl.VertexArray.Bind(rectangle);

        // bind the VBO for the rectangle vertices
        if(auto x = gl.Buffer.Array.Push(verts)) {
            GLfloat rectangle_verts[8] = {
              -1.0f, -1.0f, -1.0f, 1.0f, 1.0f, -1.0f, 1.0f, 1.0f};
            // upload the data
            gl.Buffer.Array.Data(8, rectangle_verts);
            // setup the vertex attribs array for the vertices
            VertexArrayAttrib vert_attr(prog, "Position");
            vert_attr.Setup<Vec2f>().Enable();
        }
        // bind the VBO for the rectangle colors
        if(auto x = gl.Buffer.Array.Push(colors)) {
            GLfloat rectangle_colors[12] = {
              1.0f,
              1.0f,
              1.0f,
              1.0f,
              0.0f,
              0.0f,
              0.0f,
              1.0f,
              0.0f,
              0.0f,
              0.0f,
              1.0f,
            };
            // upload the data
            gl.Buffer.Array.Data(12, rectangle_colors);
            // setup the vertex attribs array for the vertices
            VertexArrayAttrib color_attr(prog, "Color");
            color_attr.Setup<Vec3f>().Enable();
        }
        gl.Caps.DepthTest.Disable();
    }

    void Reshape(GLuint width, GLuint height) {
        gl.Viewport.Set(0, 0, width, height);
    }

    void Render(double) {
        gl.DrawArrays(PrimitiveType::TriangleStrip, 0, 4);
    

Spree.Views.Stock.AddStockItem = Backbone.View.extend({
  initialize: function() {
    this.$countInput = this.$("[name='count_on_hand']");
    this.$locationSelect = this.$("[name='stock_location_id']");
    this.$backorderable = this.$("[name='backorderable']");
  },

  events: {
    "click .submit": "onSubmit",
    "submit form": "onSubmit",
    'input [name="count_on_hand"]': "onChange",
    'change [name="stock_location_id"]': "onChange",
    'click [name="backorderable"]': "onChange"
  },

  validate: function() {
    this.$locationSelect.toggleClass('error', !this.$locationSelect.val());
    this.$countInput.toggleClass('error', !this.$countInput.val());
    return this.$locationSelect.hasClass('error') || this.$countInput.hasClass('error');
  },

  onChange: function (event) {
    var $target = $(event.target)
    if ($target.val() !== '') $target.removeClass('error');
    this.$el.addClass('changed');
  },

  onSuccess: function() {
    var selectedStockLocationOption = this.$locationSelect.find('option:selected');
    var stockLocationName = selectedStockLocationOption.text().trim();
    selectedStockLocationOption.remove();
    var editView = new Spree.Views.Stock.EditStockItemRow({
      model: this.model,
      stockLocationName: stockLocationName
    });
    editView.$el.insertBefore(this.$el);
    editView.$el.addClass('stock-item-edit-row');
    this.model = new Spree.Models.StockItem({
      variant_id: this.model.get('variant_id'),
      stock_location_id: this.model.get('stock_location_id')
    });
    if (this.$locationSelect.find('option').length === 1) { // blank value
      this.remove();
    } else {
      this.$locationSelect.select2();

func (d *msgpackDecDriver) decodeString() (s string) {
	clen := d.readContainerLen(msgpackContainerStr)
	if clen > 0 {
		s = string(d.r.readn(clen))
	}
	d.bdRead = false
	return
}

// Callers must check if changed=true (to decide whether to replace the one they have)
func (d *msgpackDecDriver) decodeBytes(bs []byte) (bsOut []byte, changed bool) {
	// bytes can be decoded from msgpackContainerStr or msgpackContainerBin
	var clen int
	switch d.bd {
	case mpBin8, mpBin16, mpBin32:
		clen = d.readContainerLen(msgpackContainerBin)
	default:
		clen = d.readContainerLen(msgpackContainerStr)
	}
	// if clen < 0 {
	// 	changed = true
	// 	panic("length cannot be zero. this cannot be nil.")
	// }
	if clen > 0 {
		// if no contents in stream, don't update the passed byteslice
		if len(bs) != clen {
			// Return changed=true if length of passed slice diff from length of bytes in stream
			if len(bs) > clen {
				bs = bs[:clen]
			} else {
				bs = make([]byte, clen)
			}
			bsOut = bs
			changed = true
		}
		d.r.readb(bs)
	}
	d.bdRead = false
	return
}

// Every top-level decode funcs (i.e. decodeValue, decode) must call this first.
func (d *msgpackDecDriver) initReadNext() {
	if d.bdRead {
		return
	}
	d.bd = d.r.readn1()
	d.bdRead = true
	d.bdType = valueTypeUnset
}

func (d *msgpackDecDriver) currentEncodedType() valueType {
	if d.bdType == valueTypeUnset {
		bd := d.bd
		switch bd

class CTaskBarGhost
{
protected:
	static ATOM mh_Class;
	HWND mh_Ghost;
	bool mb_TaskbarRegistered;
	struct {
		POINT VConSize;   // то, что было раньше в самом m_TabSize(cx/cy)
		POINT BitmapSize; // размер сформированной превьюшки
		RECT  UsedRect;   // Если VConSize < BitmapSize - то VCon "центрируется", UsedRect - где оно отрисовано
	} m_TabSize;
	HBITMAP mh_Snap;
	BITMAPINFO mbmi_Snap;
	PBYTE mpb_DS;
	BOOL mb_SimpleBlack;
	CVirtualConsole* mp_VCon;
	DWORD mn_LastUpdate;
	UINT mn_MsgUpdateThumbnail;
	HANDLE mh_SkipActivateEvent;
	bool mb_WasSkipActivate;
	wchar_t ms_LastTitle[1024];
	POINT mpt_Offset, mpt_ViewOffset, mpt_Size, mpt_ViewSize;
protected:
	static LRESULT CALLBACK GhostStatic(HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam);
	LRESULT GhostProc(UINT message, WPARAM wParam, LPARAM lParam);
	HBITMAP CreateThumbnail(int nWidth, int nHeight);
	bool CalcThumbnailSize(int nWidth, int nHeight, int &nShowWidth, int &nShowHeight);
	void UpdateGhostSize();
	void GetPreviewPosSize(POINT* pPtOffset, POINT* pPtViewOffset, POINT* pPtSize, POINT* pPtViewSize);

	// Обработка сообщений
	LRESULT OnClose();
	LRESULT OnDestroy();
	LRESULT OnDwmSendIconicLivePreviewBitmap();
	LRESULT OnDwmSendIconicThumbnail(short anWidth, short anHeight);
	HICON OnGetIcon(WPARAM anIconType);
	LRESULT OnSysCommand(WPARAM wParam

    appendScript(EMBED_LIB_JS_URL);
    pageState.embedLibScriptAdded = true;
  }

  function appendJqueryScript() {
    if (pageState.jqueryScriptAdded) {
      return;
    }

    appendScript(JQUERY_URL);
    pageState.jqueryScriptAdded = true;
  }

  function appendScript(scriptUri) {
    var scriptTag = document.createElement('script');
    scriptTag.setAttribute('src', scriptUri);
    scriptTag.setAttribute('type', 'text/javascript');
    scriptTag.async = false;
    document.body.appendChild(scriptTag);
  }

  function appendEmbedCssLink() {
    if (pageState.embedCssLinkAdded) {
      return;
    }

    appendStylesheetLink(EMBED_CSS_URL);
    pageState.embedCssLinkAdded = true;
  }

  function appendMaterialIconsCssLink() {
    if (pageState.materialIconsCssLinkAdded) {
      return;
    }

    appendStylesheetLink(MATERIAL_ICONS_URL);
    pageState.materialIconsCssLinkAdded = true;
  }

  function appendRobotoCssLink() {
    if (pageState.robotoCssLinkAdded) {
      return;
    }

    appendStylesheetLink(ROBOTO_URL);
    pageState.robotoCssLinkAdded = true;
  }

  function appendStylesheetLink(linkUrl) {
    if (pageState.stylesheetLinkAdded) {
      return;
    }

    var linkTag = document.createElement('link');
    linkTag.setAttribute('href', linkUrl);
    linkTag.setAttribute('rel', 'stylesheet');
    linkTag.setAttribute('type', 'text/css');
    document.head.appendChild(linkTag);
  }

  function onLoadHandler() {
    appendEmbedCssLink();
    appendMaterialIconsCssLink();
    appendRobotoCssLink();
    appendJqueryScript();
    appendEmbedLibScript();  // Requires jQuery.
  }

  function main

# Written by Petru Paler

class BTFailure(Exception):
    pass

def decode_int(x, f):
    f += 1
    newf = x.index('e', f)
    n = int(x[f:newf])
    if x[f] == '-':
        if x[f + 1] == '0':
            raise ValueError
    elif x[f] == '0' and newf != f+1:
        raise ValueError
    return (n, newf+1)

def decode_string(x, f):
    colon = x.index(':', f)
    n = int(x[f:colon])
    if x[f] == '0' and colon != f+1:
        raise ValueError
    colon += 1
    return (x[colon:colon+n], colon+n)

def decode_list(x, f):
    r, f = [], f+1
    while x[f] != 'e':
        v, f = decode_func[x[f]](x, f)
        r.append(v)
    return (r, f + 1)

def decode_dict(x, f):
    r, f = {}, f+1
    while x[f] != 'e':
        k, f = decode_string(x, f)
        r[k], f = decode_func[x[f]](x, f)
    return (r, f + 1)

decode_func = {}
decode_func['l'] = decode_list
decode_func['d'] = decode_dict
decode_func['i'] = decode_int
decode_func['0'] = decode_string
decode_func['1'] = decode_string
decode_func['2'] = decode_string
decode_func['3'] = decode_string
decode_func['4'] = decode_string
decode_func['5'] = decode_string
decode_func['6'] = decode_string
decode_func['7'] = decode_string
decode_func['8'] = decode_string
decode_func['9'] = decode_string

def bdecode(x):
    try:


        public static function read(type:int, offset:int, num:int ):Array
        {
            var ret:Array=[]; /* of String */ 
            for(var i:int = offset; i < num; i++){
                if (type == 0)
                {
                    ret.push(__tmp[0][i]);
                }else{
                    ret.push(__tmp[type].getLog(i));
                }
            }
            return ret;
        }


        public function ClientLog()
        {
            // 保存データを読み込む
            _sharedObj = SharedObject.getLocal(__uid+"_"+type.toString());
            // 保存データなしなら作り直し
            if (_sharedObj.data.dateSet == undefined)
            {
                _sharedObj.data.dateSet = [];
                _sharedObj.data.nameSet = [];
            }
        }

        protected function duplicateCheck(text:String):void
        {
            log.writeLog(log.LV_INFO, this, "setText",text,_textSet[0]);
            if(_textSet[0]==null||_textSet[0].replace(/X\d*/,"") != text)
            {
                _textSet.unshift(text);
            }else{
                log.writeLog(log.LV_INFO, this, "setText num ",_textSet[0]);
                var num:int = 1;
                if (_textSet[0].match(/X\d*/)!=null)
                {
                    log.writeLog(log.LV_INFO, this, "setText num 222",_textSet[0].match(/X\d*/));
                    num=int(_textSet[0].match(/X\d*/)[0].replace(/X/,""));
                }
                log.writeLog(log.LV_INFO, this, "setText num 333",num);
                num+=1;
                _textSet[0] = text+"X"+num.toString();
                dateSet.shift();
                nameSet.shift();
                _sharedObj.flush();
            }

        }

        public static function getLogNum( type:int ):int

In the implementation of the class, we register it as a section filter for `tstables`:
~~~
TS_REGISTER_SECTION_FILTER(FooFilter);
~~~

## Providing support for additional Conditional Access Systems

If you work with a specific Conditional Access System, you probably manipulate
confidential information that cannot be published in an open-source tool such
as TSDuck. The solution is to develop a private closed-source extension.

In the extension library, you may register functions to display the structure
of the ECM's, EMM's or private part of the _CA_descriptor_. The registration
is based on a range of _CA_system_id_ (here the constants `CASID_FOO_MIN`
and `CASID_FOO_MAX`).

~~~
// Display a FooCAS ECM on the output stream.
// Compatible with ts::DisplaySectionFunction profile.
void DisplayFooCASECM(ts::TablesDisplay& display, const ts::Section& section, int indent);

// Display a FooCAS EMM on the output stream.
// Compatible with ts::DisplaySectionFunction profile.
void DisplayFooCASEMM(ts::TablesDisplay& display, const ts::Section& section, int indent);

// Display the payload of a FooCAS ECM on the output stream as a one-line "log" message.
// Compatible with ts::LogSectionFunction profile.
ts::UString LogFooCASECM(const ts::Section& section, size_t max_bytes);

// Display the payload of a FooCAS EMM on the output stream as a one-line "log" message.
// Compatible with ts::LogSectionFunction profile.
ts::UString LogFooCASEMM(const ts::Section& section, size_t max_bytes);

// Display the private part of a FooCAS CA_descriptor on the output stream.
// Compatible with ts::DisplayCADescriptorFunction profile.
void DisplayFooCASCADescriptor(ts::TablesDisplay& display, const uint8_t* data, size_t size, int indent, ts::TID tid);
~~~
See the documentation for ts::DisplaySectionFunction, ts::LogSectionFunction and ts::DisplayCADescriptorFunction.

To register the display handlers in TSDuck

    bfdebug_lnbr(0);
    bfdebug_brk1(0);
    bfdebug_brk2(0);
    bfdebug_brk3(0);
    bfdebug_nhex(0, "test", 42);
    bfdebug_subnhex(0, "test", 42);
    bfdebug_nhex(0, "test", &i);
    bfdebug_subnhex(0, "test", &i);
    bfdebug_ndec(0, "test", 42);
    bfdebug_subndec(0, "test", 42);
    bfdebug_bool(0, "test", true);
    bfdebug_subbool(0, "test", true);
    bfdebug_bool(0, "test", false);
    bfdebug_subbool(0, "test", false);
    bfdebug_text(0, "test", "value");
    bfdebug_subtext(0, "test", "value");
    bfdebug_info(0, "test");
    bfdebug_pass(0, "test");
    bfdebug_subpass(0, "test");
    bfdebug_fail(0, "test");
    bfdebug_subfail(0, "test");
    bfdebug_test(0, "test", true);
    bfdebug_subtest(0, "test", true);
    bfdebug_test(0, "test", false);
    bfdebug_subtest(0, "test", false);
}

TEST_CASE("debug macros: no print")
{
    bfdebug_lnbr(1000);
    bfdebug_brk1(1000);
    bfdebug_brk2(1000);
    bfdebug_brk3(1000);
    bfdebug_nhex(1000, "test", 42);
    bfdebug_subnhex(1000, "test", 42);
    bfdebug_ndec(1000, "test", 42);
    bfdebug_subndec(1000, "test", 42);
    bfdebug_bool(1000, "test", true);
    bfdebug_subbool(1000, "test", true);
    bfdebug_bool(1000, "test", false);
    

--
-- 1.0.0 alpha 1 to 1.0.0 alpha 2 upgrade
--

INSERT INTO `config` (`name`, `value`) VALUES ('DEFAULT_HOSTMASTER', '');

ALTER TABLE `logs` ADD `username` VARCHAR( 255 ) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL AFTER `id_domain` ;

TRUNCATE TABLE `language`;

INSERT INTO `language` (`id`, `language`, `label`, `translation`) VALUES(292, 'en_us', 'username_namedmanager', 'Username');
INSERT INTO `language` (`id`, `language`, `label`, `translation`) VALUES(293, 'en_us', 'password_namedmanager', 'Password');
INSERT INTO `language` (`id`, `language`, `label`, `translation`) VALUES(294, 'en_us', 'powerdns_mysql', 'PowerDNS-compliant MySQL Database (unstable, alpha feature)');
INSERT INTO `language` (`id`, `language`, `label`, `translation`) VALUES(295, 'en_us', 'domain_records_ns_help', 'The following is a list of all the nameservers that this domain is managed by.\r\n\r\nThese are auto-populated with the domains configured in the DB, however you can add your own records if you wish to sub-delegate the domain (for example, setting internal.example.com to be handled by another name server)');
INSERT INTO `language` (`id`, `language`, `label`, `translation`) VALUES(296, 'en_us', 'domain_records_mx_help', 'Configure all the mailservers for the system here, remember that all mail will be delivered to the server with the lowest priority by default.');
INSERT INTO `language` (`id`, `language`, `label`, `translation`) VALUES(297, 'en_us', 'domain_records_custom_help', 'Configure all remaining records here - select the type from the dropdown and enter the suitable values');
INSERT INTO `language` (`id`, `language`, `label`, `translation`) VALUES(298, 'en_us', 'zone_internal', 'Use internal application SQL database');
INSERT INTO `language` (`id`, `language`, `label`, `translation`) VALUES(299,

<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>CFBundleDevelopmentRegion</key>
	<string>en</string>
	<key>CFBundleExecutable</key>
	<string>$(EXECUTABLE_NAME)</string>
	<key>CFBundleIdentifier</key>
	<string>$(PRODUCT_BUNDLE_IDENTIFIER)</string>
	<key>CFBundleInfoDictionaryVersion</key>
	<string>6.0</string>
	<key>CFBundleName</key>
	<string>$(PRODUCT_NAME)</string>
	<key>CFBundlePackageType</key>
	<string>APPL</string>
	<key>CFBundleShortVersionString</key>
	<string>1.0</string>
	<key>CFBundleSignature</key>
	<string>????</string>
	<key>CFBundleVersion</key>
	<string>1</string>
	<key>LSRequiresIPhoneOS</key>
	<true/>
	<key>UILaunchStoryboardName</key>
	<string>LaunchScreen</string>
	<key>UIMainStoryboardFile</key>
	<string>Main</string>
	<key>UIRequiredDeviceCapabilities</key>
	<array>
		<string>armv7</string>
	</array>
	<key>UISupportedInterfaceOrientations</key>
	<array>
		<string>UIInterfaceOrientationPortrait</string>
		<string>UIInterfaceOrientationLandscapeLeft</string>
		<string>UIInterfaceOrientationLandscapeRight</string>
	</array>
	<key>UISupportedInterfaceOrientations~ipad</key>
	<array>
		<string>UIInterfaceOrientationPortrait</string>
		<string>UIInterfaceOrientationPortraitUpsideDown</string>
		<string>UIInterfaceOrientationLandscapeLeft</string>
		<string>UIInterfaceOrientationLandscapeRight</

	path := r.URL.Path
	if !strings.HasPrefix(path, "/") {
		if s.protoErrorHandler != nil {
			_, outboundMarshaler := MarshalerForRequest(s, r)
			sterr := status.Error(codes.InvalidArgument, http.StatusText(http.StatusBadRequest))
			s.protoErrorHandler(ctx, s, outboundMarshaler, w, r, sterr)
		} else {
			OtherErrorHandler(w, r, http.StatusText(http.StatusBadRequest), http.StatusBadRequest)
		}
		return
	}

	components := strings.Split(path[1:], "/")
	l := len(components)
	var verb string
	if idx := strings.LastIndex(components[l-1], ":"); idx == 0 {
		if s.protoErrorHandler != nil {
			_, outboundMarshaler := MarshalerForRequest(s, r)
			s.protoErrorHandler(ctx, s, outboundMarshaler, w, r, ErrUnknownURI)
		} else {
			OtherErrorHandler(w, r, http.StatusText(http.StatusNotFound), http.StatusNotFound)
		}
		return
	} else if idx > 0 {
		c := components[l-1]
		components[l-1], verb = c[:idx], c[idx+1:]
	}

	if override := r.Header.Get("X-HTTP-Method-Override"); override != "" && s.isPathLengthFallback(r) {
		r.Method = strings.ToUpper(override)
		if err := r.ParseForm(); err != nil {
			if s.protoErrorHandler != nil {
				_, outboundMarshaler := MarshalerForRequest(s, r)
				sterr := status.Error(codes.InvalidArgument, err.Error())
				s.protoErrorHandler(ctx, s, outboundMarshaler, w, r, sterr)
			} else {
				OtherErrorHandler(w, r, err.Error(), http.StatusBadRequest)
			}
			return
		}
	}
	for _, h := range s.handlers[r.Method] {
		pathParams, err

	t.lock.RLock()
	defer t.lock.RUnlock()

	objs, ok := t.objects[gvr]
	if !ok {
		return nil, errNotFound
	}

	matchingObjs, err := filterByNamespaceAndName(objs, ns, name)
	if err != nil {
		return nil, err
	}
	if len(matchingObjs) == 0 {
		return nil, errNotFound
	}
	if len(matchingObjs) > 1 {
		return nil, fmt.Errorf("more than one object matched gvr %s, ns: %q name: %q", gvr, ns, name)
	}

	// Only one object should match in the tracker if it works
	// correctly, as Add/Update methods enforce kind/namespace/name
	// uniqueness.
	obj := matchingObjs[0].DeepCopyObject()
	if status, ok := obj.(*metav1.Status); ok {
		if status.Status != metav1.StatusSuccess {
			return nil, &errors.StatusError{ErrStatus: *status}
		}
	}

	return obj, nil
}

func (t *tracker) Add(obj runtime.Object) error {
	if meta.IsListType(obj) {
		return t.addList(obj, false)
	}
	objMeta, err := meta.Accessor(obj)
	if err != nil {
		return err
	}
	gvks, _, err := t.scheme.ObjectKinds(obj)
	if err != nil {
		return err
	}
	if len(gvks) == 0 {
		return fmt.Errorf("no registered kinds for %v", obj)
	}
	for _, gvk := range gvks {
		// NOTE: UnsafeGuessKindToResource is a heuristic and default match. The
		// actual registration in apiserver can specify arbitrary route for a
		// gvk. If a test uses such objects, it cannot preset the tracker with
		// objects via Add(). Instead, it should trigger the Create() function
		// of the tracker, where an arbitrary gvr can be specified.
		gvr, _ := meta

  if (undefined === v) {
    v = Math.min(getDecimals(n), 3);
  }

  var base = Math.pow(10, v);
  var f = ((n * base) | 0) % base;
  return {v: v, f: f};
}

$provide.value("$locale", {
  "DATETIME_FORMATS": {
    "AMPMS": [
      "Kiroko",
      "Hwa\u0129-in\u0129"
    ],
    "DAY": [
      "Kiumia",
      "Njumatat\u0169",
      "Njumaine",
      "Njumatana",
      "Aramithi",
      "Njumaa",
      "Njumamothi"
    ],
    "ERANAMES": [
      "Mbere ya Kristo",
      "Thutha wa Kristo"
    ],
    "ERAS": [
      "MK",
      "TK"
    ],
    "FIRSTDAYOFWEEK": 0,
    "MONTH": [
      "Njenuar\u0129",
      "Mwere wa ker\u0129",
      "Mwere wa gatat\u0169",
      "Mwere wa kana",
      "Mwere wa gatano",
      "Mwere wa gatandat\u0169",
      "Mwere wa m\u0169gwanja",
      "Mwere wa kanana",
      "Mwere wa kenda",
      "Mwere wa ik\u0169mi",
      "Mwere wa ik\u0169mi na \u0169mwe",
      "Ndithemba"
    ],
    "SHORTDAY": [
      "KMA",
      "NTT",
      "NMN",
      "NMT",
      "ART",
      "NMA",
      "NMM"
    ],
    "SHORTMONTH": [
      "JEN",
      "WKR",
      "WGT",
      "WKN",
      "WTN",
      "WTD",
      

{% comment %}
Comments may be long and
multiline.
{% endcomment %}
</code></pre>

	<p>Some CSS code:</p>

<pre class="item"><code>body, 
html {
  font: Tahoma, Arial, san-serif;
}

#content {
  width: 100%; /* css comment */
  height: 100%
}

p[lang=ru] {
  color: red;
}
</code></pre>

	<p>Explicit Python highlight:</p>

<pre class="item"><code class="python">for x in [1, 2, 3]:
  count(x)
</code></pre>

	<p>Disabled highlighting:</p>

<pre class="item"><code class="no-highlight">&lt;div id="contents"&gt;
  &lt;p&gt;Hello, World!
&lt;/div&gt;
</code></pre>

	<p>Normal dojo-looking code</p>

<pre class="item"><code>
dojo.provide("some.object");
dojo.declare("some.object",null,{
	param: "value",
	_myMethod: function(/* Event */e){
		this.inherited(arguments);
	},
	// comments
	_another: function(){
		dojo.addClass("foo","hovered");
	}
});
dojo.addOnLoad(function(){
	//
	// comments with &lt;HTML&gt; inline
	var d = dojo;
	d.mixin(d,{
		foo: function(e){
			d.bar(e);
		},
		bar: function(e){
			alert(e);
		}
	});
});
</code></pre>

	<p>Lazy, xhr'd code:</p>

<pre class="item"><code id="foobar"></code></pre>

<hr>

	<p>Text with inlined JavaScript code: <code class="javascript">dojo.forEach(a, function(x){ console.log(x); });</code> &mdash; that was the inlined sample.</p>

<hr

# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Content.V21.Model.PostalCodeRange do
  @moduledoc """


  ## Attributes

  *   `postalCodeRangeBegin` (*type:* `String.t`, *default:* `nil`) - A postal code or a pattern of the form `prefix*` denoting the inclusive lower bound of the range defining the area. Examples values: `"94108"`, `"9410*"`, `"9*"`. Required.
  *   `postalCodeRangeEnd` (*type:* `String.t`, *default:* `nil`) - A postal code or a pattern of the form `prefix*` denoting the inclusive upper bound of the range defining the area. It must have the same length as `postalCodeRangeBegin`: if `postalCodeRangeBegin` is a postal code then `postalCodeRangeEnd` must be a postal code too; if `postalCodeRangeBegin` is a pattern then `postalCodeRangeEnd` must be a pattern with the same prefix length. Optional: if not set, then the area is defined as being all the postal codes matching `postalCodeRangeBegin`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :postalCodeRangeBegin => String.t(),
          :postalCodeRangeEnd => String.t()
        }

  field(:postalCodeRangeBegin)
  field(:postalCodeRangeEnd)
end

defimpl Poison.Decoder, for: GoogleApi.Content.V21.Model

 char*
#ifdef KR_headers
g_xLfmt(buf, V, ndig, bufsize) char *buf; char *V; int ndig; size_t bufsize;
#else
g_xLfmt(char *buf, void *V, int ndig, size_t bufsize)
#endif
{
	static FPI fpi0 = { 64, 1-16383-64+1, 32766 - 16383 - 64 + 1, 1, 0, Int_max };
	char *b, *s, *se;
	ULong bits[2], *L, sign;
	int decpt, ex, i, mode;
#ifdef Honor_FLT_ROUNDS
#include "gdtoa_fltrnds.h"
#else
#define fpi &fpi0
#endif

	if (ndig < 0)
		ndig = 0;
	if (bufsize < (size_t)(ndig + 10))
		return 0;

	L = (ULong*)V;
	sign = L[_0] & 0x80000000L;
	bits[1] = L[_1];
	bits[0] = L[_2];
	if ( (ex = (L[_0] >> 16) & 0x7fff) !=0) {
		if (ex == 0x7fff) {
			/* Infinity or NaN */
			if (bits[0] | bits[1])
				b = strcp(buf, "NaN");
			else {
				b = buf;
				if (sign)
					*b++ = '-';
				b = strcp(b, "Infinity");
				}
			return b;
			}
		i = STRTOG_Normal;
		}
	else if (bits[0] | bits[1]) {
		i = STRTOG_Denormal;
		}
	else {
		b = buf;
#ifndef IGNORE_ZERO_SIGN
		if (sign)
			*b++ = '-';
#endif
		*b++ = '0';
		*b = 0;
		return b;
		}
	ex -= 0x3fff + 63;

    <link rel="stylesheet" type="text/css" href="../../rustdoc.css">
    <link rel="stylesheet" type="text/css" href="../../main.css">

    <link rel="shortcut icon" href="https://doc.rust-lang.org/favicon.ico">
    
</head>
<body class="rustdoc">
    <!--[if lte IE 8]>
    <div class="warning">
        This old browser is unsupported and will most likely display funky
        things.
    </div>
    <![endif]-->

    

    <nav class="sidebar">
        <a href='../../core/index.html'><img src='https://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png' alt='' width='100'></a>
        <p class='location'><a href='../index.html'>core</a>::<wbr><a href='index.html'>usize</a></p><script>window.sidebarCurrent = {name: 'MIN', ty: 'constant', relpath: ''};</script><script defer src="sidebar-items.js"></script>
    </nav>

    <nav class="sub">
        <form class="search-form js-only">
            <div class="search-container">
                <input class="search-input" name="search"
                       autocomplete="off"
                       placeholder="Click or press ‘S’ to search, ‘?’ for more options…"
                       type="search">
            </div>
        </form>
    </nav>

    <section id='main' class="content constant">
<h1 class='fqn'><span class='in-band'><a href='../index.html'>core</a>::<wbr><a href='index.html'>usize</a>::<wbr><a class='constant' href=''>MIN</a></span><span class='out-of-band'><span id='render-detail'>
            <a id="toggle-all-docs" href="javascript:void(0)" title="collapse all docs">
                [<span class='inner'>&#x2212;</span>]
            </a>
        

  // Convert samples to float and discard any channels not needed.
  for (size_t sample = 0; sample < samples_per_channel; ++sample) {
    for (size_t channel = 0; channel < num_channels; ++channel) {
      data[sample * num_channels + channel] =
          read_samples[sample * 2 + channel] / 32768.0f;
    }
  }
}

::testing::AssertionResult VerifyDeinterleavedArray(
    size_t samples_per_channel,
    size_t num_channels,
    rtc::ArrayView<const float> reference,
    rtc::ArrayView<const float> output,
    float element_error_bound) {
  // Form vectors to compare the reference to. Only the first values of the
  // outputs are compared in order not having to specify all preceeding frames
  // as testvectors.
  const size_t reference_frame_length =
      rtc::CheckedDivExact(reference.size(), num_channels);

  std::vector<float> output_to_verify;
  for (size_t channel_no = 0; channel_no < num_channels; ++channel_no) {
    output_to_verify.insert(output_to_verify.end(),
                            output.begin() + channel_no * samples_per_channel,
                            output.begin() + channel_no * samples_per_channel +
                                reference_frame_length);
  }

  return VerifyArray(reference, output_to_verify, element_error_bound);
}

::testing::AssertionResult VerifyArray(rtc::ArrayView<const float> reference,
                                       rtc::ArrayView<const float> output,
                                       float element_error_bound) {
  // The vectors are deemed to be bitexact only if
  // a) output have a size at least as long as the reference.
  // b) the samples in the reference are bitexact with the corresponding samples
  //    in the output.

  bool equal = true;
  if (output.size() < reference.size()) {
    equal = false;
  } else {
    // Compare the first samples in the vectors.

    /**
     * This field may be set by the caller before calling av_hwdevice_ctx_init().
     *
     * If non-NULL, this callback will be called when the last reference to
     * this context is unreferenced, immediately before it is freed.
     *
     * @note when other objects (e.g an AVHWFramesContext) are derived from this
     *       struct, this callback will be invoked after all such child objects
     *       are fully uninitialized and their respective destructors invoked.
     */
    void (*free)(struct AVHWDeviceContext *ctx);

    /**
     * Arbitrary user data, to be used e.g. by the free() callback.
     */
    void *user_opaque;
} AVHWDeviceContext;

typedef struct AVHWFramesInternal AVHWFramesInternal;

/**
 * This struct describes a set or pool of "hardware" frames (i.e. those with
 * data not located in normal system memory). All the frames in the pool are
 * assumed to be allocated in the same way and interchangeable.
 *
 * This struct is reference-counted with the AVBuffer mechanism and tied to a
 * given AVHWDeviceContext instance. The av_hwframe_ctx_alloc() constructor
 * yields a reference, whose data field points to the actual AVHWFramesContext
 * struct.
 */
typedef struct AVHWFramesContext {
    /**
     * A class for logging.
     */
    const AVClass *av_class;

    /**
     * Private data used internally by libavutil. Must not be accessed in any
     * way by the caller.
     */
    AVHWFramesInternal *internal;

    /**
     * A reference to the parent AVHWDeviceContext. This reference is owned and
     * managed by the enclosing AVHWFramesContext, but the caller may derive
     * additional references from it.
     */
    AVBufferRef *device_ref;

    /**
     * The parent AVHWDeviceContext. This is simply a pointer to
     * device_ref->data provided for convenience.
     *
     * Set by libavutil in av_hwframe_ctx_init().
     */
    AVHWDeviceContext *device_ctx;

    /**

    /**
     * Get the Node ID for this node
     * 
     * @return the node ID
     */
    int getId() { return id_; }

    /**
     * Get the host name for this node
     * 
     * @return the host name
     */
    const std::string& getHost() { return host_; }

    /**
     * Get the HTTP port for this node
     * 
     * @return the HTTP port
     */
    int getHttpPort() { return httpPort_; }

    /**
     * Get the socket port for this node
     * 
     * @return the socket port
     */
    int getSocketPort() { return socketPort_; }

    /**
     * Get the admin port for this node
     * 
     * @return the admin port
     */
    int getAdminPort() { return adminPort_; }

    /**
     * Return whether the node is current available in the node list.
     *
     * @return true if the node is available
     */
    bool isAvailable() { return isAvailable_; }

    /**
     * Return whether the node is current available in the node list,
     * or if its unavailable but the timeout period specified has
     * elapsed.
     *
     * @return true if the node is available
     */
    bool isAvailable(uint64_t timeout);

    /**
     * Set whether the node is available
     * 
     * @param avail true if the node is available, false otherwise
     */
    void setAvailable(bool avail);

    /**
     * Get the system time in milliseconds when this node was last
     * checked.
     *
     * @return the time in milliseconds
     */
    uint64_t getLastChecked() { return lastChecked_; }

    /**
     * Get the number of milliseconds since the last time this node
     * was checked for availability.
     *
     * @return the number of milliseconds since we last checked for
     * this node.
     */
    uint64_t getMsSinceLastChecked();

    /** 
     * Stream insertion operator for cluster 
     *
     * @param output the stream
     * @param node the node object
     * @return the stream
     */
    

100.6% CPU use with 1 MPI tasks x no OpenMP threads
Setting up Verlet run ...
  Unit style    : metal
  Current step  : 1000
  Time step     : 0.001
Memory usage per processor = 5.71082 Mbytes
Step Temp PotEng c_pe Press v_press 
    1000    1882.6735   -2084.4584   -2084.4584    13599.622   -13599.622 
    1010    1898.7487   -2084.6641   -2084.6641    13570.353   -13570.353 
    1020    1868.5335   -2081.9467   -2081.9467     13525.02    -13525.02 
    1030    1860.5253   -2080.8072   -2080.8072     13272.08    -13272.08 
    1040    1845.6781   -2079.3069   -2079.3069    13513.108   -13513.108 
    1050    1815.7592   -2076.8635   -2076.8635    13430.887   -13430.887 
    1060    1880.7221   -2080.7275   -2080.7275    12832.005   -12832.005 
    1070    1832.2297   -2077.1766   -2077.1766     12952.41    -12952.41 
    1080    1783.5932   -2073.6699   -2073.6699    13412.567   -13412.567 
    1090    1845.2786   -2077.4357   -2077.4357    12588.732   -12588.732 
    1100    1849.7687   -2077.4466   -2077.4466    12716.494   -12716.494 
Loop time of 0.311538 on 1 procs for 100 steps with 511 atoms

99.8% CPU use with 1 MPI tasks x no OpenMP threads
Setting up cg style minimization ...
  Unit style    : metal
Memory usage per processor = 6.8

<p style="position:absolute;top:141px;left:316px;white-space:nowrap" class="ft04">ility</p>
<p style="position:absolute;top:177px;left:343px;white-space:nowrap" class="ft04">64</p>
<p style="position:absolute;top:160px;left:343px;white-space:nowrap" class="ft04">-bit&#160;</p>
<p style="position:absolute;top:163px;left:539px;white-space:nowrap" class="ft03">Cause of&#160;Exception</p>
<p style="position:absolute;top:250px;left:74px;white-space:nowrap" class="ft03">Invalid Opcode, #UD</p>
<p style="position:absolute;top:226px;left:219px;white-space:nowrap" class="ft03">X</p>
<p style="position:absolute;top:226px;left:258px;white-space:nowrap" class="ft03">X</p>
<p style="position:absolute;top:226px;left:298px;white-space:nowrap" class="ft03">X</p>
<p style="position:absolute;top:226px;left:334px;white-space:nowrap" class="ft03">X</p>
<p style="position:absolute;top:226px;left:362px;white-space:nowrap" class="ft03">If&#160;CR0.EM[bit 2] = 1.</p>
<p style="position:absolute;top:250px;left:219px;white-space:nowrap" class="ft03">X</p>
<p style="position:absolute;top:250px;left:258px;white-space:nowrap" class="ft03">X</p>
<p style="position:absolute;top:250px;left:298px;white-space:nowrap" class="ft03">X</p>
<p style="position:absolute;top:250px;left:334px;white-space:nowrap" class="ft03">X

"""
Adapted from: https://pydeck.gl/gallery/h3_cluster_layer.html

Data grouped by H3 geohash, as an example of one of the geohash schemes
supported by pydeck. If you'd simply like to plot a value at an H3 hex
ID, see the H3HexagonLayer.

"""
import os

import dash
import dash_deck
import dash_html_components as html
import pydeck as pdk
import pandas as pd

mapbox_api_token = os.getenv("MAPBOX_ACCESS_TOKEN")


H3_CLUSTER_LAYER_DATA = "https://raw.githubusercontent.com/visgl/deck.gl-data/master/website/sf.h3clusters.json"  # noqa

df = pd.read_json(H3_CLUSTER_LAYER_DATA)

# Define a layer to display on a map
layer = pdk.Layer(
    "H3ClusterLayer",
    df,
    pickable=True,
    stroked=True,
    filled=True,
    extruded=False,
    get_hexagons="hexIds",
    get_fill_color="[255, (1 - mean / 500) * 255, 0]",
    get_line_color=[255, 255, 255],
    line_width_min_pixels=2,
)

# Set the viewport location
view_state = pdk.ViewState(
    latitude=37.7749295, longitude=-122.4194155, zoom=11, bearing=0, pitch=30
)


# Render
r = pdk.Deck(layers=[layer], initial_view_state=view_state)


app = dash.Dash(__name__)

app.layout = html.Div(
    dash_deck.DeckGL(
        r.to_json(),
        id="deck-gl",
        tooltip={"text": "Density: {mean}"},
        mapboxKey=mapbox_api_token,
    )
)


if __name__ == "__main__":
    app.run_server(debug=True)

#
# Internal file for GetGitRevisionDescription.cmake
#
# Requires CMake 2.6 or newer (uses the 'function' command)
#
# Obtained from https://github.com/rpavlik/cmake-modules/blob/master/GetGitRevisionDescription.cmake.in
# on August 29 2017
#
# Original Author:
# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>
# http://academic.cleardefinition.com
# Iowa State University HCI Graduate Program/VRAC
#
# Copyright Iowa State University 2009-2010.
# Distributed under the Boost Software License, Version 1.0.
# (See accompanying file LICENSE_1_0.txt or copy at
# http://www.boost.org/LICENSE_1_0.txt)

set(HEAD_HASH)

file(READ "@HEAD_FILE@" HEAD_CONTENTS LIMIT 1024)

string(STRIP "${HEAD_CONTENTS}" HEAD_CONTENTS)
if(HEAD_CONTENTS MATCHES "ref")
	# named branch
	string(REPLACE "ref: " "" HEAD_REF "${HEAD_CONTENTS}")
	if(EXISTS "@GIT_DIR@/${HEAD_REF}")
		configure_file("@GIT_DIR@/${HEAD_REF}" "@GIT_DATA@/head-ref" COPYONLY)
	else()
		configure_file("@GIT_DIR@/packed-refs" "@GIT_DATA@/packed-refs" COPYONLY)
		file(READ "@GIT_DATA@/packed-refs" PACKED_REFS)
		if(${PACKED_REFS} MATCHES "([0-9a-z]*) ${HEAD_REF}")
			set(HEAD_HASH "${CMAKE_MATCH_1}")
		endif()
	endif()
else()
	# detached HEAD
	configure_file("@GIT_DIR@/HEAD" "@GIT_DATA@/head-ref" COPYONLY)
endif()

if(NOT HEAD_HASH)
	file(READ "@GIT_DATA@/head-

  // Runs an instance of DisallowUnicodePreEventListener
  // Returns whether or not it succeeded
  private boolean runValidation(List<String> partVals) {
    try {
      msc.validatePartitionNameCharacters(partVals);
    } catch (Exception e) {
      return false;
    }

    return true;
 }

  // Sample data
  private List<String> getPartValsWithUnicode() {
    List<String> partVals = new ArrayList<>();
    partVals.add("klâwen");
    partVals.add("tägelîch");

    return partVals;
  }

  private List<String> getPartValsWithCommas() {
    List<String> partVals = new ArrayList<>();
    partVals.add("a,b");
    partVals.add("c,d,e,f");

    return partVals;
  }

  private List<String> getPartValsWithValidCharacters() {
    List<String> partVals = new ArrayList<>();
    partVals.add("part1");
    partVals.add("part2");

    return partVals;
  }

  @Test
  public void testAddPartitionWithCommas() {
    assertFalse("Add a partition with commas in name",
        runValidation(getPartValsWithCommas()));
  }

  @Test
  public void testAddPartitionWithUnicode() {
    assertFalse("Add a partition with unicode characters in name",
        runValidation(getPartValsWithUnicode()));
  }

  @Test
  public void testAddPartitionWithValidPartVal() {
    assertTrue("Add a partition with unicode characters in name",
        runValidation(getPartValsWithValidCharacters()));
  }

  @Test
  public void testAppendPartitionWithUnicode() {
    assertFalse("Append a partition with unicode characters in name",
        runValidation(getPartValsWithUnicode()));
  }

  @Test
  public void testAppendPartitionWithCommas() {
    assertFalse("Append a partition with unicode characters in name",
        runValidation(getPartValsWithCommas()));
  }

/**
 * CSSEmbed filter
 *
 * @link https://github.com/nzakas/cssembed
 * @author Maxime Thirouin <maxime.thirouin@gmail.com>
 */
class CssEmbedFilter extends BaseProcessFilter
{
    private $jarPath;
    private $javaPath;
    private $charset;
    private $mhtml; // Enable MHTML mode.
    private $mhtmlRoot; // Use <root> as the MHTML root for the file.
    private $root; // Prepends <root> to all relative URLs.
    private $skipMissing; // Don't throw an error for missing image files.
    private $maxUriLength; // Maximum length for a data URI. Defaults to 32768.
    private $maxImageSize; // Maximum image size (in bytes) to convert.

    public function __construct($jarPath, $javaPath = '/usr/bin/java')
    {
        $this->jarPath = $jarPath;
        $this->javaPath = $javaPath;
    }

    public function setCharset($charset)
    {
        $this->charset = $charset;
    }

    public function setMhtml($mhtml)
    {
        $this->mhtml = $mhtml;
    }

    public function setMhtmlRoot($mhtmlRoot)
    {
        $this->mhtmlRoot = $mhtmlRoot;
    }

    public function setRoot($root)
    {
        $this->root = $root;
    }

    public function setSkipMissing($skipMissing)
    {
        $this->skipMissing = $skipMissing;
    }

    public function setMaxUriLength($maxUriLength)
    {
        $this->maxUriLength = $maxUriLength;
    }

    public function setMaxImageSize($maxImageSize)
    {
        $this->maxImageSize = $maxImageSize;
    }

    public function filterLoad(AssetInterface $asset)
    {
    }

    public function filterDump(AssetInterface $asset)
    {
        $pb = $this->createProcessBuilder(array(
            $this->javaPath,
            '-jar',

.@{fa-css-prefix}-forumbee:before { content: @fa-var-forumbee; }
.@{fa-css-prefix}-leanpub:before { content: @fa-var-leanpub; }
.@{fa-css-prefix}-sellsy:before { content: @fa-var-sellsy; }
.@{fa-css-prefix}-shirtsinbulk:before { content: @fa-var-shirtsinbulk; }
.@{fa-css-prefix}-simplybuilt:before { content: @fa-var-simplybuilt; }
.@{fa-css-prefix}-skyatlas:before { content: @fa-var-skyatlas; }
.@{fa-css-prefix}-cart-plus:before { content: @fa-var-cart-plus; }
.@{fa-css-prefix}-cart-arrow-down:before { content: @fa-var-cart-arrow-down; }
.@{fa-css-prefix}-diamond:before { content: @fa-var-diamond; }
.@{fa-css-prefix}-ship:before { content: @fa-var-ship; }
.@{fa-css-prefix}-user-secret:before { content: @fa-var-user-secret; }
.@{fa-css-prefix}-motorcycle:before { content: @fa-var-motorcycle; }
.@{fa-css-prefix}-street-view:before { content: @fa-var-street-view; }
.@{fa-css-prefix}-heartbeat:before { content: @fa-var-heartbeat; }
.@{fa-css-prefix}-venus:before { content: @fa-var-venus; }
.@{fa-css-prefix}-mars:before { content: @fa-var-mars; }
.@{fa-css-prefix}-mercury:before { content: @fa-var-mercury; }
.@{fa-css-prefix}-intersex:before,
.@{fa-css-prefix}-transgender:before { content: @fa-var-transgender; }
.@{fa-css-prefix}-transgender-alt:before { content: @fa-var-transgender-alt

/* Flags */
#define SMB2_SESSION_REQ_FLAG_BINDING		0x01
#define SMB2_SESSION_REQ_FLAG_ENCRYPT_DATA	0x04

struct smb2_sess_setup_req {
	struct smb2_hdr hdr;
	__le16 StructureSize; /* Must be 25 */
	__u8   Flags;
	__u8   SecurityMode;
	__le32 Capabilities;
	__le32 Channel;
	__le16 SecurityBufferOffset;
	__le16 SecurityBufferLength;
	__u64 PreviousSessionId;
	__u8   Buffer[1];	/* variable length GSS security buffer */
} __packed;

/* Currently defined SessionFlags */
#define SMB2_SESSION_FLAG_IS_GUEST	0x0001
#define SMB2_SESSION_FLAG_IS_NULL	0x0002
#define SMB2_SESSION_FLAG_ENCRYPT_DATA	0x0004
struct smb2_sess_setup_rsp {
	struct smb2_hdr hdr;
	__le16 StructureSize; /* Must be 9 */
	__le16 SessionFlags;
	__le16 SecurityBufferOffset;
	__le16 SecurityBufferLength;
	__u8   Buffer[1];	/* variable length GSS security buffer */
} __packed;

struct smb2_logoff_req {
	struct smb2_hdr hdr;
	__le16 StructureSize;	/* Must be 4 */
	__le16 Reserved;
} __packed;

struct smb2_logoff_rsp {
	struct smb2_hdr hdr;
	__le16 StructureSize;	/* Must be 4 */
	__le16 Reserved;
} __packed;

/* Flags/Reserved for SMB3.1.1 */
#define SMB2_SHAREFLAG_CLUSTER_RECONNECT	0x0001

struct smb2_tree_connect_req {
	struct smb2_hdr hdr;
	__le16 StructureSize;	/* Must be 9 */
	__le16 Reserved; /* Flags in SMB3.1.1 */
	__le16

Whenever the CLI makes requests against the server (e.g. `prisma deploy`), it needs to authenticate using the same key that was stored on the Prisma server. But where does it get the key from?

You need to explicitly set the key using the `PRISMA_MANAGEMENT_API_SECRET` environment variable. The easiest way to do so is by using a [`.env`](https://www.npmjs.com/package/dotenv)-file which is automatically "understood" by the Prisma CLI.

Here is an example for a `.env`-file which defines the `my-server-secret-123` key as the `PRISMA_MANAGEMENT_API_SECRET` environment variable. This will allow the Prisma CLI to authenticate against the Prisma server it is talking to:

```
PRISMA_MANAGEMENT_API_SECRET="my-server-secret-123"
```

### Download the Prisma GraphQL schema and invoking codegen

In Prisma 1.7, the Prisma CLI is not automatically taking care of downloading the GraphQL schema (commonly called `prisma.graphql`) for the deployed Prisma API after a deployment any more. If you need the file in your project, you need to download it via a [post deployment hook](#post-deployment-hook).

Similarly, if you're using code generation that is configured via [GraphQL Config](https://github.com/graphcool/graphql-config), you also need to explicitly invoke `graphql prepare` for the code being generated.

Here is the example of a `.graphqlconfig.yml` file that specifies that:

- the Prisma GraphQL schema should be stored in a file called `generated/prisma.graphql`
- the corresponding TypeScript type definitions should be written to a file called `generated/prisma.ts`

```yml
projects:
  prisma:
    schemaPath: generated/prisma.graphql
    extensions:
      prisma: prisma.yml
      prepare-binding:
        output: generated/prisma.ts
        generator: prisma-ts
```

The corresponding post deployment hook in `prisma.yml` for downloading the schema and invoking the code generation needs to be

// Create takes the representation of a networkPolicy and creates it.  Returns the server's representation of the networkPolicy, and an error, if there is any.
func (c *networkPolicies) Create(ctx context.Context, networkPolicy *v1beta1.NetworkPolicy, opts v1.CreateOptions) (result *v1beta1.NetworkPolicy, err error) {
	result = &v1beta1.NetworkPolicy{}
	err = c.client.Post().
		Namespace(c.ns).
		Resource("networkpolicies").
		VersionedParams(&opts, scheme.ParameterCodec).
		Body(networkPolicy).
		Do(ctx).
		Into(result)
	return
}

// Update takes the representation of a networkPolicy and updates it. Returns the server's representation of the networkPolicy, and an error, if there is any.
func (c *networkPolicies) Update(ctx context.Context, networkPolicy *v1beta1.NetworkPolicy, opts v1.UpdateOptions) (result *v1beta1.NetworkPolicy, err error) {
	result = &v1beta1.NetworkPolicy{}
	err = c.client.Put().
		Namespace(c.ns).
		Resource("networkpolicies").
		Name(networkPolicy.Name).
		VersionedParams(&opts, scheme.ParameterCodec).
		Body(networkPolicy).
		Do(ctx).
		Into(result)
	return
}

// Delete takes name of the networkPolicy and deletes it. Returns an error if one occurs.
func (c *networkPolicies) Delete(ctx context.Context, name string, opts v1.DeleteOptions) error {
	return c.client.Delete().
		Namespace(c.ns).
		Resource("networkpolicies").
		Name(name).
		Body(&opts).
		Do(ctx).
		Error()
}

// DeleteCollection deletes a collection of objects.
func (c *networkPolicies) DeleteCollection(ctx context.Context, opts v1.DeleteOptions, listOpts v1.ListOptions) error {
	var timeout time.Duration
	if listOpts.TimeoutSeconds != nil {
		timeout = time.Duration(*listOpts.

function sortUnvisitedDistance(unvisitedNodes) {
  unvisitedNodes.sort((node1, node2) => node1.distance - node2.distance);
}

function updateUnvisitedNeighbors(closestNode, grid) {
  const unvisitedNeighbors = getUnvisitedNeighbors(closestNode, grid);
  for (const neighbour of unvisitedNeighbors) {
    neighbour.distance = closestNode.distance + 1;
    // iterating the distance
    neighbour.pastNode = closestNode;
    // the new node is the neighbour of the previous node
  }
}

function getUnvisitedNeighbors(node, grid) {
  const neighbours = [];
  const { colIndex, rowIndex } = node.gridId;
  // creates an object with the index of the node
  // these are all checks
  if (rowIndex > 0) neighbours.push(grid[rowIndex - 1][colIndex]);
  // if the row is not 0 then push into neighbours the node (0 indexed)
  if (rowIndex < grid.length - 1) neighbours.push(grid[rowIndex + 1][colIndex]);
  // if the row is smaller than the grid length push into neighbours the node (+1)
  if (colIndex > 0) neighbours.push(grid[rowIndex][colIndex - 1]);
  // if column is smaller than 0 push in neighbours 0 indexed
  if (colIndex < grid[0].length - 1)
    neighbours.push(grid[rowIndex][colIndex + 1]);
  // and if ????
  return neighbours.filter((neighbour) => !neighbour.visited);
  // return the neighbours that have not been visted(which ic listed in the state)
}

export function findShortestPath(endNode) {
  const shortestPath = [];
  // current node == the final node
  let thisNode = endNode;
  while (thisNode !== null) {
    // while you still have nodes
    shortestPath.unshift(thisNode);
    // push the current node into sortest path order
    thisNode = thisNode.pastNode;
    // then make the

/*
 * Copyright (c) 2001-2003 The FFmpeg Project
 *
 * This file is part of FFmpeg.
 *
 * FFmpeg is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * FFmpeg is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with FFmpeg; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
 */

/**
 * @file
 * ADPCM tables
 */

#ifndef AVCODEC_ADPCM_DATA_H
#define AVCODEC_ADPCM_DATA_H

#include <stdint.h>

static const uint8_t ff_adpcm_ima_block_sizes[4]   = {  4, 12, 4, 20 };
static const uint8_t ff_adpcm_ima_block_samples[4] = { 16, 32, 8, 32 };

extern const int8_t * const ff_adpcm_index_tables[4];
extern const int8_t  ff_adpcm_index_table[16];
extern const int16_t ff_adpcm_step_table[89];
extern const int16_t ff_adpcm_oki_step_table[49];
extern const int16_t ff_adpcm_AdaptationTable[];
extern const uint8_t ff_adpcm_AdaptCoeff1[];
extern const int8_t  ff_adpcm_AdaptCoeff2[];
extern const int16_t ff_adpcm_yamaha_indexscale[];
extern const int8_t  ff_adpcm_yamaha_difflookup[];
extern const int16_t ff_adpcm_afc

      m_solver.K (row, grc2gl (i + 0, j + 0), -4.0 * weight);
      m_solver.K (row, grc2gl (i + 0, j - 1), 1.0 * weight);
      m_solver.K (row, grc2gl (i + 0, j + 1), 1.0 * weight);
      m_solver.K (row, grc2gl (i - 1, j + 0), 1.0 * weight);
      m_solver.K (row, grc2gl (i + 1, j + 0), 1.0 * weight);

      row++;
    }
  }
}

void
FittingCylinder::addCageBoundaryRegularisation (double weight, int side, unsigned &row)
{
  int cp_red = (m_nurbs.m_order[1] - 2);
  int i = 0;
  int j = 0;

  switch (side)
  {
    case EAST:
      i = m_nurbs.m_cv_count[0] - 1;
      PCL_FALLTHROUGH
    case WEST:
      for (j = 1; j < (m_nurbs.m_cv_count[1] - 2 * cp_red) + 1; j++)
      {

        m_solver.f (row, 0, 0.0);
        m_solver.f (row, 1, 0.0);
        m_solver.f (row, 2, 0.0);

        m_solver.K (row, grc2gl (i, j + 0), -2.0 * weight);
        m_solver.K (row, grc2gl (i, j - 1), 1.0 * weight);
        m_solver.K (row, grc2gl (i, j + 1), 1.0 * weight);

        row++;
      }
      break;
  }
}

Vector2d
FittingCylinder::inverseMapping (const ON_NurbsSurface &nurbs, const Vector3d &pt, const Vector2d &hint, double &error

use FireflyIII\Exceptions\FireflyException;
use FireflyIII\Models\Account;
use FireflyIII\Models\Transaction;
use FireflyIII\Models\TransactionJournal;
use FireflyIII\Models\TransactionType;
use Illuminate\Console\Command;
use Illuminate\Support\Collection;

/**
 * Class FixTransactionTypes
 */
class FixTransactionTypes extends Command
{
    /**
     * The console command description.
     *
     * @var string
     */
    protected $description = 'Make sure all transactions are of the correct type, based on source + dest.';
    /**
     * The name and signature of the console command.
     *
     * @var string
     */
    protected $signature = 'firefly-iii:fix-transaction-types';


    /**
     * Execute the console command.
     *
     * @return int
     */
    public function handle(): int
    {
        $start    = microtime(true);
        $count    = 0;
        $journals = $this->collectJournals();
        /** @var TransactionJournal $journal */
        foreach ($journals as $journal) {
            $fixed = $this->fixJournal($journal);
            if (true === $fixed) {
                $count++;
            }
        }
        $end = round(microtime(true) - $start, 2);
        if ($count > 0) {
            $this->info(sprintf('Corrected transaction type of %d transaction journals in %s seconds.', $count, $end));

            return 0;
        }
        $this->line(sprintf('All transaction journals are of the correct transaction type (in %s seconds).', $end));

        return 0;
    }

    /**
     * @param TransactionJournal $journal
     * @param string             $expectedType
     */
    private function changeJournal(TransactionJournal $journal, string $expectedType): void
    {
        $type = TransactionType::whereType($expectedType)->first();
        if (null !== $type) {
            $journal->transaction_type_id = $type->id;
            $journal->save();
        }
    }

    /**

/***************************************************************************
** Get address of region(s) from which we can read data.
** If the region is contiguous, size2 will be zero.
** If non-contiguous, size2 will be the size of second region.
** Returns room available to be written or numBytes, whichever is smaller.
*/
static long sys_ringbuf_GetReadRegions(PA_VOLATILE sys_ringbuf *rbuf,
    long numBytes, PA_VOLATILE void **dataPtr1, long *sizePtr1,
    PA_VOLATILE void **dataPtr2, long *sizePtr2, PA_VOLATILE char *buffer)
{
    long   index;
    long   available = sys_ringbuf_getreadavailable( rbuf );
    if( numBytes > available ) numBytes = available;
    /* Check to see if read is not contiguous. */
    index = rbuf->readIndex;
    while (index >= rbuf->bufferSize)
        index -= rbuf->bufferSize;
    
    if( (index + numBytes) > rbuf->bufferSize )
    {
        /* Write data in two blocks that wrap the buffer. */
        long firstHalf = rbuf->bufferSize - index;
        *dataPtr1 = &buffer[index];
        *sizePtr1 = firstHalf;
        *dataPtr2 = &buffer[0];
        *sizePtr2 = numBytes - firstHalf;
    }
    else
    {
        *dataPtr1 = &buffer[index];
        *sizePtr1 = numBytes;
        *dataPtr2 = NULL;
        *sizePtr2 = 0;
    }
    return numBytes;
}
/***************************************************************************
*/
static long sys_ringbuf_AdvanceReadIndex(PA_VOLATILE sys_ringbuf *rbuf,
    long numBytes)
{
    long ret = (rbuf->readIndex + numBytes);
    if( ret >= 2 * rbuf->bufferSize)
        ret -= 2 * rbuf->bufferSize;
    return rbuf->readIndex = ret;
}

/***************************************************************************
** Return bytes written. */
long sys_ringbuf_write(PA_VOLATILE sys_ring

import UIKit

final class FilterCategoryHeaderView: UITableViewHeaderFooterView {
    let label = UILabel()
    private let separator = SeparatorView(color: .separator)

    override init(reuseIdentifier: String?) {
        super.init(reuseIdentifier: reuseIdentifier)

        // https://stackoverflow.com/questions/15604900/uitableviewheaderfooterview-unable-to-change-background-color
        self.backgroundView = UIView(frame: self.bounds)
        self.backgroundView?.backgroundColor = .secondarySystemBackground

        label.font = .boldSystemFont(ofSize: 22)
        label.adjustsFontSizeToFitWidth = true
        label.minimumScaleFactor = 0.2
        label.disableTranslatesAutoresizingMaskIntoConstraints()

        self.contentView.addSubview(label)
        self.contentView.addSubview(separator)

        // One each of the left and bottom constraints have to be 999 priority in order to avoid
        // pesky autolayout encapsulated height issues
        // http://aplus.rs/2017/one-solution-for-90pct-auto-layout/
        label.bottomAnchor <=> self.contentView.bottomAnchor -- 10
        let top = label.topAnchor.constraint(equalTo: self.contentView.topAnchor)
        top.priority = UILayoutPriority(rawValue: 999)
        top.constant = 20
        top.isActive = true
        let leading = label.leadingAnchor.constraint(equalTo: self.contentView.leadingAnchor)
        leading.priority = UILayoutPriority(rawValue: 1000)
        leading.constant = 10
        leading.isActive = true
        let trailing = label.trailingAnchor.constraint(equalTo: self.contentView.trailingAnchor)
        trailing.priority = UILayoutPriority(rawValue: 999)
        trailing.constant = -5
        trailing.isActive = true

        separator |= self.contentView
        separator =| self.contentView
        separator.bottomAnchor <=> self.contentView.bottomAnchor
    }

    required init?(coder aDecoder: NSCoder) {
        fatalError("

import DS from 'ember-data';
import Ember from 'ember';
const { decamelize } = Ember.String;

export default DS.JSONSerializer.extend({
  keyForAttribute: function(attr) {
    return decamelize(attr);
  },

  normalizeItems(payload) {
    if (payload.data && payload.data.keys && Array.isArray(payload.data.keys)) {
      let models = payload.data.keys.map(key => {
        let pk = this.get('primaryKey') || 'id';
        return { [pk]: key };
      });
      return models;
    }
    Ember.assign(payload, payload.data);
    delete payload.data;
    return payload;
  },

  pushPayload(store, payload) {
    const transformedPayload = this.normalizeResponse(
      store,
      store.modelFor(payload.modelName),
      payload,
      payload.id,
      'findRecord'
    );
    return store.push(transformedPayload);
  },

  normalizeResponse(store, primaryModelClass, payload, id, requestType) {
    const responseJSON = this.normalizeItems(payload, requestType);
    if (id && !responseJSON.id) {
      responseJSON.id = id;
    }
    return this._super(store, primaryModelClass, responseJSON, id, requestType);
  },

  serializeAttribute(snapshot, json, key, attributes) {
    const val = snapshot.attr(key);
    const valHasNotChanged = Ember.isNone(snapshot.changedAttributes()[key]);
    const valIsBlank = Ember.isBlank(val);
    if (attributes.options.readOnly) {
      return;
    }
    if (attributes.type === 'object' && val && Object.keys(val).length > 0 && valHasNotChanged) {
      return;
    }
    if (valIsBlank && valHasNotChanged) {
      return;
    }

    this._super(snapshot, json, key, attributes);
  },

  serializeBelongsTo(snapshot, json) {
    return

class IncrementalEncoder(codecs.IncrementalEncoder):
    def __init__(self, errors='strict'):
        codecs.IncrementalEncoder.__init__(self, errors)
        self.encoder = None

    def encode(self, input, final=False):
        if self.encoder is None:
            result = codecs.utf_16_encode(input, self.errors)[0]
            if sys.byteorder == 'little':
                self.encoder = codecs.utf_16_le_encode
            else:
                self.encoder = codecs.utf_16_be_encode
            return result
        return self.encoder(input, self.errors)[0]

    def reset(self):
        codecs.IncrementalEncoder.reset(self)
        self.encoder = None

    def getstate(self):
        # state info we return to the caller:
        # 0: stream is in natural order for this platform
        # 2: endianness hasn't been determined yet
        # (we're never writing in unnatural order)
        return (2 if self.encoder is None else 0)

    def setstate(self, state):
        if state:
            self.encoder = None
        else:
            if sys.byteorder == 'little':
                self.encoder = codecs.utf_16_le_encode
            else:
                self.encoder = codecs.utf_16_be_encode

class IncrementalDecoder(codecs.BufferedIncrementalDecoder):
    def __init__(self, errors='strict'):
        codecs.BufferedIncrementalDecoder.__init__(self, errors)
        self.decoder = None

    def _buffer_decode(self, input, errors, final):
        if self.decoder is None:
            (output, consumed, byteorder) = \
                codecs.utf_16_ex_decode(input, errors, 0, final)
            if byteorder == -1:
                self.decoder = codecs.utf_16_le_decode
            elif byteorder == 1:
                self.decoder = codecs.utf_16_be_decode
            elif consumed >= 2:
                raise UnicodeError("UTF-16 stream does not start with BOM")
            return

package websocket

import (
	"net/http"
	"reflect"
	"testing"
)

var equalASCIIFoldTests = []struct {
	t, s string
	eq   bool
}{
	{"WebSocket", "websocket", true},
	{"websocket", "WebSocket", true},
	{"Öyster", "öyster", false},
	{"WebSocket", "WetSocket", false},
}

func TestEqualASCIIFold(t *testing.T) {
	for _, tt := range equalASCIIFoldTests {
		eq := equalASCIIFold(tt.s, tt.t)
		if eq != tt.eq {
			t.Errorf("equalASCIIFold(%q, %q) = %v, want %v", tt.s, tt.t, eq, tt.eq)
		}
	}
}

var tokenListContainsValueTests = []struct {
	value string
	ok    bool
}{
	{"WebSocket", true},
	{"WEBSOCKET", true},
	{"websocket", true},
	{"websockets", false},
	{"x websocket", false},
	{"websocket x", false},
	{"other,websocket,more", true},
	{"other, websocket, more", true},
}

func TestTokenListContainsValue(t *testing.T) {
	for _, tt := range tokenListContainsValueTests {
		h := http.Header{"Upgrade": {tt.value}}
		ok := tokenListContainsValue(h, "Upgrade", "websocket")
		if ok != tt.ok {
			t.Errorf("tokenListContainsValue(h, n, %q) = %v, want %v", tt.value, ok, tt.ok)
		}
	}
}

var parseExtensionTests = []struct {
	value      string
	extensions []map[string]string
}{
	{`foo`, []map[string]string{{"": "foo"}}},
	{`foo, bar; baz=2`, []map[string]string{
		{"": "foo"},
		{"": "bar", "baz": "2"}}},

    <tr>
      <td>{{macro}}</td>

      <td>{{meaning}}</td>
    </tr>

    <tr>
      <td>{{macro}}</td>

      <td>{{meaning}}</td>
    </tr>
  </table>

  <h2><a name="lib-defined-public" id="lib-defined-public"></a>Public Library
  Defined Macros</h2>

  <p>These macros are defined by {{library}} but are expected to be used by
  application code.</p>

  <table summary="public library defined macros" cellspacing="10" width=
  "100%">
    <tr>
      <td><b>Macro</b></td>

      <td><b>Meaning</b></td>
    </tr>

    <tr>
      <td>{{macro}}</td>

      <td>{{meaning}}</td>
    </tr>

    <tr>
      <td>{{macro}}</td>

      <td>{{meaning}}</td>
    </tr>
  </table>

  <h2><a name="lib-defined-impl" id="lib-defined-impl"></a>Library Defined
  Implementation Macros</h2>

  <p>These macros are defined by {{library}} and are implementation details
  of interest only to implementers.</p>

  <table summary="library defined implementation macros" cellspacing="10"
  width="100%">
    <tr>
      <td><b>Macro</b></td>

      <td><b>Meaning</b></td>
    </tr>

    <tr>
      <td>{{macro}}</td>

      <td>{{meaning}}</td>
    </tr>

    <tr>
      <td>{{macro}}</td>

      <td>{{meaning}}</td>
    </tr>
  </table>
  <hr>

  <p><a href="http://validator.w3.org/check?uri=referer"><img border="0" src=
  "../../../doc/images/valid-html401.png" alt="Valid HTML 4.01 Transitional"
  height="31" width="88"></a></p

// String returns the string value, or the Itoa of the int value.
func (intstr *IntOrString) String() string {
	if intstr.Type == String {
		return intstr.StrVal
	}
	return strconv.Itoa(intstr.IntValue())
}

// IntValue returns the IntVal if type Int, or if
// it is a String, will attempt a conversion to int.
func (intstr *IntOrString) IntValue() int {
	if intstr.Type == String {
		i, _ := strconv.Atoi(intstr.StrVal)
		return i
	}
	return int(intstr.IntVal)
}

// MarshalJSON implements the json.Marshaller interface.
func (intstr IntOrString) MarshalJSON() ([]byte, error) {
	switch intstr.Type {
	case Int:
		return json.Marshal(intstr.IntVal)
	case String:
		return json.Marshal(intstr.StrVal)
	default:
		return []byte{}, fmt.Errorf("impossible IntOrString.Type")
	}
}

// OpenAPISchemaType is used by the kube-openapi generator when constructing
// the OpenAPI spec of this type.
//
// See: https://github.com/kubernetes/kube-openapi/tree/master/pkg/generators
func (_ IntOrString) OpenAPISchemaType() []string { return []string{"string"} }

// OpenAPISchemaFormat is used by the kube-openapi generator when constructing
// the OpenAPI spec of this type.
func (_ IntOrString) OpenAPISchemaFormat() string { return "int-or-string" }

func (intstr *IntOrString) Fuzz(c fuzz.Continue) {
	if intstr == nil {
		return
	}
	if c.RandBool() {
		intstr.Type = Int
		c.Fuzz(&intstr.IntVal)
		intstr.StrVal = ""
	} else {
		intstr.Type = String
		intstr.IntVal = 0
		c.Fuzz(&intstr.Str

	// Split line in actual name and value
	bits := TrimSplitN(line, ":", 2)
	if len(bits) < 2 {
		errhandle(fmt.Errorf("could not parse '%s' as 'key: value' string",
			line))
		return
	}

	key := strings.ToUpper(bits[0][0:1]) + bits[0][1:]
	cfg.SetValue(key, bits[1], s)
}

var FalsyValues = map[string]bool{
	"false": true,
	"False": true,
	"FALSE": true,
	"f":     true,
}

func (cfg *PageHeader) SetValue(key string, value string, s *reflect.Value) {
	// put unknown fields into a map
	if _, ok := s.Type().FieldByName(key); !ok {
		cfg.Other[Capitalize(key)] = strings.TrimSpace(value)
		return
	}

	// Set value
	f := s.FieldByName(key)
	switch typ := f.Interface().(type) {
	default:
		errhandle(fmt.Errorf("unknown type of field %s (is type '%v')", key, typ))
	case string:
		f.SetString(value)
	case bool:
		_, ok := FalsyValues[value]
		f.SetBool(!ok)
	case []string:
		values := strings.Split(value, ",")
		for i, v := range values {
			values[i] = strings.TrimSpace(v)
		}
		f.Set(reflect.ValueOf(values))
	case time.Time:
		var t time.Time
		var err error
		for _, fmt := range DATEFORMATS {
			t, err = time.Parse(fmt, value)
			if err == nil {
				break
			}
		}
		errhandle(err)
		f.Set(reflect.ValueOf(t))
	}
}

func ParseHeader(source string) *PageHeader {
	cfg := NewPageHeader()

	s := reflect.ValueOf(cfg).Elem()

	//

PassRefPtr<FilterOperation> BasicColorMatrixFilterOperation::blend(const FilterOperation* from, double progress, bool blendToPassthrough)
{
    if (from && !from->isSameType(*this))
        return this;
    
    if (blendToPassthrough)
        return BasicColorMatrixFilterOperation::create(WebCore::blend(m_amount, passthroughAmount(), progress), m_type);
        
    const BasicColorMatrixFilterOperation* fromOperation = downcast<BasicColorMatrixFilterOperation>(from);
    double fromAmount = fromOperation ? fromOperation->amount() : passthroughAmount();
    return BasicColorMatrixFilterOperation::create(WebCore::blend(fromAmount, m_amount, progress), m_type);
}

inline bool BasicColorMatrixFilterOperation::operator==(const FilterOperation& operation) const
{
    if (!isSameType(operation))
        return false;
    const BasicColorMatrixFilterOperation& other = downcast<BasicColorMatrixFilterOperation>(operation);
    return m_amount == other.m_amount;
}

double BasicColorMatrixFilterOperation::passthroughAmount() const
{
    switch (m_type) {
    case GRAYSCALE:
    case SEPIA:
    case HUE_ROTATE:
        return 0;
    case SATURATE:
        return 1;
    default:
        ASSERT_NOT_REACHED();
        return 0;
    }
}

PassRefPtr<FilterOperation> BasicComponentTransferFilterOperation::blend(const FilterOperation* from, double progress, bool blendToPassthrough)
{
    if (from && !from->isSameType(*this))
        return this;
    
    if (blendToPassthrough)
        return BasicComponentTransferFilterOperation::create(WebCore::blend(m_amount, passthroughAmount(), progress), m_type);
        
    const BasicComponentTransferFilterOperation* fromOperation = downcast<BasicComponentTransferFilterOperation>(from);
    double fromAmount = fromOperation ? fromOperation->amount() : passthroughAmount();
    return BasicComponentTransferFilterOperation::create(WebCore::bl

DESCRIPTION = "*NOTE: Only versions through v1.0.4 will work with R1.3; later versions require R1.4+*\
Controls:\
* Shutter button on the BUGcam module takes a picture ('live' mode only)\
* Hotkey 4 toggles between 'live' mode and 'review' mode\
* Hotkey 3 goes to next picture ('review' mode only)\
* Hotkey 2 goes to previous pictures ('review' mode only)\
* Hotkey 1 toggles slide show option ('review' mode only)\
\
Notes:\
The application starts in full-screen 'live' mode. Press Hotkey 4 on the BUGbase to toggle between 'live' mode, which is where you take pictures, and 'review' mode, which is where you can look at the pictures you have taken.\
Images are saved to the application's bundle directory on the MMC/SD card : @/usr/share/java/storage/default/something/data/*.jpg@; you can do @find /usr/share/java/storage -name \*.jpg@ from a shell on your BUG to locate them.\
Images are preserved on the MMC/SD card even when your BUG is powered off, but they will be *lost* if you download a new version of the Camera application, so be sure to copy them off your BUG before upgrading Camera.\
EXIF data is saved to each image for the following fields:\
* Manufacturer (_Bug Labs_)\
* Model (_BUGcam2MP_)\
* Image Width (_1600_)\
* Image Height (_1200_)\
* Timestamp. You will need to set the time on your BUG for this to be correct; see the @date@ and @hwclock@ commands._\
* Geotagging data, if your BUGlocate has a fix.\
If you want more details on exactly which EXIF fields are set, or want to add more or remove some, look at the @ExifDataHandler@ class.\
*All pictures will include geotagging EXIF data if your BUGlocate has a fix.* Please bear this in mind when uploading images to photo sharing sites. If you don't ever want geodata, you can remove the @ExifDataHandler.addGpsInfo@ method and all references to the @IPositionProvider@ service. This is why

	/* delim will point to queue id if successful */
	delim = strchr(newval->string, ':');
	if (!delim)
		goto err_no_cmd;

	/* Terminate string that points to device name and bump it
	 * up one, so we can read the queue id there.
	 */
	*delim = '\0';
	if (sscanf(++delim, "%hd\n", &qid) != 1)
		goto err_no_cmd;

	/* Check buffer length, valid ifname and queue id */
	if (!dev_valid_name(newval->string) ||
	    qid > bond->dev->real_num_tx_queues)
		goto err_no_cmd;

	/* Get the pointer to that interface if it exists */
	sdev = __dev_get_by_name(dev_net(bond->dev), newval->string);
	if (!sdev)
		goto err_no_cmd;

	/* Search for thes slave and check for duplicate qids */
	update_slave = NULL;
	bond_for_each_slave(bond, slave, iter) {
		if (sdev == slave->dev)
			/* We don't need to check the matching
			 * slave for dups, since we're overwriting it
			 */
			update_slave = slave;
		else if (qid && qid == slave->queue_id) {
			goto err_no_cmd;
		}
	}

	if (!update_slave)
		goto err_no_cmd;

	/* Actually set the qids for the slave */
	update_slave->queue_id = qid;

out:
	return ret;

err_no_cmd:
	netdev_info(bond->dev, "invalid input for queue_id set\n");
	ret = -EPERM;
	goto out;

}

static int bond_option_slaves_set(struct bonding *bond,
				  const struct bond_opt_value *newval)
{
	char command[IFNAMSIZ + 1] = { 0, };
	struct net_device *dev;
	char *ifname;
	int ret;

	

def get_contents(filename):
    with open(filename, 'rb') as f:
        return f.read()


class FormParserTestCase(WerkzeugTestCase):

    def test_limiting(self):
        data = b'foo=Hello+World&bar=baz'
        req = Request.from_values(input_stream=BytesIO(data),
                                  content_length=len(data),
                                  content_type='application/x-www-form-urlencoded',
                                  method='POST')
        req.max_content_length = 400
        self.assert_strict_equal(req.form['foo'], u'Hello World')

        req = Request.from_values(input_stream=BytesIO(data),
                                  content_length=len(data),
                                  content_type='application/x-www-form-urlencoded',
                                  method='POST')
        req.max_form_memory_size = 7
        self.assert_raises(RequestEntityTooLarge, lambda: req.form['foo'])

        req = Request.from_values(input_stream=BytesIO(data),
                                  content_length=len(data),
                                  content_type='application/x-www-form-urlencoded',
                                  method='POST')
        req.max_form_memory_size = 400
        self.assert_strict_equal(req.form['foo'], u'Hello World')

        data = (b'--foo\r\nContent-Disposition: form-field; name=foo\r\n\r\n'
                b'Hello World\r\n'
                b'--foo\r\nContent-Disposition: form-field; name=bar\r\n\r\n'
                b'bar=baz\r\n--foo--')
        req = Request.from_values(input_stream=BytesIO(data),
                                  content_length=len(data),
                                  content_type='multipart/form-data; boundary=foo',
                                  method='POST')
        req.max_content_length = 4
        self.assert_raises(RequestEntityTooLarge, lambda: req.form['foo'])

        

# Sanity check that the right tools are accessible.
for tool in go git protoc protoc-gen-go; do
  q=$(which $tool) || die "didn't find $tool"
  echo 1>&2 "$tool: $q"
done

tmpdir=$(mktemp -d -t regen-cbt.XXXXXX)
trap 'rm -rf $tmpdir' EXIT

echo -n 1>&2 "finding package dir... "
pkgdir=$(go list -f '{{.Dir}}' $PKG)
echo 1>&2 $pkgdir
base=$(echo $pkgdir | sed "s,/$PKG\$,,")
echo 1>&2 "base: $base"
cd $base

echo 1>&2 "fetching latest protos... "
git clone -q $UPSTREAM $tmpdir
# Pass 1: build mapping from upstream filename to our filename.
declare -A filename_map
for f in $(cd $PKG && find internal -name '*.proto'); do
  echo -n 1>&2 "looking for latest version of $f... "
  up=$(cd $tmpdir/$UPSTREAM_SUBDIR && find * -name $(basename $f))
  echo 1>&2 $up
  if [ $(echo $up | wc -w) != "1" ]; then
    die "not exactly one match"
  fi
  filename_map[$up]=$f
done
# Pass 2: build sed script for fixing imports.
import_fixes=$tmpdir/fix_imports.sed
for up in "${!filename_map[@]}"; do
  f=${filename_map[$up]}
  echo >>$import_fixes "s,\"$up\",\"$PKG/$f\","
done
cat $import_fixes | sed 's,^,### ,' 1>&2
# Pass 3: copy files, making necessary adjustments.
for up in "${!filename_map[@]}"; do
  f=${filename_map[$up]}
  cat $tmpdir/$UPSTREAM_SUBDIR/$up |
    # Adjust proto imports.
    sed -f $import_fixes |
    # Drop the UndeleteCluster RPC method. It returns a google.longrunning.Operation.


	<dependencyManagement>
		<dependencies>
			<!-- internal -->

			<dependency>
				<groupId>com.github.tillerino</groupId>
				<artifactId>osu-api-connector</artifactId>
				<version>0.15.0</version>
				<exclusions>
					<!-- replaced with spotbugs jar -->
					<exclusion>
						<groupId>com.google.code.findbugs</groupId>
						<artifactId>annotations</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.tillerino.osu</groupId>
				<artifactId>tillerinobot-model</artifactId>
				<version>0.20.0</version>
			</dependency>
			<dependency>
				<groupId>org.tillerino.osu</groupId>
				<artifactId>tillerinobot-model</artifactId>
				<classifier>tests</classifier>
				<version>0.20.0</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.tillerino.osu</groupId>
				<artifactId>tillerinobot-live</artifactId>
				<version>0.20.0</version>
			</dependency>
			<dependency>
				<groupId>org.tillerino.osu</groupId>
				<artifactId>tillerinobot-rabbit</artifactId>
				<version>0.20.0</version>
			</dependency>
			<dependency>
				<groupId>org.tillerino.osu</groupId>
				<artifactId>tillerinobot-live</artifactId>
				<classifier>tests</classifier>
				<version>0.20.0</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.tillerino.osu</groupId>
				<artifactId>tillerinobot-irc</artifactId>
				<version>0.20.0</version>
			</dependency>
			<dependency>
				<groupId>org.tillerino.osu</groupId>
				

    "com.unity.modules.animation": "1.0.0",
    "com.unity.modules.assetbundle": "1.0.0",
    "com.unity.modules.audio": "1.0.0",
    "com.unity.modules.cloth": "1.0.0",
    "com.unity.modules.director": "1.0.0",
    "com.unity.modules.imageconversion": "1.0.0",
    "com.unity.modules.imgui": "1.0.0",
    "com.unity.modules.jsonserialize": "1.0.0",
    "com.unity.modules.particlesystem": "1.0.0",
    "com.unity.modules.physics": "1.0.0",
    "com.unity.modules.physics2d": "1.0.0",
    "com.unity.modules.screencapture": "1.0.0",
    "com.unity.modules.terrain": "1.0.0",
    "com.unity.modules.terrainphysics": "1.0.0",
    "com.unity.modules.tilemap": "1.0.0",
    "com.unity.modules.ui": "1.0.0",
    "com.unity.modules.uielements": "1.0.0",
    "com.unity.modules.umbra": "1.0.0",
    "com.unity.modules.unityanalytics": "1.0.0",
    "com.unity.modules.unitywebrequest": "1.0.0",
    "com.unity.modules.unitywebrequestassetbundle": "1.0.0",
    "com.unity.modules.unitywebrequestaudio": "1.0.0",
    "com.unity.modules.unitywebrequesttexture": "1.0.0",
    "com.unity.modules.unitywebrequestwww": "1.0.0",
    "com.unity.modules.vehicles": "1.0.0",
    "com.unity.modules.video": "1.0.0",
    "com.

import (
	"fmt"
	"testing"
)

var testItemsets1src = `
a : '0'- '6' '0';
b : '4'-'9' '9';
c : '5' 'a' ;
`

var testItemSets1Data = []*itemSetTestData{
	{
		CharRange: CharRange{'0', '3'},
		itemSet:   []string{"a :  '0'-'6' • '0'"},
	},
	{
		CharRange: CharRange{'4', '4'},
		itemSet:   []string{"a :  '0'-'6' • '0'", "b :  '4'-'9' • '9'"},
	},
	{
		CharRange: CharRange{'5', '5'},
		itemSet:   []string{"a :  '0'-'6' • '0'", "b :  '4'-'9' • '9'", "c : '5' • 'a'"},
	},
	{
		CharRange: CharRange{'6', '6'},
		itemSet:   []string{"a :  '0'-'6' • '0'", "b :  '4'-'9' • '9'"},
	},
	{
		CharRange: CharRange{'7', '9'},
		itemSet:   []string{"b :  '4'-'9' • '9'"},
	},
}

// func TestItemSets1(t *testing.T) {
// 	g := parse(testItemsets1src, t)
// 	symbols := symbols.NewSymbols(g.LexPart)
// 	s0 := NewItemSet(0, g.LexPart, ItemsSet0(g.LexPart, symbols))
// 	for _, data := range testItemSets1Data {
// 		s1 := NewItemSet(1, g.LexPart, s0.Next(data.CharRange))
// 		checkItemsetResult(t, s1, data)
// 	}
// }

var testItemsets2src = `
<< import "unicode" >>

import(


		MESSAGE_BEGIN( MSG_PVS, SVC_TEMPENTITY, vecSrc );
			WRITE_BYTE( TE_SMOKE );
			WRITE_COORD( vecSrc.x );
			WRITE_COORD( vecSrc.y );
			WRITE_COORD( vecSrc.z );
			WRITE_SHORT( g_sModelIndexSmoke );
			WRITE_BYTE( RANDOM_LONG(0,9) + 20 ); // scale * 10
			WRITE_BYTE( 12 ); // framerate
		MESSAGE_END();
		if (m_iDoLeftSmokePuff > 0)
			m_iDoLeftSmokePuff--;
	}
	if (m_iDoRightSmokePuff > 0 || RANDOM_LONG(0,99) > m_flRightHealth)
	{
		Vector vecSrc = pev->origin + gpGlobals->v_right * 340;
		MESSAGE_BEGIN( MSG_PVS, SVC_TEMPENTITY, vecSrc );
			WRITE_BYTE( TE_SMOKE );
			WRITE_COORD( vecSrc.x );
			WRITE_COORD( vecSrc.y );
			WRITE_COORD( vecSrc.z );
			WRITE_SHORT( g_sModelIndexSmoke );
			WRITE_BYTE( RANDOM_LONG(0,9) + 20 ); // scale * 10
			WRITE_BYTE( 12 ); // framerate
		MESSAGE_END();
		if (m_iDoRightSmokePuff > 0)
			m_iDoRightSmokePuff--;
	}
}


void COsprey::TraceAttack( entvars_t *pevAttacker, float flDamage, Vector vecDir, TraceResult *ptr, int bitsDamageType)
{
	// ALERT( at_console, "%d %.0f\n", ptr->iHitgroup, flDamage );

	// only so much per engine
	if (ptr->iHitgroup == 3)
	{
		if (m_flRightHealth < 0)
			return;
		else
			m_flRightHealth -= flDamage;
		m_iDoLeftSmokePuff = 3

//
// detail/impl/timer_queue_ptime.ipp
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Copyright (c) 2003-2016 Christopher M. Kohlhoff (chris at kohlhoff dot com)
//
// Distributed under the Boost Software License, Version 1.0. (See accompanying
// file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
//

#ifndef ASIO_DETAIL_IMPL_TIMER_QUEUE_PTIME_IPP
#define ASIO_DETAIL_IMPL_TIMER_QUEUE_PTIME_IPP

#if defined(_MSC_VER) && (_MSC_VER >= 1200)
# pragma once
#endif // defined(_MSC_VER) && (_MSC_VER >= 1200)

#include "asio/detail/config.hpp"
#include "asio/detail/timer_queue_ptime.hpp"

#include "asio/detail/push_options.hpp"

#if defined(ASIO_HAS_BOOST_DATE_TIME)

namespace asio {
namespace detail {

timer_queue<time_traits<boost::posix_time::ptime> >::timer_queue()
{
}

timer_queue<time_traits<boost::posix_time::ptime> >::~timer_queue()
{
}

bool timer_queue<time_traits<boost::posix_time::ptime> >::enqueue_timer(
    const time_type& time, per_timer_data& timer, wait_op* op)
{
  return impl_.enqueue_timer(time, timer, op);
}

bool timer_queue<time_traits<boost::posix_time::ptime> >::empty() const
{
  return impl_.empty();
}

long timer_queue<time_traits<boost::posix_time::ptime> >::wait_duration_msec(
    long max_duration) const
{
  return impl_.wait_duration_msec(max_duration);
}

long timer_queue<time_traits<boost::posix_time::ptime> >::wait_duration_usec

//
//  This program is free software: you can redistribute it and/or modify
//  it under the terms of the GNU Lesser General Public License as published by
//  the Free Software Foundation, either version 3 of the License, or
//  (at your option) any later version.
//
//  This program is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//  GNU Lesser General Public License for more details.
//
//  You should have received a copy of the GNU Lesser General Public License
//  along with this program.  If not, see <http://www.gnu.org/licenses/>.
//------------------------------------------------------------------------------{
// See https://go.microsoft.com/fwlink/?LinkId=733558
// for the documentation about the tasks.json format
{
      "version": "0.1.0"
   ,  "command": "make"
   ,  "isShellCommand": true
   ,  "args": []
   ,  "showOutput": "always"
   ,  "suppressTaskName": true
   ,  "tasks": [ 
         {
               "taskName": "make"
            ,  "args": []
            ,  "isBuildCommand": true
            ,  "problemMatcher": {
                     "owner": "base"
                  ,  "fileLocation": ["relative", "${workspaceRoot}"]
                  ,  "pattern": {
                        "regexp": "^(.*):(\\d+):\\s+(warning|error|syntax error)[^:]*:\\s+(.*)$"
                     ,  "file": 1
                     ,  "line": 2
                     ,  "severity": 3
                     ,  "message": 4
                     }
                 }
         }
      ,  {
               "taskName": "clean"
            ,  "args": ["clean"]
         }
      ,  {
               "taskName": "cleanall"
            ,  "args": ["cleanall"]
         }
      ,  {
               "taskName": "run"
            ,  "command": "cpct_winape"
            ,  "args": [

# Make sure Windows processes exit cleanly
OLD_CWD = os.getcwd()
atexit.register(lambda: os.chdir(OLD_CWD))
os.chdir(TEST_DIR.name)

def close_open_files():
    everything = gc.get_objects()
    for obj in everything:
        if isinstance(obj, io.IOBase):
            obj.close()

atexit.register(close_open_files)


# Example 1
class InputData:
    def read(self):
        raise NotImplementedError


# Example 2
class PathInputData(InputData):
    def __init__(self, path):
        super().__init__()
        self.path = path

    def read(self):
        with open(self.path) as f:
            return f.read()


# Example 3
class Worker:
    def __init__(self, input_data):
        self.input_data = input_data
        self.result = None

    def map(self):
        raise NotImplementedError

    def reduce(self, other):
        raise NotImplementedError


# Example 4
class LineCountWorker(Worker):
    def map(self):
        data = self.input_data.read()
        self.result = data.count('\n')

    def reduce(self, other):
        self.result += other.result


# Example 5
import os

def generate_inputs(data_dir):
    for name in os.listdir(data_dir):
        yield PathInputData(os.path.join(data_dir, name))


# Example 6
def create_workers(input_list):
    workers = []
    for input_data in input_list:
        workers.append(LineCountWorker(input_data))
    return workers


# Example 7
from threading import Thread

def execute(workers):
    threads = [Thread(target=w.map) for w in workers]
    for thread in threads: thread.start()
    for thread in threads: thread.join()

    first, *rest = workers
    for worker in rest:
        first.reduce(worker)

/*
 * Copyright 2011 Martin Grotzke
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package de.javakaffee.web.msm;

import static org.testng.Assert.assertEquals;

import java.util.concurrent.ExecutionException;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;

/**
 * Unit test for {@link MemcachedBackupSession}.
 *
 * @author @author <a href="mailto:martin.grotzke@javakaffee.de">Martin Grotzke</a>
 */
public class MemcachedBackupSessionTest {

    private MemcachedBackupSession cut;
    private ExecutorService executor;
    private ExecutorService alternateExecutor;

    @BeforeMethod
    public void beforeMethod() {
        cut = new MemcachedBackupSession();
        executor = Executors.newCachedThreadPool();
        alternateExecutor = Executors.newCachedThreadPool();
    }

    @AfterMethod
    public void afterMethod() {
        executor.shutdown();
        alternateExecutor.shutdown();
    }

    @Test
    public void testRefCount() throws InterruptedException, ExecutionException {
        assertEquals(cut.getRefCount(), 0);
        cut.registerReference();
        assertEquals(cut.getRefCount(), 1);
        assertEquals(cut.getRefCount(), 1);
        cut.releaseReference();
        assertEquals(cut.getRefCount(), 0);

        

/* Threshhold for punting to the bytewise iterator.  */
#define TOO_SMALL(LEN)  ((LEN) < LBLOCKSIZE)

#if LONG_MAX == 2147483647L
#define DETECTNULL(X) (((X) - 0x01010101) & ~(X) & 0x80808080)
#else
#if LONG_MAX == 9223372036854775807L
/* Nonzero if X (a long int) contains a NULL byte. */
#define DETECTNULL(X) (((X) - 0x0101010101010101) & ~(X) & 0x8080808080808080)
#else
#error long int is not a 32bit or 64bit type.
#endif
#endif

#ifndef DETECTNULL
#error long int is not a 32bit or 64bit byte
#endif

/* DETECTCHAR returns nonzero if (long)X contains the byte used
   to fill (long)MASK. */
#define DETECTCHAR(X,MASK) (DETECTNULL(X ^ MASK))

LIBC_ROM_TEXT_SECTION
_LONG_CALL_ 
void * _memchr(const void * src_void , int c , size_t length)
{
  const unsigned char *src = (const unsigned char *) src_void;
  unsigned char d = c;

#if !defined(PREFER_SIZE_OVER_SPEED)
  unsigned long *asrc;
  unsigned long  mask;
  u32 i;

  while (UNALIGNED (src))
    {
      if (!length--)
        return NULL;
      if (*src == d)
        return (void *) src;
      src++;
    }

  if (!TOO_SMALL (length))
    {
      /* If we get this far, we know that length is large and src is
         word-aligned. */
      /* The fast code reads the source one word at a time and only
         performs the bytewise search on word-sized segments if they
         contain the search character, which is detected by XORing
         the word-sized segment with a word-sized block of the search
         character and then detecting for the presence of NUL in the

```sig
game.askForString("")
```

## Concept: Names

Saving user input in variables is useful, as it allows the values the user inputs
into the game to continue to exist - rather than just being ignored.

## Example #1: Storing Your Data

1. Review the code below
2. Identify what **type** of value is returned by ``||game:game.askForString||``
3. Identify what ``"Give me data!"`` in the function call does

```typescript
let userInput: string = game.askForString("Give me data!");
```

The ``||game:game.askForString||`` function prompts the user to input a string
with the phrase "Give me data!", and then the response the user gives is stored
in the variable ``||variables:userInput||`` as a ``||text:string||``.

## Student Task #1: Say my Name

1. Start with the code from example #1
2. Change the **prompt** to ask the user for their name (``"What is your name?"``)
3. After asking for their name, use ``||game:game.splash||`` to display their name
4. Add a short message to the ``||game:game.splash||`` to appear before
the name (``"hello, "``)
5. **Challenge:** ``||game:ask||`` the user for their favorite color.
Respond with a ``||game:game.splash||`` that repeats their favorite color back to them

## Example #2: Immediate Responses

![Animation of user inputting favorite food](/static/courses/csintro3/intro/ask-for-food.gif)

1. Review the code below
2. Identify how the response from ``||game:game.askForString||`` is used
3. Identify whether the response from the user is available to be used
again after the ``||game:game.splash||``

```typescript
game.splash("I like " + game.askForString("What food do you like?"));
```

In the above example, the response of ``||game:game.askForString||``
is used **without** storing the result in

#ifdef XRGAME_EXPORTS
	CScriptProcess* sp = ai().script_engine().script_process(ScriptEngine::eScriptProcessorGame);

	if (sp)
		res += FillFrom(sp);
	
	sp = ai().script_engine().script_process(ScriptEngine::eScriptProcessorLevel);
	if (sp)
		res += FillFrom(sp);

	return res;
#else
	return res;
#endif
}

u32 CDbgScriptThreads::FillFrom(CScriptProcess* sp)
{
	m_threads.clear();
	const CScriptProcess::SCRIPT_REGISTRY &vScripts = 	sp->scripts();
	CScriptProcess::SCRIPT_REGISTRY::const_iterator It = vScripts.begin();
	for(;It!=vScripts.end(); ++It){
		SScriptThread th;
//		th.pScript		= (*It);
		th.lua			= (*It)->lua();
		th.scriptID		= (*It)->thread_reference();
		th.active		= (*It)->active();
		strcat			(th.name, *(*It)->script_name());
		strcat			(th.process, *sp->name());
		m_threads.push_back(th);
	}
	return m_threads.size();
}

lua_State* CDbgScriptThreads::FindScript(int nThreadID)
{
	xr_vector<SScriptThread>::iterator It = m_threads.begin();
	for(;It!=m_threads.end();++It){
		if( (*It).scriptID == nThreadID )
			return (*It).lua;
	}
	return 0;
}

void  CDbgScriptThreads::DrawThreads()
{
	//CScriptDebugger::GetDebugger()->ClearThreads();
	m_debugger->ClearThreads();
	xr_vector<SScriptThread>::iterator It = m_threads.begin();
	for(;It!=m_threads.end();++It){
		SScriptThread th;
		th = *It;
		m_debugger->

// Code generated by protoc-gen-go.
// source: google.golang.org/appengine/internal/remote_api/remote_api.proto
// DO NOT EDIT!

/*
Package remote_api is a generated protocol buffer package.

It is generated from these files:
	google.golang.org/appengine/internal/remote_api/remote_api.proto

It has these top-level messages:
	Request
	ApplicationError
	RpcError
	Response
*/
package remote_api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type RpcError_ErrorCode int32

const (
	RpcError_UNKNOWN             RpcError_ErrorCode = 0
	RpcError_CALL_NOT_FOUND      RpcError_ErrorCode = 1
	RpcError_PARSE_ERROR         RpcError_ErrorCode = 2
	RpcError_SECURITY_VIOLATION  RpcError_ErrorCode = 3
	RpcError_OVER_QUOTA          RpcError_ErrorCode = 4
	RpcError_REQUEST_TOO_LARGE   RpcError_ErrorCode = 5
	RpcError_CAPABILITY_DISABLED RpcError_ErrorCode = 6
	RpcError_FEATURE_DISABLED    RpcError_ErrorCode = 7
	RpcError_BAD_REQUEST         RpcError_ErrorCode = 8
	RpcError_RESPONSE_TOO_LARGE  RpcError_ErrorCode = 9
	RpcError_CANCELLED           RpcError_ErrorCode = 10
	RpcError_REPLAY_ERROR        RpcError_ErrorCode = 11
	RpcError_DEADLINE_EXCEEDED   RpcError_ErrorCode = 12
)

var RpcError_ErrorCode_name = map[int32]string{
	0:  "UNKNOWN",
	1:  "CALL_NOT_FOUND",
	2:  

  // For reading from/writing to the CDS archive
  void serialize(SerializeClosure* soc);

  uintx base_address() {
    return (uintx) _base_address;
  }
};

////////////////////////////////////////////////////////////////////////
//
// Read/Write the contents of a hashtable textual dump (created by
// SymbolTable::dump and StringTable::dump).
// Because the dump file may be big (hundred of MB in extreme cases),
// we use mmap for fast access when reading it.
//
class HashtableTextDump {
  int _fd;
  const char* _base;
  const char* _p;
  const char* _end;
  const char* _filename;
  size_t      _size;
  int         _prefix_type;
  int         _line_no;
public:
  HashtableTextDump(const char* filename);
  ~HashtableTextDump();

  enum {
    SymbolPrefix = 1 << 0,
    StringPrefix = 1 << 1,
    Unknown = 1 << 2
  };

  void quit(const char* err, const char* msg);

  inline int remain() {
    return (int)(_end - _p);
  }

  void corrupted(const char *p, const char *msg);

  inline void corrupted_if(bool cond, const char *msg) {
    if (cond) {
      corrupted(_p, msg);
    }
  }

  bool skip_newline();
  int skip(char must_be_char);
  void skip_past(char c);
  void check_version(const char* ver);

  inline void get_num(char delim, int *num) {
    const char* p   = _p;
    const char* end = _end;
    u8 n = 0;

    while (p < end) {
      char c = *p++;
      if ('0' <= c && c <= '9') {
        n = n * 10 + (c - '0');
        if (n > (u8)INT_MAX) {
          corrupted(_p, "Num overflow");
        }
      } else if (c

<div class="jumbotron">
    <h1>SNS Support</h1>

    <p>This showcase demonstrates the main features provided by the SNS support in Spring Cloud AWS.</p>

    <p><a href="http://cloud.spring.io/spring-cloud-aws/spring-cloud-aws.html#_sns_support" target="_blank" class="btn btn-primary btn-lg" role="button">Learn more »</a></p>
</div>
<div class="panel panel-primary" ng-controller="SnsCtrl as sns">
    <div class="panel-heading">
        <h3 class="panel-title">SNS Support</h3>
    </div>
    <div class="panel-body">
        <form class="form-horizontal" role="form" name="topicForm">
            <div class="form-group">
                <label for="subject" class="col-sm-2 control-label">Subject</label>

                <div class="col-sm-10">
                    <input type="text" class="form-control" id="subject" placeholder="Subject..."
                           ng-model="sns.model.subject" required>
                </div>
            </div>
            <div class="form-group">
                <label for="message" class="col-sm-2 control-label">Message</label>

                <div class="col-sm-10">
                    <input type="text" class="form-control" id="message" placeholder="Message..."
                           ng-model="sns.model.message" required>
                </div>
            </div>
            <div class="form-group">
                <div class="col-sm-offset-2 col-sm-10">
                    <button ng-click="sns.send()" class="btn btn-default" ng-disabled="topicForm.$invalid">Send</button>
                </div>
            </div>
        </form>
        <div class="row">
            <table class="table table-striped table-condensed" ng-show="sns.responses.length > 0">
                <thead>
                <tr>
                    <th>Received

<html>
<head>
    <meta charset="utf-8" />
    <title></title>
    <link href="../../assets/lib/layui/css/layui.css" rel="stylesheet" />
    <link href="../../assets/lib/font-awesome-4.7.0/css/font-awesome.css" rel="stylesheet" />
    <link href="../../assets/lib/winui/css/winui.css" rel="stylesheet" />
    <link href="../../assets/lib/layui/css/codemirror.css" rel="stylesheet" />
</head>
<body>
    <div class="winui-toolbar">
        <div class="winui-tool">
            <button id="reloadTable" class="winui-toolbtn"><i class="fa fa-refresh" aria-hidden="true"></i>刷新数据</button>
            <button id="addBean" class="winui-toolbtn"><i class="fa fa-plus" aria-hidden="true"></i>绘制流程</button>
        </div>
    </div>
    
    <div style="margin:auto 10px;">
        <table id="messageTable" lay-filter="messageTable"></table>
        <script type="text/html" id="tableBar">
			{{# if(isNull(d.deploymentId)){ }}
				<a class="layui-btn layui-btn-xs" lay-event="edit">编辑</a>
				<a class="layui-btn layui-btn-danger layui-btn-xs" lay-event="del">删除</a>
				<a class="layui-btn layui-btn-normal layui-btn-xs" lay-event="fb">发布</a>
			{{# } }}
        </script>
    </div>
    <script src="../../assets/lib/layui/layui.js"></script>
    <script src="../../assets/lib/layui/custom.js"></script>
    <script type="text/javascript">
        layui.config({base: '../../js/activitimodel/'}).use('activitimodell

//sys	accept(s int, rsa *RawSockaddrAny, addrlen *_Socklen) (fd int, err error)
//sys	accept4(s int, rsa *RawSockaddrAny, addrlen *_Socklen, flags int) (fd int, err error)
//sys	bind(s int, addr unsafe.Pointer, addrlen _Socklen) (err error)
//sys	connect(s int, addr unsafe.Pointer, addrlen _Socklen) (err error)
//sysnb	getgroups(n int, list *_Gid_t) (nn int, err error)
//sysnb	setgroups(n int, list *_Gid_t) (err error)
//sys	getsockopt(s int, level int, name int, val unsafe.Pointer, vallen *_Socklen) (err error)
//sys	setsockopt(s int, level int, name int, val unsafe.Pointer, vallen uintptr) (err error)
//sysnb	socket(domain int, typ int, proto int) (fd int, err error)
//sysnb	socketpair(domain int, typ int, proto int, fd *[2]int32) (err error)
//sysnb	getpeername(fd int, rsa *RawSockaddrAny, addrlen *_Socklen) (err error)
//sysnb	getsockname(fd int, rsa *RawSockaddrAny, addrlen *_Socklen) (err error)
//sys	recvfrom(fd int, p []byte, flags int, from *RawSockaddrAny, fromlen *_Socklen) (n int, err error)
//sys	sendto(s int, buf []byte, flags int, to unsafe.Pointer, addrlen _Socklen) (err error)
//sys	recvmsg(s int, msg *Msghdr, flags int) (n int, err error)
//sys	sendmsg(s int, msg *Msghdr, flags int) (n int, err error)
//sys	mmap(addr uintptr, length uintptr, prot int, flags int, fd int, offset int64) (xaddr uintptr, err error)

//sysnb	Gettimeofday(tv *Timeval) (err error)

func setTimespec

--
-- The Computer Language Benchmarks Game
-- https://salsa.debian.org/benchmarksgame-team/benchmarksgame/
--
-- Contributed by Don Stewart
-- Basic parallelization by Roman Kashitsyn
-- Tail call optimizations by Izaak Weiss
--

import System.Environment
import Data.Bits
import Text.Printf
import Control.Parallel.Strategies

--
-- an artificially strict tree. 
--
-- normally you would ensure the branches are lazy, but this benchmark
-- requires strict allocation.
--
data Tree = Nil | Node !Tree !Tree

minN = 4

io s n t = printf "%s of depth %d\t check: %d\n" s n t

main = do
    n <- getArgs >>= readIO . head
    let maxN     = max (minN + 2) n
        stretchN = maxN + 1

    -- stretch memory tree
    let c = check (make stretchN)
    io "stretch tree" stretchN c

    -- allocate a long lived tree
    let !long    = make maxN

    -- allocate, walk, and deallocate many bottom-up binary trees
    let vs = (depth minN maxN) `using` (parList $ evalTuple3 r0 r0 rseq)
    mapM_ (\((m,d,i)) -> io (show m ++ "\t trees") d i) vs

    -- confirm the the long-lived binary tree still exists
    io "long lived tree" maxN (check long)

-- generate many trees
depth :: Int -> Int -> [(Int, Int, Int)]
depth d m
    | d <= m    = (n, d, sumT d n 0) : depth (d+2) m
    | otherwise = []
  where n = 1 `shiftL` (m - d + minN)

-- allocate and check lots of trees
sumT :: Int -> Int -> Int -> Int
sumT d 0 t = t
sumT d i t = sumT d (i-1) (t + a)
  where a = check (make d)

-- traverse the tree, counting up the nodes
check :: Tree -> Int
check t = tailCheck t

MPL_STATIC_INLINE_PREFIX int MPIDI_NM_mpi_alltoall(const void *sendbuf, int sendcount,
                                                   MPI_Datatype sendtype, void *recvbuf,
                                                   int recvcount, MPI_Datatype recvtype,
                                                   MPIR_Comm * comm, MPIR_Errflag_t * errflag)
{
    int mpi_errno = MPI_SUCCESS;

    MPIR_FUNC_VERBOSE_STATE_DECL(MPID_STATE_MPIDI_NM_MPI_ALLTOALL);
    MPIR_FUNC_VERBOSE_ENTER(MPID_STATE_MPIDI_NM_MPI_ALLTOALL);

    mpi_errno = MPIR_Alltoall_impl(sendbuf, sendcount, sendtype,
                                   recvbuf, recvcount, recvtype, comm, errflag);

    MPIR_ERR_CHECK(mpi_errno);

    MPIR_FUNC_VERBOSE_EXIT(MPID_STATE_MPIDI_NM_MPI_ALLTOALL);

  fn_exit:
    return mpi_errno;
  fn_fail:
    goto fn_exit;
}

MPL_STATIC_INLINE_PREFIX int MPIDI_NM_mpi_alltoallv(const void *sendbuf, const int *sendcounts,
                                                    const int *sdispls, MPI_Datatype sendtype,
                                                    void *recvbuf, const int *recvcounts,
                                                    const int *rdispls, MPI_Datatype recvtype,
                                                    MPIR_Comm * comm, MPIR_Errflag_t * errflag)
{
    int mpi_errno = MPI_SUCCESS;

    MPIR_FUNC_VERBOSE_STATE_DECL(MPID_STATE_MPIDI_NM_MPI_ALLTOALLV);
    MPIR_FUNC_VERBOSE_ENTER(MPID_STATE_MPIDI_NM_MPI_ALLTOALLV);

    mpi_errno = MPIR_Alltoallv_impl(sendbuf, sendcounts, sdispls,
                                    sendtype, recvbuf,

    GPL Classpath Exception:
    Oracle designates this particular file as subject to the "Classpath"
    exception as provided by Oracle in the GPL Version 2 section of the License
    file that accompanied this code.

    Modifications:
    If applicable, add the following below the License Header, with the fields
    enclosed by brackets [] replaced by your own identifying information:
    "Portions Copyright [year] [name of copyright owner]"

    Contributor(s):
    If you wish your version of this file to be governed by only the CDDL or
    only the GPL Version 2, indicate your decision by adding "[Contributor]
    elects to include this software in this distribution under the [CDDL or GPL
    Version 2] license."  If you don't indicate a single choice of license, a
    recipient has the option to distribute your version of this file under
    either the CDDL, the GPL Version 2 or to extend the choice of license to
    its licensees as provided above.  However, if you add GPL Version 2 code
    and therefore, elected the GPL Version 2 license, then the option applies
    only if the new code is made subject to such option by the copyright
    holder.

-->

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:composite="http://java.sun.com/jsf/composite"
      xmlns:ez="http://java.sun.com/jsf/composite/composite">
<head>

<title>Not present in rendered output</title>

</head>

<body>

<composite:interface>
    <composite:attribute name="arg1" required="true" />
    <composite:attribute name="arg2" required="true" />
</composite:interface>

<composite:implementation>
    <ez:nesting id="n1">
    <ez:nesting id="n2">
    

@end

@interface FWSliderButton : UIButton

@end

@interface FWSliderView : UIView

@property (nonatomic, weak) id<FWSliderViewDelegate> delegate;

/** Slider */
@property (nonatomic, strong, readonly) FWSliderButton *sliderBtn;

/** Default slider color */
@property (nonatomic, strong) UIColor *maximumTrackTintColor;

/** Slider progress color */
@property (nonatomic, strong) UIColor *minimumTrackTintColor;

/** Cache progress color */
@property (nonatomic, strong) UIColor *bufferTrackTintColor;

/** loading progress color */
@property (nonatomic, strong) UIColor *loadingTintColor;

/** Picture of the default slider */
@property (nonatomic, strong) UIImage *maximumTrackImage;

/** Picture of slider progress */
@property (nonatomic, strong) UIImage *minimumTrackImage;

/** Picture of cache progress */
@property (nonatomic, strong) UIImage *bufferTrackImage;

/** Slider progress */
@property (nonatomic, assign) float value;

/** Cache progress */
@property (nonatomic, assign) float bufferValue;

/** Whether to allow clicks, the default is YES */
@property (nonatomic, assign) BOOL allowTapped;

/** Whether to allow animation, the default is YES */
@property (nonatomic, assign) BOOL animate;

/** Set the height of the slider */
@property (nonatomic, assign) CGFloat sliderHeight;

/** Set the fillet of the slider */
@property (nonatomic, assign) CGFloat sliderRadius;

/** Whether to hide the slider, default is NO */
@property (nonatomic, assign) BOOL isHideSliderBlock;

/// Whether dragging
@property (nonatomic, assign) BOOL isdragging;

/// Drag forward or backward
@property (nonatomic, assign) BOOL isForward;

@property (nonatomic, assign) CGSize thumbSize;

/**
 *  Starts animation of the spinner.
 */
- (void)startAnimating;

/**
 *  Stops animation of the spinnner.
 */
- (void)stopAnimating;

// Set slider background

	// Admin
	$lang['stradminondatabase'] = '以下管理功能可应用于数据库 %s.';
	$lang['stradminontable'] = '以下管理功能可应用于表 %s.';

	// User-supplied SQL history
	$lang['strhistory'] = '历史';
	$lang['strnohistory'] = '无历史.';
	$lang['strclearhistory'] = '清空历史';
	$lang['strdelhistory'] = '从历史删除';
	$lang['strconfdelhistory'] = '确定要从历史删除吗 ?';
	$lang['strconfclearhistory'] = '确定要清空历史吗 ?';
	$lang['strnodatabaseselected'] = '请选择一个数据库.';
	
	// Database sizes
	$lang['strnoaccess']  =  '无法访问'; 
	$lang['strsize'] = '大小';
	$lang['strbytes'] = '字节';
	$lang['strkb'] = 'kB';
	$lang['strmb'] = 'MB';
	$lang['strgb'] = 'GB';
	$lang['strtb'] = 'TB';
	
	// Error handling
	$lang['strnoframes'] = '该程序在具有框架功能的浏览器上工作的更好，请按下面的链接在不支持框架的浏览器上工作。';
	$lang['strnoframeslink'] = '不使用框架';
	$lang['strbadconfig'] = '您的 config.inc.php 已失效。您需要自行通过 config.inc.php-ist 恢复。';
	$lang['strnotloaded'] = '您安装的 PHP 不支持PostgreSQL。 你需要重新编译PHP并使用 --with-pgsql 配置选�


A retention policy blocks permanent deletion of content for a specified amount of time.
Admins can create retention policies and then later assign them to specific folders or
their entire enterprise. To use this feature, you must have the manage retention
policies scope enabled for your API key via your application management console.

<!-- START doctoc generated TOC please keep comment here to allow auto update -->
<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->


- [Create Retention Policy](#create-retention-policy)
- [Get Retention Policy](#get-retention-policy)
- [Update Retention Policy](#update-retention-policy)
- [Get Enterprise Retention Policies](#get-enterprise-retention-policies)
- [Get Retention Policy Assignments](#get-retention-policy-assignments)
- [Assign Retention Policy](#assign-retention-policy)
- [Get Retention Policy Assignment](#get-retention-policy-assignment)
- [Get File Version Retention](#get-file-version-retention)
- [Get File Version Retentions](#get-file-version-retentions)

<!-- END doctoc generated TOC please keep comment here to allow auto update -->

Create Retention Policy
-----------------------

To create a new retention policy, call
`RetentionPoliciesManager.CreateRetentionPolicyAsync(BoxRetentionPolicyRequest retentionPolicyRequest)`
with the parameters for the new retention policy.

<!-- sample post_retention_policies -->
```c#
var policyParams = new BoxRetentionPolicyRequest()
{
    PolicyName = "Important Documents!",
    PolicyType = "finite",
    RetentionLength = 365,
    DispositionAction = "remove_retention"
};
BoxRetentionPolicy policy = await client.RetentionPoliciesManager
    .CreateRetentionPolicyAsync(policyParams);
```

Get Retention Policy
--------------------

To retrieve information about a specific retention policy, call
`RetentionPoliciesManager.GetRetentionPolicyAsync(string id, IEnumerable<string> fields = null)`

            assertThat(mixin(DocAndCommForPrelimLetter_communication.class, prelimLetterViewModel).$$()).isNull();

            // is attached to only invoice
            paperclips = paperclipRepository.findByDocument(prelimLetterDoc);
            assertThat(paperclips).hasSize(1);
            assertThat(paperclips).extracting(x -> x.getAttachedTo()).contains(invoice);

            // while the invoice itself now has two attachments (the original receipt and the newly created doc)
            paperclips = paperclipRepository.findByAttachedTo(invoice);
            assertThat(paperclips).hasSize(2);
            assertThat(paperclips).extracting(x -> x.getDocument()).contains(attachedReceipt, prelimLetterDoc);

            // and given
            PostalAddress sendTo = sendToFor(invoice, PostalAddress.class);

            // when
            Blob downloaded = wrap(mixin(InvoiceForLease_sendByPost.class, invoice)).$$(document, sendTo);

            invoice = findInvoice(InvoiceStatus.NEW);
            prelimLetterViewModel = prelimLetterViewModelOf(invoice);

            // then the bytes of downloaded are at least as many as that of the original document (receipt is ignored)
            assertThat(downloaded).isNotNull();
            assertThat(downloaded.getBytes().length).isCloseTo(document.getBlobBytes().length, Percentage.withPercentage(10));

            final Communication prelimLetterComm =
                    mixin(DocAndCommForPrelimLetter_communication.class, prelimLetterViewModel).$$();

            // then the comm is automatically sent
            assertThat(prelimLetterComm.getState()).isEqualTo(CommunicationState.SENT);
            assertThat(prelimLetterComm.getCreatedAt()).isNotNull();
            assertThat(prelimLetterComm.getSentAt()).isNotNull();
            assertThat(prelimLetterComm.getSubject()).isEqualTo("Prelim letter 2012-01-01, OXF-POISON-003 Poison Perfumeries.pdf");

            // and PL doc now also attached to comm, invoice.buyer and invoice.seller (as well as invoice)
            paperclips = paperclip

/*
 * This file is part of Sponge, licensed under the MIT License (MIT).
 *
 * Copyright (c) SpongePowered <https://www.spongepowered.org>
 * Copyright (c) contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
package org.spongepowered.common.mixin.api.mcp.world;

import net.minecraft.world.World;
import net.minecraft.world.WorldProvider;
import net.minecraft.world.WorldType;
import org.spongepowered.api.service.context.Context;
import org.spongepowered.api.world.Dimension;
import org.spongepowered.api.world.DimensionType;
import org.spongepowered.api.world.GeneratorType;
import org.spongepowered.asm.mixin.Mixin;
import org.spongepowered.asm.mixin.Shadow;
import org.spongepowered.common.bridge.world.DimensionTypeBridge;

@Mixin(WorldProvider.class)
public abstract class WorldProviderMixin_API implements Dimension {

    @Shadow private WorldType terrainType;
    @Shadow protected World world;
    @Shadow public abstract net.minecraft.world.


''to compile: fbc test.bas trycatch.bas

type MyException extends Exception
	declare constructor()
	something as integer = 1234
	declare operator cast() as string
end type

constructor MyException
	base("myexception")
end constructor

operator MyException.cast() as string
	operator = base.toString()
end operator

sub fun3()
	print "begin fun3"
	try
		print "Begin try3.1"
		try
			print "Begin try3.2"
			throw "bleh"
			print "End try3.2"
		catch ex as Exception
			print "fun3.2:" & *ex
			dim as integer ptr p = 0
			*p = 2
			throw "never executed"
		end_try
		print "End try3.1"
	catch ex as Exception
		print "fun3.1:" & *ex
	end_try
	
	print "end fun3"
end sub

sub fun2()
	print "begin fun2"
	try
		print "Begin try2"
		fun3()
		dim as integer ptr p = 0
		*p = 2
		print "End try2"
	catch ex as Exception
		print "fun2:" & *ex
		return
	end_try
	
	print "end fun2"
end sub


sub fun1()	
	print "begin fun1"

	try
		print "Begin try1"
		fun2()
		throw new MyException 
		throw "never executed"
		print "End try1"
	catch ex as MyException
		print "fun1:" & *ex
	catch ex as Exception
		print "fun1:" & *ex
	end_try

	print "end fun1"
end sub

fun1()

type foo
	declare destructor
	bar as byte
end type

destructor foo
	print "foo:desctructor"
end destructor

	try
		dim f as foo
		dim as integer ptr p = 0
		*p = 2
		'' NOTE: without proper stack unwinding the foo's destructor will never be

module.exports = {
  topic: function() {
    var s = d3.select("body").append("div").selectAll("div")
        .data(["one", "two", "three", "four"])
      .enter().append("div")
        .attr("class", String);

    s.filter(function(d, i) { return i > 0; }).append("span");
    s.filter(function(d, i) { return i > 1; }).append("span");
    s[0][3] = null;

    return s.transition()
        .delay(function(d, i) { return i * 13; })
        .duration(function(d, i) { return i * 21; });
  },

  "selects all matching elements": function(transition) {
    var t = transition.selectAll("span");
    assert.domEqual(t[1][0].node.parentNode, transition[0][1].node);
    assert.domEqual(t[2][0].node.parentNode, transition[0][2].node);
    assert.domEqual(t[2][1].node.parentNode, transition[0][2].node);
  },
  "ignores null elements": function(transition) {
    var t = transition.selectAll("span");
    assert.equal(t.length, 3);
  },
  "propagates delay to the selected elements": function(transition) {
    var t = transition.selectAll("span");
    assert.domEqual(t[1][0].delay, 13);
    assert.domEqual(t[2][0].delay, 26);
    assert.domEqual(t[2][1].delay, 26);
  },
  "propagates duration to the selected elements": function(transition) {
    var t = transition.selectAll("span");
    assert.domEqual(t[1][0].duration, 21);
    assert.domEqual(t[2][0].duration, 42);
    assert.domEqual(t[2][1].duration, 42);
  },
  "returns empty if no match is found": function(transition) {
    var t = transition.selectAll("span");
    

BasicUDPSource::BasicUDPSource(UsageEnvironment& env, Groupsock* inputGS)
  : FramedSource(env), fInputGS(inputGS), fHaveStartedReading(False) {
  // Try to use a large receive buffer (in the OS):
  increaseReceiveBufferTo(env, inputGS->socketNum(), 50*1024);

  // Make the socket non-blocking, even though it will be read from only asynchronously, when packets arrive.
  // The reason for this is that, in some OSs, reads on a blocking socket can (allegedly) sometimes block,
  // even if the socket was previously reported (e.g., by "select()") as having data available.
  // (This can supposedly happen if the UDP checksum fails, for example.)
  makeSocketNonBlocking(fInputGS->socketNum());
}

BasicUDPSource::~BasicUDPSource(){
  envir().taskScheduler().turnOffBackgroundReadHandling(fInputGS->socketNum());
}

void BasicUDPSource::doGetNextFrame() {
  if (!fHaveStartedReading) {
    // Await incoming packets:
    envir().taskScheduler().turnOnBackgroundReadHandling(fInputGS->socketNum(),
	 (TaskScheduler::BackgroundHandlerProc*)&incomingPacketHandler, this);
    fHaveStartedReading = True;
  }
}

void BasicUDPSource::doStopGettingFrames() {
  envir().taskScheduler().turnOffBackgroundReadHandling(fInputGS->socketNum());
  fHaveStartedReading = False;
}


void BasicUDPSource::incomingPacketHandler(BasicUDPSource* source, int /*mask*/){
  source->incomingPacketHandler1();
}

void BasicUDPSource::incomingPacketHandler1() {
  if (!isCurrentlyAwaitingData()) return; // we're not ready for the data yet

  // Read the packet into our desired destination:
  struct sockaddr_in fromAddress;
  if (!fInputGS->handleRead(fTo, fMaxSize, fFrameSize, fromAddress)) return;

  // Tell our client that we have new data:
  afterGetting(this); //

  private static final int WHITE = 0xFFFFFFFF;
  private static final int BLACK = 0xFF000000;

  private final Context activity;
  private String contents;
  private String displayContents;
  private String title;
  private BarcodeFormat format;
  private final int dimension;
  private final boolean useVCard;

  QRCodeEncoder(Context activity, Intent intent, int dimension, boolean useVCard) throws WriterException {
    this.activity = activity;
    this.dimension = dimension;
    this.useVCard = useVCard;
    String action = intent.getAction();
    if (action.equals(Intents.Encode.ACTION)) {
      encodeContentsFromZXingIntent(intent);
    } else if (action.equals(Intent.ACTION_SEND)) {
      encodeContentsFromShareIntent(intent);
    }
  }

  String getContents() {
    return contents;
  }

  String getDisplayContents() {
    return displayContents;
  }

  String getTitle() {
    return title;
  }

  boolean isUseVCard() {
    return useVCard;
  }

  // It would be nice if the string encoding lived in the core ZXing library,
  // but we use platform specific code like PhoneNumberUtils, so it can't.
  private boolean encodeContentsFromZXingIntent(Intent intent) {
     // Default to QR_CODE if no format given.
    String formatString = intent.getStringExtra(Intents.Encode.FORMAT);
    format = null;
    if (formatString != null) {
      try {
        format = BarcodeFormat.valueOf(formatString);
      } catch (IllegalArgumentException iae) {
        // Ignore it then
      }
    }
    if (format == null || format == BarcodeFormat.QR_CODE) {
      String type = intent.getStringExtra(Intents.Encode.TYPE);
      if (type == null || type.isEmpty()) {
        return false;
      }
      this.format = BarcodeFormat.QR_CODE;
      encodeQRCodeContents(intent, type);
    } else {
      String data = intent.getStringExtra(Intents.Encode

Here is the same workflow, when the conflict resolution is now set to ``ClientWins``:

.. image:: assets/Conflict04.png


Handling conflicts manually
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

| If you decide to manually resolve a conflict, the ``ConflictResolutionPolicy`` option will be ignored.  
| To be able to resolve a conflict, you just have to *Intercept*  the ``ApplyChangedFailed`` method and choose the correct version.  

.. code-block:: csharp

    agent.OnApplyChangesFailed(args =>
    {
    // do stuff and choose correct resolution policy
    });


The ``ApplyChangeFailedEventArgs`` argument contains all the required properties to be able to resolve your conflict.

You will determinate the correct version through the `Action` property of type ``ConflictResolution``:


.. code-block:: csharp

    public enum ConflictResolution
    {
        /// <summary>
        /// Indicates that the change on the server is the conflict winner
        /// </summary>
        ServerWins,

        /// <summary>
        /// Indicates that the change sent by the client is the conflict winner
        /// </summary>
        ClientWins,

        /// <summary>
        /// Indicates that you will manage the conflict by filling the final row and sent it to 
        /// both client and server
        /// </summary>
        MergeRow,

        /// <summary>
        /// Indicates that you want to rollback the whole sync process
        /// </summary>
        Rollback
    }



* ``ConflictResolution.ClientWins`` : The client row will be applied on server, even if there is a conflict, so the client row wins.
* ``ConflictResolution.ServerWins`` : The client row won't be applied on the server, so the server row wins.
* ``ConflictResolution.MergeRow``   : It's up to you to choose the correct row to send on both server and client. the ``FinalRow`` instance will be used instead of Server or Client row.

You are able to compare the row in conflict through the ``Conflict`` property of type ``SyncConflict``:

* ``Conflict.LocalRow``   : Contains the conflict row from the client side. This row is readonly.
*

		<!--<ul>-->
			<!--<li>-->
				<!--<a href="#" title="预约等其他广告词" style="background:url(../images/pic/focus01.jpg) no-repeat center center;"></a>-->
			<!--</li>-->
		<!--</ul>-->
	<!--</div>-->
	<div class="focus-news">
		<div class="focus-news-title">
			<h2>最新消息</h2>
			<span><a href="news-list.html">查看更多</a><i class="icon icon_more"></i></span>
		</div>
		<h3><a href="#">大神回归六重大奖连环赏六重，大神回国</a></h3>
		<ul>
			<li><a href="#">在线购卡价格调整公告</a></li>
			<li><a href="#">大话2经典版、免费版充值送大礼</a></li>
			<li><a href="#">1月10日23点-1月11日7点工商银行</a></li>
			<li><a href="#">在线购卡价格调整公告</a></li>
			<li><a href="#">大话2经典版、免费版充值送大礼</a></li>
			<li><a href="#">1月10日23点-1月11日7点工商银行</a></li>
		</ul>
	</div>
	<div class="focus-nav">
		<ul>
			<li class="on"><a href="#">有杀气童话</a></li>
			<li><a href="#">神魔决</a></li>
			<li><a href="#">天下3</a></li>
			<li><a href="#">魔兽世界</a></li

// Protocol Buffers for Go with Gadgets
//
// Copyright (c) 2018, The GoGo Authors. All rights reserved.
// http://github.com/gogo/protobuf
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
// notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
// copyright notice, this list of conditions and the following disclaimer
// in the documentation and/or other materials provided with the
// distribution.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// +build !purego,!appengine,!js

// This file contains the implementation of the proto field accesses using package unsafe.

package proto

import (
	"reflect"
	"unsafe"
)

func (p pointer) getRef() pointer {
	return pointer{p: (unsafe.Pointer)(&p.p)}
}

func (p pointer) appendRef(v pointer, typ reflect.Type) {
	slice := p.getSlice(typ)
	elem := v.asPointerTo(typ).Elem()
	newSlice := reflect.Append(slice, elem)
	slice.Set(newSlice)
}

func (p pointer) getSlice(typ reflect.Type) reflect.Value {
	sliceTyp := reflect.SliceOf(typ)
	slice := p.as

/* Upper case range - Greek */
static signed char UniCaseRangeU03a0[47] = {
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -38, -37, -37, -37,	/* 3a0-3af */
	0, -32, -32, -32, -32, -32, -32, -32, -32, -32, -32, -32, -32, -32, -32, -32,	/* 3b0-3bf */
	-32, -32, -31, -32, -32, -32, -32, -32, -32, -32, -32, -32, -64,
	-63, -63,
};

/* Upper case range - Cyrillic */
static signed char UniCaseRangeU0430[48] = {
	-32, -32, -32, -32, -32, -32, -32, -32, -32, -32, -32, -32, -32, -32, -32, -32,	/* 430-43f */
	-32, -32, -32, -32, -32, -32, -32, -32, -32, -32, -32, -32, -32, -32, -32, -32,	/* 440-44f */
	0, -80, -80, -80, -80, -80, -80, -80, -80, -80, -80, -80, -80, 0, -80, -80,	/* 450-45f */
};

/* Upper case range - Extended cyrillic */
static signed char UniCaseRangeU0490[61] = {
	0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1,	/* 490-49f */
	0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1,	/* 4a0-4af */
	0, -1, 0

        return (this.description);

    }


    /**
     * Set the description of this group.
     *
     * @param description The new description
     */
    @Override
    public void setDescription(String description) {

        this.description = description;

    }


    /**
     * Return the group name of this group, which must be unique
     * within the scope of a {@link UserDatabase}.
     */
    @Override
    public String getGroupname() {

        return (this.groupname);

    }


    /**
     * Set the group name of this group, which must be unique
     * within the scope of a {@link UserDatabase}.
     *
     * @param groupname The new group name
     */
    @Override
    public void setGroupname(String groupname) {

        this.groupname = groupname;

    }


    /**
     * Return the set of {@link Role}s assigned specifically to this group.
     */
    @Override
    public abstract Iterator<Role> getRoles();


    /**
     * Return the {@link UserDatabase} within which this Group is defined.
     */
    @Override
    public abstract UserDatabase getUserDatabase();


    /**
     * Return an Iterator over the set of {@link org.apache.catalina.User}s that
     * are members of this group.
     */
    @Override
    public abstract Iterator<User> getUsers();


    // --------------------------------------------------------- Public Methods


    /**
     * Add a new {@link Role} to those assigned specifically to this group.
     *
     * @param role The new role
     */
    @Override
    public abstract void addRole(Role role);


    /**
     * Is this group specifically assigned the specified {@link Role}?
     *
     * @param role The role to check
     */
    @Override
    public abstract boolean isInRole(Role role);


    /**
     * Remove a {@link Role} from those assigned to this group.
     *
     * @param role The old role
     */
    @Override
    public abstract void removeRole(Role role);


    /**
     * Remove all {@link Role}s from those assigned to this group.
     */

package com.android.server.slice;

import static android.app.usage.UsageEvents.Event.SLICE_PINNED;
import static android.app.usage.UsageEvents.Event.SLICE_PINNED_PRIV;
import static android.content.ContentProvider.getUriWithoutUserId;
import static android.content.ContentProvider.getUserIdFromUri;
import static android.content.ContentProvider.maybeAddUserId;
import static android.content.pm.PackageManager.PERMISSION_DENIED;
import static android.content.pm.PackageManager.PERMISSION_GRANTED;
import static android.os.Process.SYSTEM_UID;

import android.Manifest.permission;
import android.app.AppOpsManager;
import android.app.slice.ISliceManager;
import android.app.slice.SliceSpec;
import android.app.usage.UsageStatsManagerInternal;
import android.content.BroadcastReceiver;
import android.content.ComponentName;
import android.content.ContentProvider;
import android.content.ContentResolver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.content.pm.PackageManager;
import android.content.pm.PackageManagerInternal;
import android.content.pm.ProviderInfo;
import android.content.pm.ResolveInfo;
import android.net.Uri;
import android.os.Binder;
import android.os.Handler;
import android.os.IBinder;
import android.os.Looper;
import android.os.Process;
import android.os.RemoteException;
import android.os.ResultReceiver;
import android.os.ShellCallback;
import android.os.UserHandle;
import android.util.ArrayMap;
import android.util.Slog;
import android.util.SparseArray;
import android.util.Xml.Encoding;

import com.android.internal.annotations.GuardedBy;
import com.android.internal.annotations.VisibleForTesting;
import com.android.internal.app.AssistUtils;
import com.android.internal.util.Preconditions;
import com.android.server.LocalServices;


  <!-- </SnippetCroppedXAML1>-->

  <DockPanel>
      <Border DockPanel.Dock="Top" Background="Black">
         <TextBlock Foreground="White" HorizontalAlignment="Stretch" FontSize="20">
            Cropping an Image Element
         </TextBlock>
      </Border>
      <TextBlock DockPanel.Dock="Top" Style="{StaticResource Header1}">Original Image</TextBlock>
      <Border DockPanel.Dock="Top" Margin="0,0,0,10">
         <Image Width="200" Source="{StaticResource masterImage}" />
      </Border>
      <Grid Name="croppedGrid" Background="{StaticResource CheckeredBrushResource}" 
         DockPanel.Dock="Top" 
         ShowGridLines="false" 
         VerticalAlignment="Top"
         HorizontalAlignment="Center">
         <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
         </Grid.ColumnDefinitions>
         <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
         </Grid.RowDefinitions>
         <TextBlock Margin="5" 
            Style="{StaticResource Header1}" 
            Grid.Column="0" Grid.Row="0">
            Cropped with XAML
         </TextBlock>
         <!-- <SnippetCroppedXAML2> -->
         <!-- Use the cropped image resource as the images source -->
         <Image Width="200" Source="{StaticResource croppedImage}" 
            Margin="5" Grid.Column="0" Grid.Row="1" />
         <!-- </SnippetCroppedXAML2> -->
         <TextBlock 
            Margin="5" Style="{StaticResource Header1}" 
            Grid.Column="1" Grid.Row="0">
            Cropped in Code
         </TextBlock>
         <TextBlock Style="{StaticResource Header2}" 
            Margin="5" Grid.Column="0" Grid.Row="2" Grid.ColumnSpan

#!/usr/bin/env bash
#=============================================================================
# Copyright 2010-2015 Kitware, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#=============================================================================

USAGE='[<remote>] [<options>...] [--]

OPTIONS

--dry-run
    Show what would be changed without actually updating

--autostash
    automatically stash/stash pop before and after

'
OPTIONS_SPEC=
SUBDIRECTORY_OK=Yes
. "$(git --exec-path)/git-sh-setup"

egrep_q() {
  egrep "$@" >/dev/null 2>/dev/null
}

# Load the project configuration.
require_work_tree_exists
state_dir="$GIT_DIR"/gitlab-sync

#-----------------------------------------------------------------------------

remote=''
autostash="$(git config --bool gitlab.sync.autostash || echo false)"
dry_run=false

# Parse the command line options.
while test $# != 0; do
  case "$1" in
    --autostash)   autostash=true ;;
    --no-autostash)   autostash=false ;;
    --dry-run)    dry_run=true ;;
    --) shift; break ;;
    -*) usage ;;
    *) test -z "$remote" || usage ; remote="$1" ;;
  esac
  shift
done
test $# = 0 || usage

# Default remote.
test -n "$remote" || remote="gitlab"

# Identify and validate the topic branch name.
head="$(git symbolic-ref HEAD)" && topic="${head#refs/heads/}" || topic=''


.card-content--myscheduleinfo {
  paper-icon-button {
    margin: -8px 0 12px -12px;
  }

  p {
    margin: $mobileKeyline auto;
  }

  .note {
    font-size: 12px;
    margin: 0;
  }

  ul {
    padding: 0 0 0 18px;
  }

  .anchor-like {
    margin-top: $desktopKeyline;
    display: inline-block;
  }
}

.card-content--day-footer {
  padding-top: 0 !important;

  a {
    color: $color-cyan-800;
    text-transform: uppercase;
    margin-left: $mobileKeyline / 2;
    font-size: 14px;
  }
}

.schedule-row {
  padding: $mobileKeyline;
  border-top: 1px solid $color-section-border;
  width: 100%;

  &:hover {
    background-color: $color-session-row-hover;
  }

  &:not(.saved):hover,
  &:not(.saved) .schedule-toggle-buttons-mobile {
    .schedule-add-button {
      display: inline-block;
    }
  }

  &.saved {
    position: relative;

    &::before {
      content: '';
      position: absolute;
      left: 0;
      border-left: 4px solid #26C6DA;
      top: 0;
      height: 100%;
      border-left: 4px solid $color-cyan-400;
    }

    &:hover, .schedule-toggle-buttons-mobile {
      .schedule-remove-button {
        display: inline-block;
      }
    }
  }
}

#main_schedule_results {
  &.noresults::before {
    content: 'No results for this day. Try updating your filters.';
    text-align: center;
    margin-top: $desktopKeyline;
    position: absolute;
    left: 0;
    right: 0;
  }
}


	template <typename T, precision P>
	GLM_FUNC_QUALIFIER tvec3<T, P> hsvColor(const tvec3<T, P>& rgbColor)
	{
		tvec3<T, P> hsv = rgbColor;
		float Min   = min(min(rgbColor.r, rgbColor.g), rgbColor.b);
		float Max   = max(max(rgbColor.r, rgbColor.g), rgbColor.b);
		float Delta = Max - Min;

		hsv.z = Max;                               

		if(Max != static_cast<T>(0))
		{
			hsv.y = Delta / hsv.z;    
			T h = static_cast<T>(0);

			if(rgbColor.r == Max)
				// between yellow & magenta
				h = static_cast<T>(0) + T(60) * (rgbColor.g - rgbColor.b) / Delta;
			else if(rgbColor.g == Max)
				// between cyan & yellow
				h = static_cast<T>(120) + T(60) * (rgbColor.b - rgbColor.r) / Delta;
			else
				// between magenta & cyan
				h = static_cast<T>(240) + T(60) * (rgbColor.r - rgbColor.g) / Delta;

			if(h < T(0)) 
				hsv.x = h + T(360);
			else
				hsv.x = h;
		}
		else
		{
			// If r = g = b = 0 then s = 0, h is undefined
			hsv.y = static_cast<T>(0);
			hsv.x = static_cast<T>(0);
		}

		return hsv;
	}

	template <typename T>
	GLM_FUNC_QUALIFIER tmat4x4<T, defaultp> saturation(T const s)
	{
		tvec3<T, defaultp> rgbw = tvec3<T, defaultp>(T(0.2126), T(0.7152), T(0.0722));

		T

Version:1.0
Spartan
SPT-N3

Config:Biped
TechBase:Inner Sphere
Era:3064
Source:TRO 3058 - Civil War
Rules Level:2

Mass:80
Engine:400 XL Engine
Structure:Standard
Myomer:Standard

Heat Sinks:16 Double
Walk MP:5
Jump MP:0

Armor:Standard(Inner Sphere)
LA Armor:26
RA Armor:26
LT Armor:26
RT Armor:26
CT Armor:31
HD Armor:9
LL Armor:26
RL Armor:26
RTL Armor:8
RTR Armor:8
RTC Armor:12

Weapons:7
ER PPC, Left Torso
TAG, Left Torso
Streak SRM 2, Center Torso
Streak SRM 2, Center Torso
ER Medium Laser, Right Arm
ER Medium Laser, Right Arm
ER Medium Laser, Right Arm

Left Arm:
Shoulder
Upper Arm Actuator
Lower Arm Actuator
Hand Actuator
-Empty-
-Empty-
-Empty-
-Empty-
-Empty-
-Empty-
-Empty-
-Empty-

Right Arm:
Shoulder
Upper Arm Actuator
Lower Arm Actuator
Hand Actuator
ISERMediumLaser
ISERMediumLaser
ISERMediumLaser
-Empty-
-Empty-
-Empty-
-Empty-
-Empty-

Left Torso:
Fusion Engine
Fusion Engine
Fusion Engine
ISERPPC
ISERPPC
ISERPPC
IS Streak SRM 2 Ammo
IS Streak SRM 2 Ammo
ISTAG
-Empty-
-Empty-
-Empty-

Right Torso:
Fusion Engine
Fusion Engine
Fusion Engine
ISC3iUnit
ISC3iUnit
-Empty-
-Empty-
-Empty-
-Empty-
-Empty-
-Empty-
-Empty-

Center Torso:
Fusion Engine
Fusion Engine
Fusion Engine
Gyro
Gyro
Gyro
Gyro
Fusion Engine
Fusion

# Configure web servers to bind to port 80 when present
ENV ASPNETCORE_URLS=http://+:80 \
    # Enable detection of running in a container
    DOTNET_RUNNING_IN_CONTAINER=true

# Install .NET Core
ENV DOTNET_VERSION 2.1.19

RUN curl -SL --output dotnet.tar.gz "https://dotnetcli.blob.core.windows.net/dotnet/Runtime/$DOTNET_VERSION/dotnet-runtime-$DOTNET_VERSION-linux-arm.tar.gz" \
    && dotnet_sha512='c674da1a311cc413a217d081cf8a69c79c5e84cf8057a3953e69ec80655840dd08332462a3a89010e094e1b62de737c95c07a3978a7f8aee6bd6e1c73f0928ec' \
    && echo "$dotnet_sha512 dotnet.tar.gz" | sha512sum -c - \
    && mkdir -p /usr/share/dotnet \
    && tar -zxf dotnet.tar.gz -C /usr/share/dotnet \
    && rm dotnet.tar.gz \
    && ln -s /usr/share/dotnet/dotnet /usr/bin/dotnet

CMD ["echo","'No CMD command was set in Dockerfile! Details about CMD command could be found in Dockerfile Guide section in our Docs. Here's the link: https://balena.io/docs"]

 RUN curl -SLO "https://raw.githubusercontent.com/balena-io-library/base-images/8accad6af708fca7271c5c65f18a86782e19f877/scripts/assets/tests/test-stack@dotnet.sh" \
  && echo "Running test-stack@dotnet" \
  && chmod +x test-stack@dotnet.sh \
  && bash test-stack@dotnet.sh \
  && rm -rf test-stack@dotnet.sh 

RUN [ ! -d /.balena/messages ] && mkdir -p /.balena

#include "config.h"
#include "JSNameScope.h"

#include "Error.h"
#include "Operations.h"

namespace JSC {

const ClassInfo JSNameScope::s_info = { "NameScope", &Base::s_info, 0, 0, CREATE_METHOD_TABLE(JSNameScope) };

void JSNameScope::visitChildren(JSCell* cell, SlotVisitor& visitor)
{
    JSNameScope* thisObject = jsCast<JSNameScope*>(cell);
    ASSERT_GC_OBJECT_INHERITS(thisObject, info());
    COMPILE_ASSERT(StructureFlags & OverridesVisitChildren, OverridesVisitChildrenWithoutSettingFlag);
    ASSERT(thisObject->structure()->typeInfo().overridesVisitChildren());

    Base::visitChildren(thisObject, visitor);
    visitor.append(&thisObject->m_registerStore);
}

JSValue JSNameScope::toThis(JSCell*, ExecState* exec, ECMAMode ecmaMode)
{
    if (ecmaMode == StrictMode)
        return jsUndefined();
    return exec->globalThisValue();
}

void JSNameScope::put(JSCell* cell, ExecState* exec, PropertyName propertyName, JSValue value, PutPropertySlot& slot)
{
    JSNameScope* thisObject = jsCast<JSNameScope*>(cell);
    if (slot.isStrictMode()) {
        // Double lookup in strict mode, but this only occurs when
        // a) indirectly writing to an exception slot
        // b) writing to a function expression name
        // (a) is unlikely, and (b) is an error.
        // Also with a single entry the symbol table lookup should simply be
        // a pointer compare.
        PropertySlot slot(thisObject);
        bool isWritable = true;
        symbolTableGet(thisObject, propertyName, slot, isWritable);
        if (!isWritable) {
            exec->vm().throwException(exec, createTypeError(exec, StrictModeReadonlyPropertyWriteError));
            return;
        }
    }
    if (symbolTablePut(thisObject, exec, propertyName,

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>openmessaging-spring-boot</artifactId>
        <groupId>org.joyqueue</groupId>
        <version>4.2.8-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>openmessaging-spring-boot-autoconfigure</artifactId>
    <name>OpenMessaging-SpringBoot-AutoConfigure</name>
    <description>SpringBoot Support for the OpenMessaging API</description>

    <dependencies>
        <dependency>
            <groupId>org.joyqueue</groupId>
            <artifactId>openmessaging-spring</artifactId>
            <version>${project.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-beans</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-context</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-autoconfigure</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
        </dependency>
    </dependencies>
</project>

## Syntax

```C
clock_t clock( void );
```

## Return Value

The elapsed time since the CRT initialization at the start of the process, measured in **CLOCKS_PER_SEC** units per second. If the elapsed time is unavailable or has exceeded the maximum positive time that can be recorded as a **clock_t** type, the function returns the value `(clock_t)(-1)`.

## Remarks

The **clock** function tells how much wall-clock time has passed since the CRT initialization during process start. Note that this function does not strictly conform to ISO C, which specifies net CPU time as the return value. To obtain CPU times, use the Win32 [GetProcessTimes](/windows/win32/api/processthreadsapi/nf-processthreadsapi-getprocesstimes) function. To determine the elapsed time in seconds, divide the value returned by the **clock** function by the macro **CLOCKS_PER_SEC**.

Given enough time, the value returned by **clock** can exceed the maximum positive value of **clock_t**. When the process has run longer, the value returned by **clock** is always `(clock_t)(-1)`, as specified by the ISO C99 standard (7.23.2.1) and ISO C11 standard (7.27.2.1). Microsoft implements **clock_t** as a **`long`**, a signed 32-bit integer, and the **CLOCKS_PER_SEC** macro is defined as 1000. This gives a maximum **clock** function return value of 2147483.647 seconds, or about 24.8 days. Do not rely on the value returned by **clock** in processes that have run for longer than this amount of time. You can use the 64-bit [time](time-time32-time64.md) function or the Windows [QueryPerformanceCounter](/windows/win32/api/profileapi/nf-profileapi-queryperformancecounter) function to record process elapsed times of many years.

## Requirements

|Routine|Required header|
|-------------|---------------------|
|**clock**|\<time.h>|

For additional compatibility information, see [Compatibility](../../c-runtime-library/compatibility.md).

## Example

```C
//

	String& Script(int si);
	String  Script(int si) const;

	String& Schema();
	String& SchemaDrop();
	String& Attributes();
	String& AttributesDrop();
	String& Upgrade();
	String& UpgradeDrop();
	String& Config();
	String& ConfigDrop();

	String  NormalFileName(int i, const char *dir = NULL, const char *name = NULL) const;
	bool    ScriptChanged(int i, const char *dir = NULL, const char *name = NULL) const;
	bool    UpdateNormalFile(int i, const char *dir = NULL, const char *name = NULL) const;
	void    SaveNormal(const char *dir = NULL, const char *name = NULL) const;

	void Var(void (*type)(SqlSchema& s), const char *name);

	SqlSchema& SchemaName(String sch)                          { schemaname = sch; return *this; }
	SqlSchema& MaxIDLen(int n)                                 { maxidlen = n; return *this; }
	
	int        GetDialect() const                              { return dialect; }

#ifndef NOAPPSQL
	SqlSchema(int dialect = SQL.GetDialect());
#else
	SqlSchema(int dialect);
#endif
	virtual ~SqlSchema() {}
};

void operator*(SqlSchema& schema, const SqlInsert& insert);

template <class T>
inline void SqlSchemaInitClear(T& a) {}

template <class T>
inline void SqlSchemaInitClear(T *a, int n) {
	while(n--)
		SqlSchemaInitClear(*a++);
}


template<> inline void SqlSchemaInitClear(int& a)    { a = Null; }
template<> inline void SqlSchemaInitClear(double& a) { a = Null; }
template<> inline void SqlSchemaInitClear(int64& a)  { a = Null; }
template<> inline void SqlSchemaInitClear(bool& a)   { a = false; }

template <class T>
inline void SqlSchemaClear(T& a)          { a = Null; }

inline void SqlSchemaClear(bool& a)       

=head1 SYNOPSIS

 #include <openssl/cms.h>

 int CMS_decrypt(CMS_ContentInfo *cms, EVP_PKEY *pkey, X509 *cert, BIO *dcont, BIO *out, unsigned int flags);

=head1 DESCRIPTION

CMS_decrypt() extracts and decrypts the content from a CMS EnvelopedData
structure. B<pkey> is the private key of the recipient, B<cert> is the
recipient's certificate, B<out> is a BIO to write the content to and
B<flags> is an optional set of flags.

The B<dcont> parameter is used in the rare case where the encrypted content
is detached. It will normally be set to NULL.

=head1 NOTES

OpenSSL_add_all_algorithms() (or equivalent) should be called before using this
function or errors about unknown algorithms will occur.

Although the recipients certificate is not needed to decrypt the data it is
needed to locate the appropriate (of possible several) recipients in the CMS
structure.

If B<cert> is set to NULL all possible recipients are tried. This case however
is problematic. To thwart the MMA attack (Bleichenbacher's attack on
PKCS #1 v1.5 RSA padding) all recipients are tried whether they succeed or
not. If no recipient succeeds then a random symmetric key is used to decrypt
the content: this will typically output garbage and may (but is not guaranteed
to) ultimately return a padding error only. If CMS_decrypt() just returned an
error when all recipient encrypted keys failed to decrypt an attacker could
use this in a timing attack. If the special flag B<CMS_DEBUG_DECRYPT> is set
then the above behaviour is modified and an error B<is> returned if no
recipient encrypted key can be decrypted B<without> generating a random
content encryption key. Applications should use this flag with
B<extreme caution> especially in automated gateways as it can leave them
open to attack.

It is possible to determine the correct recipient key by other means (for
example looking them up in a database) and setting them in the CMS structure
in advance using the CMS utility functions such as CMS_set1_pkey(). In this


        // disable the move of section to have column order fixed
        mHierarchy->header()->setSectionsMovable(false);

        layout->addWidget(m_searchWidget);
        layout->addWidget(mHierarchy);
        setLayout(layout);

        connect(mHierarchy, &QTreeWidget::itemSelectionChanged, this, &MotionSetHierarchyWidget::UpdateSelection);
        connect(mHierarchy, &QTreeWidget::itemDoubleClicked, this, &MotionSetHierarchyWidget::ItemDoubleClicked);

        // connect the window activation signal to refresh if reactivated
        //connect( this, SIGNAL(visibilityChanged(bool)), this, SLOT(OnVisibilityChanged(bool)) );

        SetSelectionMode(useSingleSelection);
    }


    // destructor
    MotionSetHierarchyWidget::~MotionSetHierarchyWidget()
    {
    }


    // update from a motion set and selection list
    void MotionSetHierarchyWidget::Update(EMotionFX::MotionSet* motionSet, CommandSystem::SelectionList* selectionList)
    {
        mMotionSet = motionSet;
        mCurrentSelectionList = selectionList;

        if (selectionList == nullptr)
        {
            mCurrentSelectionList = &(GetCommandManager()->GetCurrentSelection());
        }

        Update();
    }


    // update the widget
    void MotionSetHierarchyWidget::Update()
    {
        mHierarchy->clear();

        mHierarchy->blockSignals(true);
        if (mMotionSet)
        {
            AddMotionSetWithParents(mMotionSet);
        }
        else
        {
            // add all root motion sets
            const uint32 numMotionSets = EMotionFX::GetMotionManager().GetNumMotionSets();
            for (uint32 i = 0; i < numMotionSets; ++i)
            {
                EMotionFX::MotionSet* motionSet = EMotionFX::GetMotionManager().GetMotionSet(i);

                if (motionSet->GetIsOwnedByRuntime())
                {
                    continue;
                }

                if (motionSet->GetParentSet() == nullptr)
                {
                    RecursiveAddMotionSet

#define PXA25X_UDC_BASE		0x40600000

#define UDCCR_UDE		(1 << 0)
#define UDCCR_UDA		(1 << 1)
#define UDCCR_RSM		(1 << 2)
#define UDCCR_RESIR		(1 << 3)
#define UDCCR_SUSIR		(1 << 4)
#define UDCCR_SRM		(1 << 5)
#define UDCCR_RSTIR		(1 << 6)
#define UDCCR_REM		(1 << 7)

/* Bulk IN endpoint 1/6/11 */
#define UDCCS_BI_TSP		(1 << 7)
#define UDCCS_BI_FST		(1 << 5)
#define UDCCS_BI_SST		(1 << 4)
#define UDCCS_BI_TUR		(1 << 3)
#define UDCCS_BI_FTF		(1 << 2)
#define UDCCS_BI_TPC		(1 << 1)
#define UDCCS_BI_TFS		(1 << 0)

/* Bulk OUT endpoint 2/7/12 */
#define UDCCS_BO_RSP		(1 << 7)
#define UDCCS_BO_RNE		(1 << 6)
#define UDCCS_BO_FST		(1 << 5)
#define UDCCS_BO_SST		(1 << 4)
#define UDCCS_BO_DME		(1 << 3)
#define UDCCS_BO_RPC		(1 << 1)
#define UDCCS_BO_RFS		(1 << 0)

/* Isochronous OUT endpoint 4/9/14 */
#define UDCCS_IO_RSP		(1 << 7)
#define UDCCS_IO_RNE		(1 << 6)
#define UDCCS_IO_DME		(1 << 3)
#define U

#include <algorithm> /* for std::find */

ossimNitfTagFactoryRegistry::ossimNitfTagFactoryRegistry()
{
   initializeDefaults();
}

ossimNitfTagFactoryRegistry::~ossimNitfTagFactoryRegistry()
{
}

void ossimNitfTagFactoryRegistry::registerFactory(ossimNitfTagFactory* aFactory)
{
   if(aFactory&&!exists(aFactory))
   {
      theFactoryList.push_back(aFactory);
   }
}

void ossimNitfTagFactoryRegistry::unregisterFactory
(ossimNitfTagFactory* aFactory)
{
   std::vector<ossimNitfTagFactory*>::iterator iter =
      std::find(theFactoryList.begin(),
                theFactoryList.end(),
                aFactory);
   if(iter != theFactoryList.end())
   {
      theFactoryList.erase(iter);
   }
}

ossimNitfTagFactoryRegistry* ossimNitfTagFactoryRegistry::instance()
{
   static ossimNitfTagFactoryRegistry inst;
   return &inst;
}

ossimRefPtr<ossimNitfRegisteredTag> ossimNitfTagFactoryRegistry::create(const ossimString &tagName)const
{
   std::vector<ossimNitfTagFactory*>::const_iterator factory;
   ossimRefPtr<ossimNitfRegisteredTag> result = 0;

   factory = theFactoryList.begin();
   while(factory != theFactoryList.end())
   {
      result = (*factory)->create(tagName);

      if(result.valid())
      {
         return result;
      }
      ++factory;
   }

   ossimRefPtr<ossimNitfRegisteredTag> tag = new ossimNitfUnknownTag;
   return tag;
}

void ossimNitfTagFactoryRegistry::initializeDefaults()
{
   theFactoryList.push_back(ossimNitfRegisteredTagFactory::instance());
   theFactoryList.push_back(ossimNitfRpfTagFactory::instance());

#define	FM_EREPORT_ZFS_CHECKSUM			"checksum"
#define	FM_EREPORT_ZFS_AUTHENTICATION		"authentication"
#define	FM_EREPORT_ZFS_IO			"io"
#define	FM_EREPORT_ZFS_DATA			"data"
#define	FM_EREPORT_ZFS_DELAY			"delay"
#define	FM_EREPORT_ZFS_DEADMAN			"deadman"
#define	FM_EREPORT_ZFS_POOL			"zpool"
#define	FM_EREPORT_ZFS_DEVICE_UNKNOWN		"vdev.unknown"
#define	FM_EREPORT_ZFS_DEVICE_OPEN_FAILED	"vdev.open_failed"
#define	FM_EREPORT_ZFS_DEVICE_CORRUPT_DATA	"vdev.corrupt_data"
#define	FM_EREPORT_ZFS_DEVICE_NO_REPLICAS	"vdev.no_replicas"
#define	FM_EREPORT_ZFS_DEVICE_BAD_GUID_SUM	"vdev.bad_guid_sum"
#define	FM_EREPORT_ZFS_DEVICE_TOO_SMALL		"vdev.too_small"
#define	FM_EREPORT_ZFS_DEVICE_BAD_LABEL		"vdev.bad_label"
#define	FM_EREPORT_ZFS_DEVICE_BAD_ASHIFT	"vdev.bad_ashift"
#define	FM_EREPORT_ZFS_IO_FAILURE		"io_failure"
#define	FM_EREPORT_ZFS_PROBE_FAILURE		"probe_failure"
#define	FM_EREPORT_ZFS_LOG_REPLAY		"log_replay"
#define	FM_EREPORT_ZFS_CONFIG_CACHE_WRITE	"config_cache_write"

#define	FM_EREPORT_PAYLOAD_ZFS_POOL		"pool"
#define	FM_EREPORT_PAYLOAD_ZFS_POOL_FAILMODE	"pool_failmode"
#

		 m_is_mem_addr_addr,
		 m_is_mem_addr,

		 m_is_IO_addr_addr,
		 m_is_IO_addr,

		 m_is_near_mem_IO_addr_addr,
		 m_is_near_mem_IO_addr,

		 m_pc_reset_value,

		 m_mtvec_reset_value,

		 m_nmivec_reset_value);
  input  CLK;
  input  RST_N;

  // value method m_near_mem_io_addr_base
  output [63 : 0] m_near_mem_io_addr_base;

  // value method m_near_mem_io_addr_size
  output [63 : 0] m_near_mem_io_addr_size;

  // value method m_near_mem_io_addr_lim
  output [63 : 0] m_near_mem_io_addr_lim;

  // value method m_plic_addr_base
  output [63 : 0] m_plic_addr_base;

  // value method m_plic_addr_size
  output [63 : 0] m_plic_addr_size;

  // value method m_plic_addr_lim
  output [63 : 0] m_plic_addr_lim;

  // value method m_uart0_addr_base
  output [63 : 0] m_uart0_addr_base;

  // value method m_uart0_addr_size
  output [63 : 0] m_uart0_addr_size;

  // value method m_uart0_addr_lim
  output [63 : 0] m_uart0_addr_lim;

  // value method m_boot_rom_addr_base
  output [63 : 0] m_boot_rom_addr_base;

  // value method m_boot_rom_addr_size
  output [63 : 0] m_boot_rom_addr_size;

  // value method m_boot_rom_addr_lim
  output [63 : 0] m_boot_rom_addr_lim;

  // value method m_mem0_controller_addr_base
  output [63 :

// possiblyAtEnd checks whether the decoder may be at the end of the stream.
func (d *rangeDecoder) possiblyAtEnd() bool {
	return d.code == 0
}

// DirectDecodeBit decodes a bit with probability 1/2. The return value b will
// contain the bit at the least-significant position. All other bits will be
// zero.
func (d *rangeDecoder) DirectDecodeBit() (b uint32, err error) {
	d.nrange >>= 1
	d.code -= d.nrange
	t := 0 - (d.code >> 31)
	d.code += d.nrange & t
	b = (t + 1) & 1

	// d.code will stay less then d.nrange

	// normalize
	// assume d.code < d.nrange
	const top = 1 << 24
	if d.nrange >= top {
		return b, nil
	}
	d.nrange <<= 8
	// d.code < d.nrange will be maintained
	return b, d.updateCode()
}

// decodeBit decodes a single bit. The bit will be returned at the
// least-significant position. All other bits will be zero. The probability
// value will be updated.
func (d *rangeDecoder) DecodeBit(p *prob) (b uint32, err error) {
	bound := p.bound(d.nrange)
	if d.code < bound {
		d.nrange = bound
		p.inc()
		b = 0
	} else {
		d.code -= bound
		d.nrange -= bound
		p.dec()
		b = 1
	}
	// normalize
	// assume d.code < d.nrange
	const top = 1 << 24
	if d.nrange >= top {
		return b, nil
	}
	d.nrange <<= 8
	// d.code < d.nrange will be maintained
	return b, d.updateCode()
}

// updateCode reads a new byte into the code.
func (d *rangeDecoder) updateCode() error {
	b, err := d.br.ReadByte()
	if

//@import "~@microsoft/sp-office-ui-fabric-core/dist/sass/SPFabricCore.scss";
// exporting all these variables allows us to pick-up
// these values from within the code
// (we're trying to avoid hard-coding styles in the code)
:export {
  defaultFontColor: $ms-color-neutralSecondary;
  defaultFontFamily: $ms-font-family-fallbacks;
  defaultFontSize: $ms-font-size-m;
  lineColor: $ms-color-neutralLighter;
  titleColor: $ms-color-neutralSecondary;
  titleFont: $ms-font-family-fallbacks;
  titleFontSize: $ms-font-size-m;
  legendColor: $ms-color-neutralTertiary;
  legendFont: $ms-font-family-fallbacks;
  legendFontSize: $ms-font-size-s;
  tooltipFontSize: $ms-font-size-s;
  tooltipFont: $ms-font-family-fallbacks;
  tooltipBodyColor:$ms-color-white;
  tooltipTitleFont: $ms-font-family-fallbacks;
  tooltipTitleColor: $ms-color-white;
  tooltipTitleFontSize: $ms-font-size-s;
  tooltipFooterColor: $ms-color-white;
  tooltipFooterFont: $ms-font-family-fallbacks;
  tooltipFooterFontSize: $ms-font-size-s;
  tooltipBackgroundColor: $ms-color-neutralPrimary;
  tooltipBorderColor: $ms-color-neutralPrimary;
  scaleFontColor: $ms-color-neutralSecondary;
  scaleFont: $ms-font-family-fallbacks;
  scaleFontSize: $ms-font-size-s;
}

.chartComponent {
  &.themed {
    background-color: "[theme: bodyBackground, default: #ffffff]";
  }
}

// Renders an invisible table to everyone but people who use a screen reader
.accessibleTable {
  position: 'absolute';
  left: -10000;
  top: 'auto';
  width: 1;

	[BeeUIStyleManager loadDefaultStyleResource:@"default.css"];
	return YES;
}

+ (void)loadDefaultStyleFile:(NSString *)fileName
{
	[[BeeUIStyleManager sharedInstance] setDefaultFile:fileName];
}

+ (void)loadDefaultStyleResource:(NSString *)resName
{
	[[BeeUIStyleManager sharedInstance] setDefaultResource:resName];
}

- (void)setDefaultFile:(NSString *)fileName
{
	BeeUIStyle * style = [self fromFile:fileName useCache:YES];
	if ( style )
	{
		self.defaultStyle = style;
	}
}

- (void)setDefaultResource:(NSString *)resName
{
	BeeUIStyle * style = [self fromResource:resName useCache:YES];
	if ( style )
	{
		self.defaultStyle = style;
	}
}

- (id)init
{
	self = [super init];
	if ( self )
	{
		_cache = [[NSMutableDictionary alloc] init];
	}
	return self;
}

- (void)dealloc
{
	[_cache removeAllObjects];
	[_cache release];
	
	[super dealloc];
}

- (BeeUIStyle *)fromResource:(NSString *)resName
{
	return [self fromResource:resName useCache:YES];
}

- (BeeUIStyle *)fromResource:(NSString *)resName useCache:(BOOL)flag
{
	if ( flag )
	{
		BeeUIStyle * cachedStyle = [_cache objectForKey:resName];
		if ( cachedStyle )
		{
			return cachedStyle;
		}
	}

	NSString *	extension = [resName pathExtension];
	NSString *	fullName = [resName substringToIndex:(resName.length - extension.length - 1)];
	
	NSString *	resPath = nil;
	NSString *	resPath2 = nil;
	NSString *	resDefaultPath = [[NSBundle mainBundle] pathForResource:fullName ofType:extension];
	
	if ( NSNotFound == [full

END:STANDARD
BEGIN:DAYLIGHT
DTSTART:19741103T024500
RDATE:19741103T024500
RDATE:19891008T024500
TZNAME:CHADT
TZOFFSETFROM:+1245
TZOFFSETTO:+1345
END:DAYLIGHT
BEGIN:STANDARD
DTSTART:19750223T034500
RDATE:19750223T034500
TZNAME:CHAST
TZOFFSETFROM:+1345
TZOFFSETTO:+1245
END:STANDARD
BEGIN:DAYLIGHT
DTSTART:19751026T024500
RRULE:FREQ=YEARLY;UNTIL=19881029T140000Z;BYDAY=-1SU;BYMONTH=10
TZNAME:CHADT
TZOFFSETFROM:+1245
TZOFFSETTO:+1345
END:DAYLIGHT
BEGIN:STANDARD
DTSTART:19760307T034500
RRULE:FREQ=YEARLY;UNTIL=19890304T140000Z;BYDAY=1SU;BYMONTH=3
TZNAME:CHAST
TZOFFSETFROM:+1345
TZOFFSETTO:+1245
END:STANDARD
BEGIN:STANDARD
DTSTART:19900318T034500
RRULE:FREQ=YEARLY;UNTIL=20070317T140000Z;BYDAY=3SU;BYMONTH=3
TZNAME:CHAST
TZOFFSETFROM:+1345
TZOFFSETTO:+1245
END:STANDARD
BEGIN:DAYLIGHT
DTSTART:19901007T024500
RRULE:FREQ=YEARLY;UNTIL=20060930T140000Z;BYDAY=1SU;BYMONTH=10
TZNAME:CHADT
TZOFFSETFROM:+1245
TZOFFSETTO:+1345
END:DAYLIGHT
BEGIN:DAYLIGHT
DTSTART:20070930T024500
RRULE:FREQ=YEARLY;BYDAY=-1

        ISftpFileReader CreateSftpFileReader(string fileName, ISftpSession sftpSession, uint bufferSize);

        ISftpResponseFactory CreateSftpResponseFactory();

        /// <summary>
        /// Creates a shell stream.
        /// </summary>
        /// <param name="session">The SSH session.</param>
        /// <param name="terminalName">The <c>TERM</c> environment variable.</param>
        /// <param name="columns">The terminal width in columns.</param>
        /// <param name="rows">The terminal width in rows.</param>
        /// <param name="width">The terminal height in pixels.</param>
        /// <param name="height">The terminal height in pixels.</param>
        /// <param name="bufferSize">Size of the buffer.</param>
        /// <param name="terminalModeValues">The terminal mode values.</param>
        /// <returns>
        /// The created <see cref="ShellStream"/> instance.
        /// </returns>
        /// <exception cref="SshConnectionException">Client is not connected.</exception>
        /// <remarks>
        /// <para>
        /// The <c>TERM</c> environment variable contains an identifier for the text window's capabilities.
        /// You can get a detailed list of these cababilities by using the ‘infocmp’ command.
        /// </para>
        /// <para>
        /// The column/row dimensions override the pixel dimensions(when non-zero). Pixel dimensions refer
        /// to the drawable area of the window.
        /// </para>
        /// </remarks>
        ShellStream CreateShellStream(ISession session,
                                      string terminalName,
                                      uint columns,
                                      uint rows,
                                      uint width,
                                      uint height,
                                      IDictionary<TerminalModes, uint> terminalModeValues,
                                      int bufferSize);

        /// <summary>
        /// Creates an <see cref="IRemotePathTransformation"/> that encloses a path in double quotes, and escapes
        /// any embedded double quote with a backslash.
        /// </summary>
        /// <returns>
        /// An <see cref="IRemotePathTransformation"/> that encloses a path in double quotes, and

private:
    template <class Archive>
    void serialize(Archive& ar, const unsigned int) {
        ar& socket_fd;
        ar& blocking;
    }
    friend class boost::serialization::access;
};

class SOC_U final : public ServiceFramework<SOC_U> {
public:
    SOC_U();
    ~SOC_U();

private:
    void Socket(Kernel::HLERequestContext& ctx);
    void Bind(Kernel::HLERequestContext& ctx);
    void Fcntl(Kernel::HLERequestContext& ctx);
    void Listen(Kernel::HLERequestContext& ctx);
    void Accept(Kernel::HLERequestContext& ctx);
    void GetHostId(Kernel::HLERequestContext& ctx);
    void Close(Kernel::HLERequestContext& ctx);
    void SendTo(Kernel::HLERequestContext& ctx);
    void RecvFromOther(Kernel::HLERequestContext& ctx);
    void RecvFrom(Kernel::HLERequestContext& ctx);
    void Poll(Kernel::HLERequestContext& ctx);
    void GetSockName(Kernel::HLERequestContext& ctx);
    void Shutdown(Kernel::HLERequestContext& ctx);
    void GetPeerName(Kernel::HLERequestContext& ctx);
    void Connect(Kernel::HLERequestContext& ctx);
    void InitializeSockets(Kernel::HLERequestContext& ctx);
    void ShutdownSockets(Kernel::HLERequestContext& ctx);
    void GetSockOpt(Kernel::HLERequestContext& ctx);
    void SetSockOpt(Kernel::HLERequestContext& ctx);

    // Some platforms seem to have GetAddrInfo and GetNameInfo defined as macros,
    // so we have to use a different name here.
    void GetAddrInfoImpl(Kernel::HLERequestContext& ctx);
    void GetNameInfoImpl(Kernel::HLERequestContext& ctx);

    /// Close all open sockets
    void CleanupSockets();

    /// Holds info about the currently open sockets
    std::unordered_map<u32, SocketHolder>

	for _, tt := range tests {
		s := trans.FmtDateShort(tt.t)
		if s != tt.expected {
			t.Errorf("Expected '%s' Got '%s'", tt.expected, s)
		}
	}
}

func TestFmtNumber(t *testing.T) {

	tests := []struct {
		num      float64
		v        uint64
		expected string
	}{
	// {
	// 	num:      1123456.5643,
	// 	v:        2,
	// 	expected: "1,123,456.56",
	// },
	// {
	// 	num:      1123456.5643,
	// 	v:        1,
	// 	expected: "1,123,456.6",
	// },
	// {
	// 	num:      221123456.5643,
	// 	v:        3,
	// 	expected: "221,123,456.564",
	// },
	// {
	// 	num:      -221123456.5643,
	// 	v:        3,
	// 	expected: "-221,123,456.564",
	// },
	// {
	// 	num:      -221123456.5643,
	// 	v:        3,
	// 	expected: "-221,123,456.564",
	// },
	// {
	// 	num:      0,
	// 	v:        2,
	// 	expected: "0.00",
	// },
	// {
	// 	num:      -0,
	// 	v:        2,
	// 	expected: "0.00",
	// },
	// {
	// 	num:      -0,
	// 	v:        2,
	// 	expected: "0.00",
	// },
	}

	trans := New()

	for _, tt := range tests {
		s := trans.FmtNumber(tt.num, tt.v)
		

# save the ancestors for a block, as well as updating the height
# note: this is internal/private so make it into a macro
macro m_saveAncestors($blockHashArg, $hashPrevBlockArg):
    with $blockHash = $blockHashArg:
        with $hashPrevBlock = $hashPrevBlockArg:
            self.internalBlock[self.ibIndex] = $blockHash
            m_setIbIndex($blockHash, self.ibIndex)
            self.ibIndex += 1

            m_setHeight($blockHash, m_getHeight($hashPrevBlock) + 1)

            # 8 indexes into internalBlock can be stored inside one ancestor (32 byte) word
            $ancWord = 0

            # the first ancestor is the index to hashPrevBlock, and write it to ancWord
            $prevIbIndex = m_getIbIndex($hashPrevBlock)
            m_mwrite32(ref($ancWord), $prevIbIndex)

            # update ancWord with the remaining indexes
            with $i = 1:
                while $i < NUM_ANCESTOR_DEPTHS:
                    with $depth = m_getAncDepth($i):

                        if m_getHeight($blockHash) % $depth == 1:
                            m_mwrite32(ref($ancWord) + 4*$i, $prevIbIndex)
                        else:
                            m_mwrite32(ref($ancWord) + 4*$i, m_getAncestor($hashPrevBlock, $i))
                        $i += 1

            # write the ancestor word to storage
            self.block[$blockHash]._ancestor = $ancWord


# private (to prevent leeching)
# returns 1 if 'txBlockHash' is in the main chain, ie not a fork
# otherwise returns 0
def priv_inMainChain__(txBlockHash):
    if msg.sender != self:
        ~invalid()

    txBlockHeight = m_getHeight(txBlockHash)

    # By assuming that a block with height 0 does not exist, we can do
    # this optimization and immediate say that txBlockHash is not in the main chain.
    # However, the consequence is that
    # the

        {
            "outputFile": "/usr/local/google/home/benweiss/Android/pi-dev/developers/build/prebuilts/gradle/AutofillFramework/Application/build/intermediates/incremental/mergeDebugResources/merged.dir/values-zh-rHK/values-zh-rHK.xml",
            "map": [
                {
                    "source": "/usr/local/google/home/benweiss/.gradle/caches/transforms-1/files-1.1/appcompat-v7-28.0.0-alpha1.aar/c05028a6d48feb825ed288e49596b8db/res/values-zh-rHK/values-zh-rHK.xml",
                    "from": {
                        "startLines": "2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19",
                        "startColumns": "4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4",
                        "startOffsets": "105,200,293,393,475,572,680,756,832,910,1006,1102,1197,1294,1389,1487,1638,1732",
                        "endColumns": "94,92,99,81,96,107,75,75,77,95,95,94,96,94,97,150,93,77",
                        "endOffsets": "195,288,388,470,567,675,751,827,905,1001,1097,1192,1289,1384,1482,1633,1727,1805"
                    }
                },
                {
                    "source": "/usr/local/google/home/benweiss/.gradle/caches/transforms-1/files-1.1/support-compat-28.0.0-alpha1.aar/77db225a0fb1340c5ceeaf0bca144d6f/res/values-zh-rHK/values-zh-rHK.

/* Lzma86Dec.c -- LZMA + x86 (BCJ) Filter Decoder
2016-05-16 : Igor Pavlov : Public domain */

#include "Precomp.h"

#include "Lzma86.h"

#include "Alloc.h"
#include "Bra.h"
#include "LzmaDec.h"

SRes Lzma86_GetUnpackSize(const Byte *src, SizeT srcLen, UInt64 *unpackSize)
{
  unsigned i;
  if (srcLen < LZMA86_HEADER_SIZE)
    return SZ_ERROR_INPUT_EOF;
  *unpackSize = 0;
  for (i = 0; i < sizeof(UInt64); i++)
    *unpackSize += ((UInt64)src[LZMA86_SIZE_OFFSET + i]) << (8 * i);
  return SZ_OK;
}

SRes Lzma86_Decode(Byte *dest, SizeT *destLen, const Byte *src, SizeT *srcLen)
{
  SRes res;
  int useFilter;
  SizeT inSizePure;
  ELzmaStatus status;

  if (*srcLen < LZMA86_HEADER_SIZE)
    return SZ_ERROR_INPUT_EOF;

  useFilter = src[0];

  if (useFilter > 1)
  {
    *destLen = 0;
    return SZ_ERROR_UNSUPPORTED;
  }

  inSizePure = *srcLen - LZMA86_HEADER_SIZE;
  res = LzmaDecode(dest, destLen, src + LZMA86_HEADER_SIZE, &inSizePure,
      src + 1, LZMA_PROPS_SIZE, LZMA_FINISH_ANY, &status, &g_Alloc);
  *srcLen = inSizePure + LZMA86_HEADER_SIZE;
  if (res != SZ_OK)
    return res;
  if (useFilter == 1)
  {
    UInt32 x86State;
    x86_Convert_Init(x86State);
    x86_

// Generate the medium columns
.make-md-column(@columns; @gutter: @grid-gutter-width) {
  position: relative;
  min-height: 1px;
  padding-left:  (@gutter / 2);
  padding-right: (@gutter / 2);

  @media (min-width: @screen-md-min) {
    float: left;
    width: percentage((@columns / @grid-columns));
  }
}
.make-md-column-offset(@columns) {
  @media (min-width: @screen-md-min) {
    margin-left: percentage((@columns / @grid-columns));
  }
}
.make-md-column-push(@columns) {
  @media (min-width: @screen-md-min) {
    left: percentage((@columns / @grid-columns));
  }
}
.make-md-column-pull(@columns) {
  @media (min-width: @screen-md-min) {
    right: percentage((@columns / @grid-columns));
  }
}

// Generate the large columns
.make-lg-column(@columns; @gutter: @grid-gutter-width) {
  position: relative;
  min-height: 1px;
  padding-left:  (@gutter / 2);
  padding-right: (@gutter / 2);

  @media (min-width: @screen-lg-min) {
    float: left;
    width: percentage((@columns / @grid-columns));
  }
}
.make-lg-column-offset(@columns) {
  @media (min-width: @screen-lg-min) {
    margin-left: percentage((@columns / @grid-columns));
  }
}
.make-lg-column-push(@columns) {
  @media (min-width: @screen-lg-min) {
    left: percentage((@columns / @grid-columns));
  }
}
.make-lg-column-pull(@columns) {
  @media (min-width: @screen-lg-min) {
    right: percentage((@columns / @grid

        LeaveCriticalSection(&This->tf.csReceive);
        hr = BaseOutputPinImpl_Deliver((BaseOutputPin*)This->tf.ppPins[1], pOutSample);
        EnterCriticalSection(&This->tf.csReceive);

        if (hr != S_OK && hr != VFW_E_NOT_CONNECTED) {
            if (FAILED(hr))
                ERR("Error sending sample (%x)\n", hr);
            goto error;
        }

error:
        if (unprepare_header && (res = acmStreamUnprepareHeader(This->has, &ash, 0)))
            ERR("Cannot unprepare header %d\n", res);
        unprepare_header = FALSE;
        ash.pbSrc += ash.cbSrcLengthUsed;
        ash.cbSrcLength -= ash.cbSrcLengthUsed;

        IMediaSample_Release(pOutSample);
        pOutSample = NULL;

    }

    This->lasttime_real = tStop;
    This->lasttime_sent = tMed;

    LeaveCriticalSection(&This->tf.csReceive);
    return hr;
}

static HRESULT WINAPI ACMWrapper_SetMediaType(TransformFilter *tf, PIN_DIRECTION dir, const AM_MEDIA_TYPE * pmt)
{
    ACMWrapperImpl* This = impl_from_TransformFilter(tf);
    MMRESULT res;

    TRACE("(%p)->(%i %p)\n", This, dir, pmt);

    if (dir != PINDIR_INPUT)
        return S_OK;

    /* Check root (GUID w/o FOURCC) */
    if ((IsEqualIID(&pmt->majortype, &MEDIATYPE_Audio)) &&
        (!memcmp(((const char *)&pmt->subtype)+4, ((const char *)&MEDIATYPE_Audio)+4, sizeof(GUID)-4)) &&
        (IsEqualIID(&pmt->formattype, &FORMAT_WaveFormatEx)))
    {
        HACMSTREAM drv;
        WAVEFORMATEX *wfx = (WAVEFORMATEX*)pmt->pbFormat;
        AM_MEDIA_TYPE*

com.google.javascript.jscomp.OptimizeArgumentsArrayTest
com.google.javascript.jscomp.OptimizeCallsTest
com.google.javascript.jscomp.OptimizeParametersTest
com.google.javascript.jscomp.OptimizeReturnsTest
com.google.javascript.jscomp.ParallelCompilerPassTest
com.google.javascript.jscomp.PeepholeCollectPropertyAssignmentsTest
com.google.javascript.jscomp.PeepholeFoldConstantsTest
com.google.javascript.jscomp.PeepholeFoldWithTypesTest
com.google.javascript.jscomp.PeepholeIntegrationTest
com.google.javascript.jscomp.PeepholeOptimizationsPassTest
com.google.javascript.jscomp.PeepholeRemoveDeadCodeTest
com.google.javascript.jscomp.PeepholeReplaceKnownMethodsTest
com.google.javascript.jscomp.PeepholeSimplifyRegExpTest
com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntaxTest
com.google.javascript.jscomp.PhaseOptimizerTest
com.google.javascript.jscomp.PrepareAstTest
com.google.javascript.jscomp.ProcessClosurePrimitivesTest
com.google.javascript.jscomp.ProcessCommonJSModulesTest
com.google.javascript.jscomp.ProcessDefinesTest
com.google.javascript.jscomp.ProcessTweaksTest
com.google.javascript.jscomp.PureFunctionIdentifierTest
com.google.javascript.jscomp.RecordFunctionInformationTest
com.google.javascript.jscomp.RemoveTryCatchTest
com.google.javascript.jscomp.RemoveUnusedClassPropertiesTest
com.google.javascript.jscomp.RemoveUnusedNamesTest
com.google.javascript.jscomp.RemoveUnusedPrototypePropertiesTest
com.google.javascript.jscomp.RemoveUnusedVarsTest
com.google.javascript.jscomp.RenameLabelsTest
com.google.javascript.jscomp.RenameLocalVarsTest
com.google.javascript.jscomp.RenamePropertiesTest
com.google.javascript.jscomp.RenamePrototypesTest
com.google.javascript.jscomp.RenameVarsTest
com

    <ProjectGuid>{BCB53643-C8FE-44BE-A009-8BA7D94393AC}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>Gimela.Rukbat.DVM.BusinessLogic</RootNamespace>
    <AssemblyName>Gimela.Rukbat.DVM.BusinessLogic</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>..\..\..\..\..\..\bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Data" />
    <Reference Include="System.Xml" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="Properties\AssemblyInfo.cs" />
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project

/*
 *  Copyright (c) 2009-2010 jMonkeyEngine
 *  All rights reserved.
 * 
 *  Redistribution and use in source and binary forms, with or without
 *  modification, are permitted provided that the following conditions are
 *  met:
 * 
 *  * Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 
 *  * Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 
 *  * Neither the name of 'jMonkeyEngine' nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 * 
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 *  TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 *  PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 *  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 *  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 *  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 *  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 *  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 *  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
package com.jme3.gde.core.properties;

import com.jme3.animation.AudioTrack;
import com.jme3.audio.AudioNode;
import com.jme3.scene.Spatial;
import java.beans.PropertyEditor;
import java.lang.reflect.InvocationTargetException;
import java.util.Iterator;
import java.util.LinkedList;
import org.openide.nodes.PropertySupport;

/**
 *
 * @author normenhansen
 */
public class AudioTrackProperty extends PropertySupport.Read

        }
    };

    class CompareDottedFieldNamesTest {
    public:
        void t( FieldCompareResult res , const string& l , const string& r ) {
            LexNumCmp cmp( true );
            ASSERT_EQUALS( res , compareDottedFieldNames( l , r , cmp ) );
            ASSERT_EQUALS( -1 * res , compareDottedFieldNames( r , l , cmp ) );
        }

        void run() {
            t( SAME , "x" , "x" );
            t( SAME , "x.a" , "x.a" );
            t( SAME , "x.4" , "x.4" );
            t( LEFT_BEFORE , "a" , "b" );
            t( RIGHT_BEFORE , "b" , "a" );
            t( LEFT_BEFORE , "x.04" , "x.4" );

            t( LEFT_SUBFIELD , "a.x" , "a" );
            t( LEFT_SUBFIELD , "a.4" , "a" );
        }
    };

    class CompareDottedArrayFieldNamesTest {
    public:
        void t( FieldCompareResult res , const string& l , const string& r ) {
            LexNumCmp cmp( false ); // Specify numeric comparison for array field names.
            ASSERT_EQUALS( res , compareDottedFieldNames( l , r , cmp ) );
            ASSERT_EQUALS( -1 * res , compareDottedFieldNames( r , l , cmp ) );
        }
        
        void run() {
            t( SAME , "0" , "0" );
            t( SAME , "1" , "1" );
            t( SAME , "0.1" , "0.1" );
            t( SAME , "0.a" , "0.a" );
            t( LEFT_BEFORE , "0" , "1" );
            t( LEFT_BEFORE , "2" , "10" );
            t( RIGHT_BEFORE , "1" , "0" );
            t( RIGHT_BEFORE , "10" , "2" );


func GetRequestURLString(req *http.Request) string {
	if nil == req {
		return ""
	}
	str := req.URL.String()
	if len(req.URL.Scheme) == 0 && strings.EqualFold(req.Method, "Connect") {
		str = fmt.Sprintf("https://%s", req.Host)
	}
	if !strings.HasPrefix(str, "http://") && !strings.HasPrefix(str, "https://") {
		scheme := req.URL.Scheme
		if len(req.URL.Scheme) == 0 {
			scheme = "http"

		}
		str = fmt.Sprintf("%s://%s%s", scheme, req.Host, str)
	}
	return str
}

func PrepareRegexp(rule string) (*regexp.Regexp, error) {
	rule = strings.TrimSpace(rule)
	rule = strings.Replace(rule, ".", "\\.", -1)
	rule = strings.Replace(rule, "?", "\\?", -1)
	rule = strings.Replace(rule, "*", ".*", -1)
	return regexp.Compile(rule)
}

func WildcardMatch(text string, pattern string) bool {
	cards := strings.Split(pattern, "*")
	for _, str := range cards {
		idx := strings.Index(text, str)
		if idx == -1 {
			return false
		}
		text = strings.TrimLeft(text, str+"*")
	}
	return true
}

func ReadWithoutComment(file string, commentPrefix string) ([]byte, error) {
	f, err := os.Open(file)
	if err != nil {
		return nil, err
	}
	defer f.Close()

	var total bytes.Buffer
	scanner := bufio.NewScanner(f)
	for scanner.Scan() {
		line := scanner.Text()
		line = strings.TrimSpace(line)
		if !strings.HasPrefix(line, commentPrefix) {
			total.WriteString(line)
			total.WriteString("\n")
		}
	}
	return total.Bytes

<write><data>9.06757\x0a</data></write>
<read><delim>\x0a</delim><match><data>Invalid simulation data. Try again.\x0a</data></match></read>
<read><delim>\x0a</delim><match><data>Enter Position (x,y):\x0a</data></match></read>
<write><data>140.96264,120.49413\x0a</data></write>
<read><delim>\x0a</delim><match><data>Enter Velocity (x,y):\x0a</data></match></read>
<write><data>6.65113,4.35335\x0a</data></write>
<read><delim>\x0a</delim><match><data>Enter Mass:\x0a</data></match></read>
<write><data>6.54762\x0a</data></write>
<read><delim>\x0a</delim><match><data>Enter Radius:\x0a</data></match></read>
<write><data>6.62444\x0a</data></write>
<read><delim>\x0a</delim><match><data>Particle #4 added at (140.96264,120.49413) velocity(6.65113,4.35335) mass(6.54762) radius(6.62444).\x0a</data></match></read>
<read><delim>\x0a</delim><match><data>Enter Position (x,y):\x0a</data></match></read>
<write><data>382.99455,224.45833\x0a</data></write>
<read><delim>\x0a</delim><match><data>Enter Velocity (x,y):\x0a</data></match></read>
<write><data>5.02268,-1.71990\x0a</data></write>
<read><delim>\x0a</delim><match><data>Enter Mass:\x0a</data></match></read>
<write><data>15.97785\x0a</data></write>
<read><delim>\x0a</

  cd "$saveddir"
  # echo Using m2 at $M2_HOME
fi

# For Cygwin, ensure paths are in UNIX format before anything is touched
if $cygwin ; then
  [ -n "$M2_HOME" ] &&
    M2_HOME=`cygpath --unix "$M2_HOME"`
  [ -n "$JAVA_HOME" ] &&
    JAVA_HOME=`cygpath --unix "$JAVA_HOME"`
  [ -n "$CLASSPATH" ] &&
    CLASSPATH=`cygpath --path --unix "$CLASSPATH"`
fi

# For Migwn, ensure paths are in UNIX format before anything is touched
if $mingw ; then
  [ -n "$M2_HOME" ] &&
    M2_HOME="`(cd "$M2_HOME"; pwd)`"
  [ -n "$JAVA_HOME" ] &&
    JAVA_HOME="`(cd "$JAVA_HOME"; pwd)`"
  # TODO classpath?
fi

if [ -z "$JAVA_HOME" ]; then
  javaExecutable="`which javac`"
  if [ -n "$javaExecutable" ] && ! [ "`expr \"$javaExecutable\" : '\([^ ]*\)'`" = "no" ]; then
    # readlink(1) is not available as standard on Solaris 10.
    readLink=`which readlink`
    if [ ! `expr "$readLink" : '\([^ ]*\)'` = "no" ]; then
      if $darwin ; then
        javaHome="`dirname \"$javaExecutable\"`"
        javaExecutable="`cd \"$javaHome\" && pwd -P`/javac"
      else
        javaExecutable="`readlink -f \"$javaExecutable\"`"
      fi
      javaHome="`dirname \"$javaExecutable\"`"
      javaHome=`expr "$javaHome" : '\(.*\)/bin'`
      JAVA_HOME="$javaHome"
      export JAVA_HOME
    fi
  fi
fi

if [ -z "$JAVACMD" ] ; then


//=============================================================================
//                  GLOBAL TYPEDEFS/CONSTANTS FOR TESTING
//-----------------------------------------------------------------------------

namespace {

struct ConvertibleToSome {
    operator bool() { return false; }
    operator int() { return 1; }
    operator bsl::true_type() { return bsl::true_type(); }
};

struct ConvertibleToAny {
    template <class T>
    operator T() { return T(); }
};

struct ConvertibleToAnyConst {
    template <class T>
    operator T() const { return T(); }
};

}  // close unnamed namespace

//=============================================================================
//                              USAGE EXAMPLES
//-----------------------------------------------------------------------------

///Usage
//------
// In this section we show the intended use of this component.
//
///Example 1: Determine If a Class Has a Template Conversion Operator
///- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
// Suppose that we want to assert whether a particular type has a template
// conversion operator.
//
// First, we define a type with the template conversion operator:
//..
    struct TypeWithTemplateConversion {
        template <class TYPE>
        operator TYPE() {
            return TYPE();
        }
    };
//..

//=============================================================================
//                              MAIN PROGRAM
//-----------------------------------------------------------------------------

int main(int argc, char *argv[])
{
    int                 test = argc > 1 ? atoi(argv[1]) : 0;
    bool             verbose = argc > 2;
    bool         veryVerbose = argc > 3;
    bool     veryVeryVerbose = argc > 4;
    bool veryVeryVeryVerbose = argc > 5;

    (void)veryVerbose;          // suppress warning
    (void)veryVeryVerbose;      // suppress warning
    (void)veryVeryVeryVerbose;  // suppress warning

    setbuf(stdout, NULL);       // Use unbuffered output

    printf("TEST " __FILE__ " CASE %d\n", test);

    switch (test) { case 0:  // Zero is always the leading case.
      case 2: {
        

/**
 * @brief   Atomically commit a previously allocated buffer
 * @details API 1.
 *   Destructive update: Update the queue, bringing the allocated buffer out of
 *   limbo state -- thus completing its enqueue.
 *   Can not fail.
 *   The buffer must have been allocated using mfifo_enqueue_idx_get() or
 *   mfifo_enqueue_get().
 *
 * @param idx[in]   Index one-ahead of previously allocated buffer
 * @param last[out] Write-index
 */
static inline void mfifo_enqueue(uint8_t idx, uint8_t *last)
{
	*last = idx; /* Commit: Update write index */
}

/**
 * @brief   Atomically commit a previously allocated buffer
 * @details API 1
 *   The buffer should have been allocated using MFIFO_ENQUEUE_GET
 * @param idx[in]  Index one-ahead of previously allocated buffer
 */
#define MFIFO_ENQUEUE(name, idx) \
		mfifo_enqueue((idx), &mfifo_##name.l)

/**
 * @brief Number of available buffers
 * @details API 1 and 2
 *   Empty if first == last
 */
static inline uint8_t mfifo_avail_count_get(uint8_t count, uint8_t first, uint8_t last)
{
	if (last >= first) {
		return last - first;
	} else {
		return count - first + last;
	}
}

/**
 * @brief Number of available buffers
 * @details API 1 and 2
 */
#define MFIFO_AVAIL_COUNT_GET(name) \
		mfifo_avail_count_get(mfifo_##name.n, mfifo_##name.f, \
				      mfifo_##name.l)

/**
 * @brief Non-destructive peek
 * @details API 1
 */
static inline void *mfifo_dequeue_get(uint8_t *fifo, uint8_t size, uint8_t first,
				      uint8_t last)
{


    private StorageUsage flowFileRepositoryStorageUsage;
    private Map<String, StorageUsage> contentRepositoryStorageUsage;
    private Map<String, StorageUsage> provenanceRepositoryStorageUsage;
    private Map<String, GarbageCollection> garbageCollection;

    private long creationTimestamp;

    public void setTotalNonHeap(final long totalNonHeap) {
        this.totalNonHeap = totalNonHeap;
    }

    public void setUsedNonHeap(final long usedNonHeap) {
        this.usedNonHeap = usedNonHeap;
    }

    public void setMaxNonHeap(final long maxNonHeap) {
        this.maxNonHeap = maxNonHeap;
    }

    public void setTotalHeap(final long totalHeap) {
        this.totalHeap = totalHeap;
    }

    public void setUsedHeap(final long usedHeap) {
        this.usedHeap = usedHeap;
    }

    public void setMaxHeap(final long maxHeap) {
        this.maxHeap = maxHeap;
    }

    public void setAvailableProcessors(final int availableProcessors) {
        this.availableProcessors = availableProcessors;
    }

    public void setProcessorLoadAverage(final Double processorLoadAverage) {
        this.processorLoadAverage = processorLoadAverage;
    }

    public void setTotalThreads(final int totalThreads) {
        this.totalThreads = totalThreads;
    }

    public void setDaemonThreads(final int daemonThreads) {
        this.daemonThreads = daemonThreads;
    }

    public void setFlowFileRepositoryStorageUsage(final StorageUsage flowFileRepositoryStorageUsage) {
        this.flowFileRepositoryStorageUsage = flowFileRepositoryStorageUsage;
    }

    public void setContentRepositoryStorageUsage(final Map<String, StorageUsage> contentRepositoryStorageUsage) {
        this.contentRepositoryStorageUsage = contentRepositoryStorageUsage;
    }

    public void setProvenanceRepositoryStorageUsage(final Map<String, StorageUsage> provenanceRepositoryStorageUsage) {
        this.provenanceRepositoryStorageUsage = provenanceRepositoryStorageUsage

		/** Fit calibration parameters for multiclass labels. Fits sigmoid
		* parameters for each class seperately.
		* @param predictions The predictions outputted by the machine
		* @param targets The true labels corresponding to the predictions
		* @return Indicates whether the calibration was succesful
		**/
		bool fit_multiclass(
		    std::shared_ptr<MulticlassLabels> predictions, std::shared_ptr<MulticlassLabels> targets) override;

		/** Calibrate multiclass predictions based on parameters learned by
		*calling fit.
		* The predictions are normalized over all classes.
		* @param predictions The predictions outputted by the machine
		* @return Calibrated binary labels
		**/
		std::shared_ptr<MulticlassLabels>
		calibrate_multiclass(std::shared_ptr<MulticlassLabels> predictions) override;

		/** Set maximum number of iterations
		* @param maxiter maximum number of iterations
		*/
		void set_maxiter(index_t maxiter);

		/** Get max iterations
		* @return maximum number of iterations
		*/
		index_t get_maxiter();

		/** Set min step
		* @param minstep min step taken in line search
		*/
		void set_minstep(float64_t minstep);

		/** Get min step
		* @return minimum steps taken in line search
		*/
		float64_t get_minstep();

		/** Set sigma
		* @param sigma Set to a value greater than 0 to ensure that the Hessian
		* matrix is positive semi-definite
		*/
		void set_sigma(float64_t sigma);

		/** Get sigma
		* @return sigma
		*/
		float64_t get_sigma();

		/** Get epsilon
		* @param epsilon stopping criteria
		*/
		void set_epsilon(float64_t epsilon);

		/** Get epsilon
		* @return stopping critera
		*/
		float64_t get_epsilon();

	private:
		/** Initialize parameters */
		void init();

		/** Helper function that calibrates values of given vector using the
		* given sigmoid parameters
		*

    my $bucket = $testdb->get_gridfsbucket;
    $bucket->drop;
    is( $bucket->_files->find_one,  undef, "drop leaves files empty" );
    is( $bucket->_chunks->find_one, undef, "drop leaves chunks empty" );

}

# index creation
{
    my $bucket = $testdb->get_gridfsbucket;
    $bucket->drop;
    $bucket = $testdb->get_gridfsbucket;

    cmp_deeply( [ $bucket->_chunks->indexes->list->all ],
        [], "new bucket doesn't create indexes" );

    my $img = new IO::File( $pngfile, "r" ) or die $!;
    binmode($img);
    $img_id = $bucket->upload_from_stream( 'data.bin', $img );
    $img->close;

    my %files_idx  = map { $_->{name} => $_ } $bucket->_files->indexes->list->all;
    my %chunks_idx = map { $_->{name} => $_ } $bucket->_chunks->indexes->list->all;

    my $idx;
    $idx = $files_idx{"filename_1_uploadDate_1"};
    ok(
        $idx && $idx->{unique},
        "unique files index on filename+uploadDate created"
    ) or diag explain $idx;

    $idx = $idx = $chunks_idx{"files_id_1_n_1"};
    ok(
        $idx && $idx->{unique},
        "unique chunks index on files_id+n created"
    ) or diag explain $idx;

    # subsequent writes should not trigger index creation
    no warnings 'redefine';
    local *MongoDB::IndexView::create_one = sub { die "re-indexing shouldn't be called" };

    # next insert should not recreate index
    eval {
        $img = new IO::File( $pngfile, "r" ) or die $!;
        binmode($img);
        $img_id = $bucket->upload_from_stream( 'img2.png',

open TwoConstancyElim public using () renaming (f to TwoConstancy-elim)

module TwoConstancyRec
  {i} {A : Type i}
  {l} {P : Type l}
  (p : is-gpd P)
  (point* : ∀ a → P)
  (link₀* : ∀ a₁ a₂ → point* a₁ == point* a₂)
  (link₁* : ∀ a₁ a₂ a₃
            → link₀* a₁ a₂ ∙' link₀* a₂ a₃
           == link₀* a₁ a₃) where

  private
    module M = TwoConstancyElim {A = A}
      {l = l} {P = λ _ → P}
      (λ _ → p)
      point*
      (λ a₁ a₂ → ↓-cst-in (link₀* a₁ a₂))
      (λ a₁ a₂ a₃
        → ↓-cst-in-∙' (link₀ a₁ a₂) (link₀ a₂ a₃) (link₀* a₁ a₂) (link₀* a₂ a₃)
       !◃ ↓-cst-in2 (link₁* a₁ a₂ a₃))

  f : TwoConstancy A → P
  f = M.f

  link₀-β : ∀ a₁ a₂ → ap f (link₀ a₁ a₂) == link₀* a₁ a₂
  link₀-β a₁ a₂ = apd=cst-in {f = f} $ M.link₀-β a₁ a₂

  private
    lemma : ∀ a₁ a₂ a₃
          → ap f (link₀ a₁ a₂ ∙' link₀ a₂ a₃)
         == link₀* a₁ a₂ ∙' link₀* a₂ a₃
    lemma a

2011/05/17 - v1.05
================================
-Fixed sense code and response code handling.
-Removed some of the unused structures from scsi.h.
-Removed the volatile keyword from variables that have it, but their values are in no way adjusted by hardware.

2011/05/25 - v1.06
================================
-Fixed sense code and response code handling yet again.
-Shifted the READ CAPACITY command to immediately after the INQUIRY command. This is to prevent some devices with a Prolific chipset from malfunctioning.
-Removed calls to READ SENSE. RBC enclosures might DIE after receiving such a command since they might not support it and were not well programmed to handle unimplemented commands. :(
-Corrected the capacity calculation code and related structures to use UNSIGNED LONG integers instead of SIGNED integers.

2011/05/27 - v1.06
================================
-Corrected the formatting of one of the debug messages (Line 505 of sbp2_driver.c).
-Corrected yet again the sense and response code handling code, so that errors that occur during READ SECTOR operations would no longer go unnoticed.

2011/05/29 - v1.06A
================================
-Fixed the max_payload field of all ORBs. Previously, all transactions will have a max_payload size of 9, which might not be a good thing for S100 and S200 transactions.
-Fixed a bug in the code that parses the configuration ROM of the SBP-2 devices. If the Unit Directory offset was not the first entry within the Root Directory, there was quite a good chance that the offsets will be miscalculated.
-The waiting time between the bus reset and initialization of all devices on the bus was reduced from 600000 usec to 500000 usec.

2011/06/28 - v1.06B
================================
-The WRITE sector SCSI command function has been fixed, but is still untested.

2011/08/11 - v1.06C
================================
-Removed old testing code in sbp2_driver.c: The payload size was always that of the S100 transfer mode.
-Declaration the device name in main.c as const.
-Edited main.c to make it neater.

2011/08/12 - v1.06C1

/*
 * Copyright (c) 1988, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 * $FreeBSD: src/lib/libc/gen/wait.c,v 1.3.2.1 2000/03/18 23:13:25 jasone Exp $
 *
 * @(#)wait.c	8.1 (Berkeley) 6/4/93
 */

#include "namespace.h"
#include <sys/types.h>
#include <sys/time.h>
#include <sys/wait.h>
#include <sys/resource.h>
#include "un-namespace.h"

pid_t __wait(int *);

pid_t
__wait(int *istat)
{
	return (_wait4(WAIT_ANY, ist

        <Button x:Name="ButtonR1" Content="R1" HorizontalAlignment="Left" Margin="21,11,0,0" VerticalAlignment="Top" Width="120" Click="ButtonR1_Click" />
        <WindowsFormsHost x:Name="HostR1" Height="25" Margin="154,11,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" Width="132"/>
        <Button x:Name="ButtonR2" Content="R2" HorizontalAlignment="Left" Margin="21,41,0,0" VerticalAlignment="Top" Width="120" Click="ButtonR2_Click" />
        <WindowsFormsHost x:Name="HostR2" Height="25" Margin="154,41,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" Width="132"/>
        <Button x:Name="ButtonR3" Content="R3" HorizontalAlignment="Left" Margin="21,71,0,0" VerticalAlignment="Top" Width="120" Click="ButtonR3_Click" />
        <WindowsFormsHost x:Name="HostR3" Height="25" Margin="154,71,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" Width="132"/>
        <Button x:Name="ButtonR4" Content="R4" HorizontalAlignment="Left" Margin="21,101,0,0" VerticalAlignment="Top" Width="120" Click="ButtonR4_Click" />
        <WindowsFormsHost x:Name="HostR4" Height="25" Margin="154,101,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" Width="132"/>
        <Button x:Name="ButtonS1" Content="S1" HorizontalAlignment="Left" Margin="301,11,0,0" VerticalAlignment="Top" Width="120" Click="ButtonS1_Click" />
        <WindowsFormsHost x:Name="HostS1" Height="25" Margin="434,11,16,0" VerticalAlignment="Top"/>
        <Button x:Name="ButtonS2" Content="S2" HorizontalAlignment="Left" Margin="301,41,0,0" VerticalAlignment="Top" Width="120" Click="ButtonS2_Click" />


    def __repr__(self):
        return 'Fake(version={version}, deps={deps})'.format(
            version=self.version,
            deps=self.deps,
        )


def make_root(root, **releases) -> RootDependency:
    release_objects = []
    for name, fakes in releases.items():
        for fake in fakes:
            release = Release(
                raw_name=name,
                version=str(fake.version),
                time=DEFAULT_TIME,
            )
            release_objects.append(release)
            for extra in fake.extras:
                release = Release(
                    raw_name=name,
                    extra=extra,
                    version=str(fake.version),
                    time=DEFAULT_TIME,
                )

    constraints = defaultdict(dict)
    for name, fakes in releases.items():
        for fake in fakes:
            constraints[name][fake.version] = tuple(PackagingRequirement(dep) for dep in fake.deps)
            for extra, deps in fake.extras.items():
                cname = '{}[{}]'.format(name, extra)
                constraints[cname][fake.version] = tuple(PackagingRequirement(dep) for dep in deps)

    repo = ReleaseRepo(*release_objects, deps=constraints)

    deps = []
    root_dep = RootDependency(raw_name=''.join(sorted(releases)))
    root_dep.repo = repo
    for constr in root.deps:
        subdeps = DependencyMaker.from_requirement(
            req=PackagingRequirement(constr),
            source=root_dep,
        )
        for dep in subdeps:
            dep.repo = repo
        deps.extend(subdeps)
    root_dep.attach_dependencies(deps)
    return root_dep


def set_envs(root: RootDependency, dep_name: str, envs: str) -> None:
    for dep in root.dependencies:
        if dep.name == dep_name:
            dep.envs = envs
            

// Copyright 2009 The Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// +build !gccgo

#include "textflag.h"

//
// System calls for AMD64, Linux
//

// Just jump to package syscall's implementation for all these functions.
// The runtime may know about them.

TEXT ·Syscall(SB),NOSPLIT,$0-56
	JMP	syscall·Syscall(SB)

TEXT ·Syscall6(SB),NOSPLIT,$0-80
	JMP	syscall·Syscall6(SB)

TEXT ·SyscallNoError(SB),NOSPLIT,$0-48
	CALL	runtime·entersyscall(SB)
	MOVQ	a1+8(FP), DI
	MOVQ	a2+16(FP), SI
	MOVQ	a3+24(FP), DX
	MOVQ	$0, R10
	MOVQ	$0, R8
	MOVQ	$0, R9
	MOVQ	trap+0(FP), AX	// syscall entry
	SYSCALL
	MOVQ	AX, r1+32(FP)
	MOVQ	DX, r2+40(FP)
	CALL	runtime·exitsyscall(SB)
	RET

TEXT ·RawSyscall(SB),NOSPLIT,$0-56
	JMP	syscall·RawSyscall(SB)

TEXT ·RawSyscall6(SB),NOSPLIT,$0-80
	JMP	syscall·RawSyscall6(SB)

TEXT ·RawSyscallNoError(SB),NOSPLIT,$0-48
	MOVQ	a1+8(FP), DI
	MOVQ	a2+16(FP), SI
	MOVQ	a3+24(FP), DX
	MOVQ	$0, R10
	MOVQ	$0, R8
	MOVQ	$0, R9
	MOVQ	trap+0(FP), AX	// syscall entry
	SYSCALL
	MOVQ	AX, r1+32(FP)
	MOVQ	DX, r2+40(FP)
	RET

TEXT ·

// HeadersConfig contains the values for the header keys that Jaeger will use.
// These values may be either custom or default depending on whether custom
// values were provided via a configuration.
type HeadersConfig struct {
	// JaegerDebugHeader is the name of HTTP header or a TextMap carrier key which,
	// if found in the carrier, forces the trace to be sampled as "debug" trace.
	// The value of the header is recorded as the tag on the root span, so that the
	// trace can be found in the UI using this value as a correlation ID.
	JaegerDebugHeader string `yaml:"jaegerDebugHeader"`

	// JaegerBaggageHeader is the name of the HTTP header that is used to submit baggage.
	// It differs from TraceBaggageHeaderPrefix in that it can be used only in cases where
	// a root span does not exist.
	JaegerBaggageHeader string `yaml:"jaegerBaggageHeader"`

	// TraceContextHeaderName is the http header name used to propagate tracing context.
	// This must be in lower-case to avoid mismatches when decoding incoming headers.
	TraceContextHeaderName string `yaml:"TraceContextHeaderName"`

	// TraceBaggageHeaderPrefix is the prefix for http headers used to propagate baggage.
	// This must be in lower-case to avoid mismatches when decoding incoming headers.
	TraceBaggageHeaderPrefix string `yaml:"traceBaggageHeaderPrefix"`
}

// ApplyDefaults sets missing configuration keys to default values
func (c *HeadersConfig) ApplyDefaults() *HeadersConfig {
	if c.JaegerBaggageHeader == "" {
		c.JaegerBaggageHeader = JaegerBaggageHeader
	}
	if c.JaegerDebugHeader == "" {
		c.JaegerDebugHeader = JaegerDebugHeader
	}
	if c.TraceBaggageHeaderPrefix == "" {
		c.TraceBaggageHeaderPrefix = TraceBaggageHeaderPrefix
	}
	if c.TraceContextHeaderName == "" {
		c.TraceContextHeaderName = TraceContextHeaderName
	}
	return c
}

func getDefaultHeadersConfig() *HeadersConfig {
	return &HeadersConfig{
		JaegerDebugHeader:        JaegerDebugHeader,
		JaegerBaggageHeader

		$a = array(
			'page-hide' => $this->_('Hide/unhide pages'),
			'page-publish' => $this->_('Publish/unpublish pages or edit already published pages'),
			'page-edit-created' => $this->_('Edit only pages user has created'),
			'page-edit-trash-created' => $this->_('User can trash pages they created (without page-delete permission).'), 
			'page-edit-images' => $this->_('Use the image editor to manipulate (crop, resize, etc.) images'),
			'page-rename' => $this->_('Change the name of published pages they are allowed to edit'),
			'user-admin-all' => $this->_('Administer users in any role (except superuser)'),
		);

		foreach($this->wire('roles') as $role) {
			if($role->name == 'guest' || $role->name == 'superuser') continue;
			$a["user-admin-$role->name"] = sprintf($this->_('Administer users in role: %s'), $role->name);
		}

		$languages = $this->wire('languages');
		if($languages) {
			$label = $this->_('Edit fields on a page in language: %s');
			$alsoLabel = $this->_('(also required to create or delete pages)');
			$a["page-edit-lang-default"] = sprintf($label, 'default') . ' ' . $alsoLabel;
			$a["page-edit-lang-none"] = $this->_('Edit single-language fields on multi-language page'); 
			foreach($languages as $language) {
				if($language->isDefault()) continue;
				$a["page-edit-lang-$language->name"] = sprintf($label, $language->name);
			}
			if(!$this->has('lang-edit')) {
				$a["lang-edit"] = $this->_('Administer languages and static translation files');
			}
		}

		if($omitInstalled) {
			// remove permissions that are already in the system
			foreach($a as $name => $label) {
			

	dev = acpi_get_pci_dev(handle);
	if (!dev || !dev->subordinate)
		goto out;

	/* check if this bridge has ejectable slots */
	if ((detect_ejectable_slots(handle) > 0)) {
		dbg("found PCI-to-PCI bridge at PCI %s\n", pci_name(dev));
		add_p2p_bridge(handle);
	}

	/* search P2P bridges under this p2p bridge */
	status = acpi_walk_namespace(ACPI_TYPE_DEVICE, handle, (u32)1,
				     find_p2p_bridge, NULL, NULL, NULL);
	if (ACPI_FAILURE(status))
		warn("find_p2p_bridge failed (error code = 0x%x)\n", status);

 out:
	pci_dev_put(dev);
	return AE_OK;
}


/* find hot-pluggable slots, and then find P2P bridge */
static int add_bridge(acpi_handle handle)
{
	acpi_status status;
	unsigned long long tmp;
	acpi_handle dummy_handle;

	/* if the bridge doesn't have _STA, we assume it is always there */
	status = acpi_get_handle(handle, "_STA", &dummy_handle);
	if (ACPI_SUCCESS(status)) {
		status = acpi_evaluate_integer(handle, "_STA", NULL, &tmp);
		if (ACPI_FAILURE(status)) {
			dbg("%s: _STA evaluation failure\n", __func__);
			return 0;
		}
		if ((tmp & ACPI_STA_FUNCTIONING) == 0)
			/* don't register this object */
			return 0;
	}

	/* check if this bridge has ejectable slots */
	if (detect_ejectable_slots(handle) > 0) {
		dbg("found PCI host-bus bridge with hot-pluggable slots\n");
		add_host_bridge(handle);
	}

	/* search P2P bridges under this host bridge */
	status = acpi_walk_namespace(ACPI

    public void setMode(Mode mode) {
        if (mDragHelper.getViewDragState() == ViewDragHelper.STATE_SETTLING) {
            return;
        }
        //如果点击了月模式并且当前模式不是月模式的话
        if (mode.equals(Mode.MONTH)) {
            // 月模式切月模式
            if (currentMode.equals(Mode.MONTH)) {
                isModeChange = false;
            }
            //周模式切月模式
            if (currentMode.equals(Mode.WEEK)) {
                isModeChange = true;
            }
            setWeek2MonthMode();
            return;
        }
        if (mode.equals(Mode.WEEK)) {

            //周模式切周模式
            if (currentMode.equals(Mode.WEEK)) {
                isModeChange = false;
            }
            //月模式切周模式
            if (currentMode.equals(Mode.MONTH)) {
                isModeChange = true;
            }
            setMonth2WeekMode();

        }

    }


    private boolean animatStart;

    public void setAnimatStart(boolean animatStart) {
        this.animatStart = animatStart;
    }

    public boolean isAnimatStart() {
        return  animatStart;
    }

    //把calendarView移动到周模式的高度
    private void setCalendarView2WeekMode() {
        animatStart = true;
        setTransYObjectAnimator(mCalendarViewMonth, mCalendarViewMonth.getTranslationY(), singleItemHight - defaultStopHeight, DEFAULT_INTERVAL, new SlideAnimatorlistener() {
            @Override
            public void onAnimationStart(Animator animator) {

            }

            @Override
            public void onAnimationEnd(Animator animator) {
                mCalendarViewWeek.setVisibility(VISIBLE);
                mCalendarViewMonth.clearAnimation();
                //动画播放完毕说明已经滚动到了顶部
                animatStart =

v 0.006276 0.045745 0.061981
v 0.005162 0.042984 0.064197
v 0.008473 0.036257 0.066389
v 0.005300 0.048596 0.065930
v 0.009335 0.052806 0.066600
v 0.020627 0.053629 0.076683
v 0.021043 0.053001 0.070557
v 0.019006 0.054481 0.071592
v 0.018166 0.056562 0.076268
v 0.015982 0.059052 0.080632
v 0.017937 0.055730 0.081298
v 0.015363 0.054154 0.067982
v 0.013404 0.057093 0.073827
v 0.008680 0.055525 0.073324
v 0.007337 0.058509 0.077910
v 0.011581 0.060083 0.078676
v 0.010501 0.054190 0.069055
v 0.015207 0.053270 0.066159
v 0.014604 0.057705 0.084398
v 0.014092 0.060229 0.082945
v 0.010162 0.061837 0.081968
v 0.009040 0.059382 0.085003
v 0.023437 0.046698 0.070206
v 0.020415 0.050734 0.077974
v 0.016744 0.052626 0.082657
v 0.013449 0.054893 0.085430
v 0.017655 0.047791 0.079833
v 0.014542 0.050235 0.082897
v 0.011232 0.051961 0.085151
v 0.013397 0.045368 0.080607
v 0.011353 0.048381 0.083120
v 0.018260 0.038713 0.070338
v 0.021995 0.041553 0.069475
v 0.010034

0 0.00241547 0.0072464
1 0.00241547 0.859903
2 0.0217392 0.84058
3 0.0434783 0.891304
4 0.0845411 0.905797
5 0.108696 0.884058
6 0.135266 0.932367
7 0.205314 0.954106
8 0.258454 0.934783
9 0.23913 0.86715
10 0.36715 0.884058
11 0.451691 0.881643
12 0.485507 0.857488
13 0.528986 0.879227
14 0.545894 0.900966
15 0.545894 0.971014
16 0.57971 0.997585
17 0.642512 1
18 0.676328 0.958937
19 0.652174 0.886473
20 0.763285 0.879227
21 0.741546 0.939614
22 0.794686 0.949275
23 0.871981 0.925121
24 0.925121 0.903382
25 1 0.86715
26 0.995169 0
27 0 0.00483093
SURF 0x20
mat 0
refs 3
21 0.741546 0.939614
22 0.794686 0.949275
20 0.763285 0.879227
SURF 0x20
mat 0
refs 3
26 0.995169 0
27 0 0.00483093
25 1 0.86715
SURF 0x20
mat 0
refs 3
22 0.794686 0.949275
23 0.871981 0.925121
20 0.763285 0.879227
SURF 0x20
mat 0
refs 3
8 0.258454 0.934783
9 0.23913 0.86715
7 0.205314 0.954106
SURF 0x20
mat 0
refs 3
7 0.205314 0.954106
9 0.23913 0.86715


package LeetCode.string.ImplementStrStr_28;

/*
28. Implement strStr()
https://leetcode.com/problems/implement-strstr/

Implement strStr().

Returns the index of the first occurrence of needle in haystack, or -1 if needle is not part of haystack.
*/
public class Solution {
    // Good solution
    // https://discuss.leetcode.com/topic/18839/elegant-java-solution
    // n - haystack length, m - needle length;
    // Time complexity O(n*m) space complexity just for init data - O(n*m)
    public int strStr1(String haystack, String needle) {
        int haystackLen = haystack.length();
        int needleLen = needle.length();
        if (needleLen>haystackLen) return -1;
        if (needleLen==0) return 0;
        Character nFirst = needle.charAt(0);
        for (int i=0; i<haystack.length(); i++) {
            if (haystack.charAt(i) == nFirst) {
                if (needleLen == 1) return i;
                boolean found = true;
                for (int j=1; j<needleLen; j++) {
                    if (i+j>=haystackLen || haystack.charAt(i+j) != needle.charAt(j)) {
                        found = false;
                        break;
                    }
                }
                if (found) return i;
            }
        }
        return -1;
    }

    public int strStr(String haystack, String needle) {
        int m = haystack.length();
        int n = needle.length();
        int mPointer = 0;
        int nPointer = 0;
        if (n == 0) return 0;
        while (mPointer < m && nPointer < n) {
            int lastStart = mPointer;
            while (mPointer < m && nPointer < n && haystack.charAt(mPointer) == needle.charAt(nPointer)) {
                mPointer++;
                nPointer++;
            }
            if (

#include <linux/kernel.h>
#include <linux/wait.h>

#include "rcar_cmm.h"
#include "rcar_du_crtc.h"
#include "rcar_du_group.h"
#include "rcar_du_vsp.h"

struct clk;
struct device;
struct drm_device;
struct drm_property;
struct rcar_du_device;
struct rcar_du_encoder;

#define RCAR_DU_FEATURE_CRTC_IRQ_CLOCK	BIT(0)	/* Per-CRTC IRQ and clock */
#define RCAR_DU_FEATURE_VSP1_SOURCE	BIT(1)	/* Has inputs from VSP1 */
#define RCAR_DU_FEATURE_INTERLACED	BIT(2)	/* HW supports interlaced */
#define RCAR_DU_FEATURE_TVM_SYNC	BIT(3)	/* Has TV switch/sync modes */

#define RCAR_DU_QUIRK_ALIGN_128B	BIT(0)	/* Align pitches to 128 bytes */

/*
 * struct rcar_du_output_routing - Output routing specification
 * @possible_crtcs: bitmask of possible CRTCs for the output
 * @port: device tree port number corresponding to this output route
 *
 * The DU has 5 possible outputs (DPAD0/1, LVDS0/1, TCON). Output routing data
 * specify the valid SoC outputs, which CRTCs can drive the output, and the type
 * of in-SoC encoder for the output.
 */
struct rcar_du_output_routing {
	unsigned int possible_crtcs;
	unsigned int port;
};

/*
 * struct rcar_du_device_info - DU model-specific information
 * @gen: device generation (2 or 3)
 * @features: device features (RCAR_DU_FEATURE_*)
 * @quirks: device quirks (RCAR_DU_QUIRK_*)
 * @channels_mask: bit mask of available DU channels
 * @routes: array of CRTC to output routes, indexed by output (RC

// Components
import VDivider from '../VDivider'

// Utilities
import {
  createLocalVue,
  mount,
  Wrapper,
} from '@vue/test-utils'

describe('VDivider', () => {
  let mountFunction: (options?: object) => Wrapper<Vue>
  let localVue: typeof Vue

  beforeEach(() => {
    localVue = createLocalVue()

    mountFunction = (options = {}) => {
      return mount(VDivider, {
        localVue,
        ...options,
      })
    }
  })

  it('should render component and match snapshot', () => {
    const wrapper = mountFunction()

    expect(wrapper.html()).toMatchSnapshot()
  })

  it('should render an inset component', () => {
    const wrapper = mountFunction({
      propsData: { inset: true },
    })

    expect(wrapper.classes('v-divider--inset')).toBe(true)
  })

  it('should render a light component', () => {
    const wrapper = mountFunction({
      propsData: { light: true },
    })

    expect(wrapper.classes('theme--light')).toBe(true)
  })

  it('should render a dark component', () => {
    const wrapper = mountFunction({
      propsData: { dark: true },
    })

    expect(wrapper.classes('theme--dark')).toBe(true)
  })

  it('should render a vertical component', () => {
    const wrapper = mountFunction({
      propsData: { vertical: true },
    })

    expect(wrapper.classes('v-divider--vertical')).toBe(true)
  })

  it('should have separator role by default', () => {
    const wrapper = mountFunction()

    expect(wrapper.attributes('role')).toBe('separator')
  })

  it('should have aria-orientation horizontal by default', () => {
    const wrapper = mountFunction()

    expect(wrapper.attributes('aria-orientation')).toBe('horizontal')
  })

  it('should have aria-orientation vertical if vertical prop is set', () => {
    const wrapper

BGFX_C_API void bgfx_set_instance_data_from_dynamic_vertex_buffer(bgfx_dynamic_vertex_buffer_handle_t _handle, uint32_t _startVertex, uint32_t _num)
{
	union { bgfx_dynamic_vertex_buffer_handle_t c; bgfx::DynamicVertexBufferHandle cpp; } handle = { _handle };
	bgfx::setInstanceDataBuffer(handle.cpp, _startVertex, _num);
}

BGFX_C_API void bgfx_set_instance_count(uint32_t _numInstances)
{
	bgfx::setInstanceCount(_numInstances);
}

BGFX_C_API void bgfx_set_texture(uint8_t _stage, bgfx_uniform_handle_t _sampler, bgfx_texture_handle_t _handle, uint32_t _flags)
{
	union { bgfx_uniform_handle_t c; bgfx::UniformHandle cpp; } sampler = { _sampler };
	union { bgfx_texture_handle_t c; bgfx::TextureHandle cpp; } handle = { _handle };
	bgfx::setTexture(_stage, sampler.cpp, handle.cpp, _flags);
}

BGFX_C_API void bgfx_touch(bgfx_view_id_t _id)
{
	bgfx::touch((bgfx::ViewId)_id);
}

BGFX_C_API void bgfx_submit(bgfx_view_id_t _id, bgfx_program_handle_t _program, uint32_t _depth, bool _preserveState)
{
	union { bgfx_program_handle_t c; bgfx::ProgramHandle cpp; } program = { _program };
	bgfx::submit((bgfx::ViewId)_id, program.cpp, _depth, _preserveState);
}

BGFX_C_API void bgfx_submit_occlusion_query(bgfx_view_id_t _id, bgfx_program_handle_t _program, bgfx_occlusion_query_handle_t _occlusionQuery, uint

    QTextHtmlParserNode *node = newNode(p);

    // parse tag name
    node->tag = parseWord().toLower();

    const QTextHtmlElement *elem = lookupElementHelper(node->tag);
    if (elem) {
        node->id = elem->id;
        node->displayMode = elem->displayMode;
    } else {
        node->id = Html_unknown;
    }

    node->attributes.clear();
    // _need_ at least one space after the tag name, otherwise there can't be attributes
    if (pos < len && txt.at(pos).isSpace())
        node->attributes = parseAttributes();

    // resolveParent() may have to change the order in the tree and
    // insert intermediate nodes for buggy HTML, so re-initialize the 'node'
    // pointer through the return value
    node = resolveParent();
    resolveNode();

    const int nodeIndex = nodes.count() - 1; // this new node is always the last
#ifndef QT_NO_CSSPARSER
    node->applyCssDeclarations(declarationsForNode(nodeIndex), resourceProvider);
#endif
    applyAttributes(node->attributes);

    // finish tag
    bool tagClosed = false;
    while (pos < len && txt.at(pos) != QLatin1Char('>')) {
        if (txt.at(pos) == QLatin1Char('/'))
            tagClosed = true;

        pos++;
    }
    pos++;

    // in a white-space preserving environment strip off a initial newline
    // since the element itself already generates a newline
    if ((node->wsm == QTextHtmlParserNode::WhiteSpacePre
         || node->wsm == QTextHtmlParserNode::WhiteSpacePreWrap)
        && node->isBlock()) {
        if (pos < len - 1 && txt.at(pos) == QLatin1Char('\n'))
            ++pos;
    }

    if (node->mayNotHaveChildren() || tagClosed) {
        newNode(node->parent);
        resolveNode();
    }
}

// parses a tag beginning with "/"
void QTextHtmlParser::parseCloseTag()


/*
Copyright 2016 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

package authorizerfactory

import (
	"context"
	"errors"

	"k8s.io/apiserver/pkg/authentication/user"
	"k8s.io/apiserver/pkg/authorization/authorizer"
)

// alwaysAllowAuthorizer is an implementation of authorizer.Attributes
// which always says yes to an authorization request.
// It is useful in tests and when using kubernetes in an open manner.
type alwaysAllowAuthorizer struct{}

func (alwaysAllowAuthorizer) Authorize(ctx context.Context, a authorizer.Attributes) (authorized authorizer.Decision, reason string, err error) {
	return authorizer.DecisionAllow, "", nil
}

func (alwaysAllowAuthorizer) RulesFor(user user.Info, namespace string) ([]authorizer.ResourceRuleInfo, []authorizer.NonResourceRuleInfo, bool, error) {
	return []authorizer.ResourceRuleInfo{
			&authorizer.DefaultResourceRuleInfo{
				Verbs:     []string{"*"},
				APIGroups: []string{"*"},
				Resources: []string{"*"},
			},
		}, []authorizer.NonResourceRuleInfo{
			&authorizer.DefaultNonResourceRuleInfo{
				Verbs:           []string{"*"},
				NonResourceURLs: []string{"*"},
			},
		}, false, nil
}

func NewAlwaysAllowAuthorizer() *alwaysAllowAuthorizer {
	return new(alwaysAllowAuthorizer)
}

// alwaysDenyAuthorizer is an implementation of authorizer.Attributes
// which always says no to an authorization request.
// It

    this.state = {
      chipTwo: true,
    }
  }
  render() {
    return (
      <View style={{flexDirection: 'row', alignItems: 'center', justifyContent: 'space-between', flexWrap: 'wrap'}}>    
          <Chip 
            text={'Mood'}
            leftIcon={<Icon name="mood" color={'#4CAF50'} />}
            rightIcon={<Icon name="mood-bad" color={'#F44336'} />}
            onPress={() => console.log('Mood')}
          />       
          <Chip
              text={'Delete me'}
              visible={this.state.chipTwo}
              onDelete={() => this.setState({chipTwo: false})}
              rightIcon={<Icon name="face" color={'#666666'} />}
          />
          <Chip
              text={'Alaska'}
              color={'#009688'}
              rightIcon={<IconButton name="place" color={'white'} onPress={() => console.log('clicked second right icon')} />}
              />
          <Chip
              text={'User'}
              themeColor={'primary'}
              onPress={() => console.log('clicked four')}
              visible={this.state.chipFour}
              onDelete={() => this.setState({chipFour: false})}
              leftIcon={<Avatar 
                type="image" 
                image={<Image source={{uri: 'https://avatars1.githubusercontent.com/u/12564956?s=460&v=4'}} /> } 
              />}
          />
          <Chip 
              text={'Click me'}
              chipStyle={'outlined'}
              themeColor={'primary'} 
              onPress={() => console.log('clicked five')}
              leftIcon={<Avatar 
                type="text" 
                content="MP" 
                />
              }
          />
          <Chip 
              text={'Biking'}
              chipStyle={'outlined'}
              themeColor={'secondary'}
              leftIcon={<Icon name="directions-bike" color={'#

use Payum\Core\Bridge\Spl\ArrayObject;
use Payum\Core\GatewayFactory;
use Payum\Paypal\ExpressCheckout\Nvp\Action\Api\ConfirmOrderAction;
use Payum\Paypal\ExpressCheckout\Nvp\Action\Api\CreateRecurringPaymentProfileAction;
use Payum\Paypal\ExpressCheckout\Nvp\Action\Api\DoCaptureAction;
use Payum\Paypal\ExpressCheckout\Nvp\Action\Api\DoExpressCheckoutPaymentAction;
use Payum\Paypal\ExpressCheckout\Nvp\Action\Api\GetExpressCheckoutDetailsAction;
use Payum\Paypal\ExpressCheckout\Nvp\Action\Api\GetRecurringPaymentsProfileDetailsAction;
use Payum\Paypal\ExpressCheckout\Nvp\Action\Api\GetTransactionDetailsAction;
use Payum\Paypal\ExpressCheckout\Nvp\Action\Api\SetExpressCheckoutAction;
use Payum\Paypal\ExpressCheckout\Nvp\Action\Api\AuthorizeTokenAction;
use Payum\Paypal\ExpressCheckout\Nvp\Action\Api\ManageRecurringPaymentsProfileStatusAction;
use Payum\Paypal\ExpressCheckout\Nvp\Action\Api\CreateBillingAgreementAction;
use Payum\Paypal\ExpressCheckout\Nvp\Action\Api\DoReferenceTransactionAction;
use Payum\Paypal\ExpressCheckout\Nvp\Action\Api\TransactionSearchAction;
use Payum\Paypal\ExpressCheckout\Nvp\Action\Api\UpdateRecurringPaymentProfileAction;
use Payum\Paypal\ExpressCheckout\Nvp\Action\Api\DoVoidAction;
use Payum\Paypal\ExpressCheckout\Nvp\Action\AuthorizeAction;
use Payum\Paypal\ExpressCheckout\Nvp\Action\CaptureAction;
use Payum\Paypal\ExpressCheckout\Nvp\Action\CancelAction;
use Payum\Paypal\ExpressCheckout\Nvp\Action\CancelRecurringPaymentsProfileAction;
use Payum\Paypal\ExpressCheckout\Nvp\Action\ConvertPaymentAction

; GVN should ignore the store to p[1] to see that the load from p[0] is
; fully redundant.

; CHECK-LABEL: @yes(
; CHECK: if.then:
; CHECK-NEXT: store i32 0, i32* %q
; CHECK-NEXT: ret void

define void @yes(i1 %c, i32* %p, i32* %q) nounwind {
entry:
  store i32 0, i32* %p
  %p1 = getelementptr inbounds i32, i32* %p, i64 1
  store i32 1, i32* %p1
  br i1 %c, label %if.else, label %if.then

if.then:
  %t = load i32, i32* %p
  store i32 %t, i32* %q
  ret void

if.else:
  ret void
}

; GVN should ignore the store to p[1] to see that the first load from p[0] is
; fully redundant. However, the second load is larger, so it's not a simple
; redundancy.

; CHECK-LABEL: @watch_out_for_size_change(
; CHECK: if.then:
; CHECK-NEXT: store i32 0, i32* %q
; CHECK-NEXT: ret void
; CHECK: if.else:
; CHECK: load i64, i64* %pc
; CHECK: store i64

define void @watch_out_for_size_change(i1 %c, i32* %p, i32* %q) nounwind {
entry:
  store i32 0, i32* %p
  %p1 = getelementptr inbounds i32, i32* %p, i64 1
  store i32 1, i32* %p1
  br i1 %c, label %if.else, label %if.then

if.then:
  %t = load i32, i32* %p
  store i32 %t, i32* %q
  ret void

if.else:
  %pc = bitcast i32* %p to i64*
  %

/*
 *  Licensed to the Apache Software Foundation (ASF) under one or more
 *  contributor license agreements.  See the NOTICE file distributed with
 *  this work for additional information regarding copyright ownership.
 *  The ASF licenses this file to You under the Apache License, Version 2.0
 *  (the "License"); you may not use this file except in compliance with
 *  the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

package javax.crypto.spec;

import java.math.BigInteger;
import java.security.spec.AlgorithmParameterSpec;

/**
 * The algorithm parameter specification for the Diffie-Hellman algorithm.
 */
public class DHParameterSpec implements AlgorithmParameterSpec {

    private final BigInteger p;
    private final BigInteger g;
    private final int l;

    /**
     * Creates a new <code>DHParameterSpec</code> instance with the specified
     * <i>prime modulus</i> and <i>base generator</i>.
     *
     * @param p
     *            the prime modulus.
     * @param g
     *            the base generator.
     */
    public DHParameterSpec(BigInteger p, BigInteger g) {
        this.p = p;
        this.g = g;
        this.l = 0;
    }

    /**
     * Creates a new <code>DHParameterSpec</code> instance with the specified
     * <i>prime modulus</i>, <i>base generator</i> and size (in bits) of the
     * <i>random exponent</i>.
     *
     * @param p
     *            the prime modulus.
     * @param g
     *            the base generator.
     * @param l
     *            the size of the random exponent (in bits).
     

    $count = 0;

    foreach ($result as $row) {
      // Calculate the changed timestamp for this node.
      $changed = _tracker_calculate_changed($row->nid);

      // Remove existing data for this node.
      db_delete('tracker_node')
        ->condition('nid', $row->nid)
        ->execute();
      db_delete('tracker_user')
        ->condition('nid', $row->nid)
        ->execute();

      // Insert the node-level data.
      db_insert('tracker_node')
        ->fields(array(
          'nid' => $row->nid,
          'published' => $row->status,
          'changed' => $changed,
        ))
        ->execute();

      // Insert the user-level data for the node's author.
      db_insert('tracker_user')
        ->fields(array(
          'nid' => $row->nid,
          'published' => $row->status,
          'changed' => $changed,
          'uid' => $row->uid,
        ))
        ->execute();

      $query = db_select('comment', 'c', array('target' => 'slave'));
      // Force PostgreSQL to do an implicit cast by adding 0.
      $query->addExpression('0 + :changed', 'changed', array(':changed' => $changed));
      $query->addField('c', 'status', 'published');
      $query
        ->distinct()
        ->fields('c', array('uid', 'nid'))
        ->condition('c.nid', $row->nid)
        ->condition('c.uid', $row->uid, '<>')
        ->condition('c.status', COMMENT_PUBLISHED);

      // Insert the user-level data for the commenters (except if a commenter
      // is the node's author).
      db_insert('tracker_user')
        ->from($query)
        ->execute();

      // Note that we have indexed at least one node.
      $last_nid = $row->nid;

      $count++;
    }

    if ($

#ifdef __cplusplus
extern "C" {
#endif

/**
 * \brief FTL需要使用到的内存（RAM）空间大小
 *
 * \param[in] size           : 存储器的容量
 * \param[in] erase_size     : 擦除单元大小
 * \param[in] logic_blk_size : 逻辑块的大小
 * \param[in] nb_log_blocks  : 日志块个数
 *
 * \return FTL需要使用到的内存（RAM）空间大小
 */
#define AM_FTL_RAM_SIZE_GET(size, erase_size, logic_blk_size, nb_log_blocks) \
   (((logic_blk_size) + 4)                                                   \
     + ((size) / (erase_size) * 2)                                           \
     + ((nb_log_blocks) * (sizeof(struct log_buf)))                          \
     + ((nb_log_blocks) * ((erase_size) / (logic_blk_size)))                 \
     + (((((size) / (erase_size)) + 31) / 32) * sizeof(uint32_t)))
 
typedef struct am_ftl_info {

    /** \brief RAM 缓冲区   */
    uint8_t  *p_buf;

    /** \brief RAM 缓冲区的长度，必须为 AM_FTL_RAM_SIZE_GET() 宏得到的值  */
    size_t    len;

    /**
     * \brief 逻辑块的大小
     *
     * 一般与 MTD 设备的写入大小（如：SPI FLASH的页大小）相等或为写入大小的
     * 整数倍，使用 \sa am_ftl_read() 或者 \sa am_ftl_write() 函数读/写的数据
     * 时，每次读/写的数据量即为逻辑块

/*
 *
 * Copyright 2016 gRPC authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

package grpc

import (
	"fmt"
	"io"
	"net"
	"net/http"

	"golang.org/x/net/context"
	"google.golang.org/grpc/codes"
	"google.golang.org/grpc/status"
	"google.golang.org/grpc/transport"
)

// dialContext connects to the address on the named network.
func dialContext(ctx context.Context, network, address string) (net.Conn, error) {
	return (&net.Dialer{Cancel: ctx.Done()}).Dial(network, address)
}

func sendHTTPRequest(ctx context.Context, req *http.Request, conn net.Conn) error {
	req.Cancel = ctx.Done()
	if err := req.Write(conn); err != nil {
		return fmt.Errorf("failed to write the HTTP request: %v", err)
	}
	return nil
}

// toRPCErr converts an error into an error from the status package.
func toRPCErr(err error) error {
	if err == nil || err == io.EOF {
		return err
	}
	if _, ok := status.FromError(err); ok {
		return err
	}
	switch e := err.(type) {
	case transport.StreamError:
		return status.Error(e.Code, e.Desc)
	case transport.ConnectionError:
		return status.Error(codes.Unavailable, e.Desc)
	default:
		switch err {
	

            Assert.isTrue(firstBtn.hasClass('focus'),
                'Initial button does not have the focus class');

            // First go to the right

            for (var i = 0; i < buttons.length - 1; i++) {
                var currID = '#' + buttons[i].toLowerCase() + '-btn',
                    nextID = '#' + buttons[i+1].toLowerCase() + '-btn';

                currBtn = Y.one(currID + ' span span input');
                nextBtn = Y.one(nextID + ' span span input');

                currBtn.simulate(keyEvent, {
                    charCode: RIGHT_ARROW_KEY,
                    keyCode: RIGHT_ARROW_KEY
                });

                Assert.isTrue(nextBtn.hasClass('focus'),
                    'Button ' + buttons[i+1] + ' is not focused with right key');
            }

            // Then go to the left

            for (var j = buttons.length - 1; j > 0; j--) {
                var currID = '#' + buttons[j].toLowerCase() + '-btn',
                    nextID = '#' + buttons[j-1].toLowerCase() + '-btn';

                currBtn = Y.one(currID + ' span span input');
                nextBtn = Y.one(nextID + ' span span input');

                currBtn.simulate(keyEvent, {
                    charCode: LEFT_ARROW_KEY,
                    keyCode: LEFT_ARROW_KEY
                });

                Assert.isTrue(nextBtn.hasClass('focus'),
                    'Button ' + buttons[j-1] + ' is not focused with left key');
            }
        },

        'Focusing buttons should be able to circle around': function () {
            var out      = Y.one('#out'),
                addBtn   = Y.one('#add-btn span span input'),
                saveBtn  = Y.one('#save-btn span span input'),
                keyEvent = !(Y.UA.opera) ? 'keydown' : 'keypress';

            // Set focus on the first element programatically
            addBtn.focus();

            Assert.isTrue(addBtn.hasClass

/*
 * Find first bit set in bit string.
 */
int
ffsbit(int *s)
{
	int             offset;

	for (offset = 0; !*s; offset += (int)INT_SIZE, ++s);
	return offset + __builtin_ctz(*s);
}

int
ffs(unsigned int mask)
{
	if (mask == 0)
		return 0;

	/*
	 * NOTE: cannot use __builtin_ffs because it generates a call to
	 * 'ffs'
	 */
	return 1 + __builtin_ctz(mask);
}

int
ffsll(unsigned long long mask)
{
	if (mask == 0)
		return 0;

	/*
	 * NOTE: cannot use __builtin_ffsll because it generates a call to
	 * 'ffsll'
	 */
	return 1 + __builtin_ctzll(mask);
}

/*
 * Find last bit set in bit string.
 */
int
fls(unsigned int mask)
{
	if (mask == 0)
		return 0;

	return (sizeof (mask) << 3) - __builtin_clz(mask);
}

int
flsll(unsigned long long mask)
{
	if (mask == 0)
		return 0;

	return (sizeof (mask) << 3) - __builtin_clzll(mask);
}

void
bzero_phys_nc(
	      addr64_t src64,
	      uint32_t bytes)
{
  bzero_phys(src64,bytes);
}

void
bzero_phys(
	   addr64_t src64,
	   uint32_t bytes)
{
	bzero(PHYSMAP_PTOV(src64), bytes);
}


/*
 * bcopy_phys - like bcopy but copies from/to physical addresses.
 */

void
bcopy_phys(
	   addr64_t src64,
	   addr64_t dst64,
	   vm_size_t bytes)
{
	/* Not necessary for K64 - but ensure we stay within a page */
	if (((((uint32_t

/*
 * Copyright 2013-2020 Software Radio Systems Limited
 *
 * This file is part of srsLTE.
 *
 * srsLTE is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of
 * the License, or (at your option) any later version.
 *
 * srsLTE is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * A copy of the GNU Affero General Public License can be found in
 * the LICENSE file in the top-level directory of this distribution
 * and at http://www.gnu.org/licenses/.
 *
 */

#include <stdbool.h>

#include "srslte/phy/common/phy_common.h"
#include "srslte/phy/fec/crc.h"

typedef struct {
  int      n;
  int      l;
  uint32_t p;
  uint32_t s;
  uint32_t word;
} expected_word_t;

static expected_word_t expected_words[] = {

    {5001, 24, SRSLTE_LTE_CRC24A, 1, 0x1C5C97}, // LTE CRC24A (36.212 Sec 5.1.1)
    {5001, 24, SRSLTE_LTE_CRC24B, 1, 0x36D1F0}, // LTE CRC24B
    {5001, 16, SRSLTE_LTE_CRC16, 1, 0x7FF4},    // LTE CRC16: 0x7FF4
    {5001, 8, SRSLTE_LTE_CRC8, 1, 0xF0},        // LTE CRC8 0xF8

    {-1, -1, 0, 0, 0}};

int get_expected_word(int n, int l, uint32_t p, unsigned int s, unsigned int* word)
{
  int i;

=head1 NAME

SSL_COMP_add_compression_method, SSL_COMP_get_compression_methods,
SSL_COMP_get0_name, SSL_COMP_get_id, SSL_COMP_free_compression_methods
- handle SSL/TLS integrated compression methods

=head1 SYNOPSIS

 #include <openssl/ssl.h>

 int SSL_COMP_add_compression_method(int id, COMP_METHOD *cm);
 STACK_OF(SSL_COMP) *SSL_COMP_get_compression_methods(void);
 const char *SSL_COMP_get0_name(const SSL_COMP *comp);
 int SSL_COMP_get_id(const SSL_COMP *comp);

Deprecated since OpenSSL 1.1.0, can be hidden entirely by defining
B<OPENSSL_API_COMPAT> with a suitable version value, see
L<openssl_user_macros(7)>:

 void SSL_COMP_free_compression_methods(void);

=head1 DESCRIPTION

SSL_COMP_add_compression_method() adds the compression method B<cm> with
the identifier B<id> to the list of available compression methods. This
list is globally maintained for all SSL operations within this application.
It cannot be set for specific SSL_CTX or SSL objects.

SSL_COMP_get_compression_methods() returns a stack of all of the available
compression methods or NULL on error.

SSL_COMP_get0_name() returns the name of the compression method B<comp>.

SSL_COMP_get_id() returns the id of the compression method B<comp>.

SSL_COMP_free_compression_methods() releases any resources acquired to
maintain the internal table of compression methods.

=head1 NOTES

The TLS standard (or SSLv3) allows the integration of compression methods
into the communication. The TLS RFC does however not specify compression
methods or their corresponding identifiers, so there is currently no compatible
way to integrate compression with unknown peers. It is therefore currently not
recommended to integrate compression into applications. Applications for
non-public use may agree on certain compression methods. Using different
compression methods with the same identifier will lead to connection failure.

An OpenSSL

<listAttribute key="org.eclipse.jdt.launching.CLASSPATH">
<listEntry value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;runtimeClasspathEntry containerPath=&quot;org.eclipse.jdt.launching.JRE_CONTAINER&quot; javaProject=&quot;Showcase&quot; path=&quot;1&quot; type=&quot;4&quot;/&gt;&#10;"/>
<listEntry value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;runtimeClasspathEntry internalArchive=&quot;/Showcase/core/src&quot; path=&quot;3&quot; type=&quot;2&quot;/&gt;&#10;"/>
<listEntry value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;runtimeClasspathEntry internalArchive=&quot;/gwt-user/core/src&quot; path=&quot;3&quot; type=&quot;2&quot;/&gt;&#10;"/>
<listEntry value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;runtimeClasspathEntry internalArchive=&quot;/gwt-user/core/super&quot; path=&quot;3&quot; type=&quot;2&quot;/&gt;&#10;"/>
<listEntry value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;runtimeClasspathEntry internalArchive=&quot;/gwt-dev/core/super&quot; path=&quot;3&quot; type=&quot;2&quot;/&gt;&#10;"/>
<listEntry value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;runtimeClasspathEntry id=&quot;org.eclipse.jdt.launching.classpathentry.defaultClasspath&quot;&gt;&#10

   autoinst_crawford_array_a auto_a_1
     (/*AUTOINST*/
      // Outputs
      .a_valid				(a_valid),
      .a_data				(a_data[7:0]),
      // Inputs
      .a_ready				(a_ready),
      .clk				(clk),
      .rst_n				(rst_n));

   // Arrayed instances
   // AUTOINST does not work for this one :-(
   // Note it is tricky because I want clk and rst_n to fanout to both instances,
   // but I want the valid signals to be discreatly tied to each submodule.

   //autoinst_crawford_array_a ary [`AUTO_NBR_A_INST-1:0]
   //  (/*XXXAUTOINST*/
   //   // Outputs
   //   .a_valid                           (a_valid[1:0]),
   //   .a_data                            (a_data[15:0]),
   //   // Inputs
   //   .a_ready                           (a_ready[1:0]),
   //   .clk                               (clk),
   //   .rst_n                             (rst_n));

   autoinst_crawford_array_a ary [`AUTO_NBR_A_INST-1:0]
     (/*AUTOINST*/
      // Outputs
      .a_valid				(a_valid),
      .a_data				(a_data[7:0]),
      // Inputs
      .a_ready				(a_ready),
      .clk				(clk),
      .rst_n				(rst_n));

   autoinst_crawford_array_a #(.a(a),b) par [`AUTO_NBR_A_INST-1:0]
     (/*AUTOINST*/
      // Outputs
      .a_valid				(a_valid),
      .a_data				(a_data[7:0]),
      // Inputs
      .a_ready				(a_ready),
      .

  private static final byte[] ALL_PRIMITIVES_BYTES = asBytes(new int[] {
    0x08, 0x01, 0x10, 0x02, 0x18, 0x06, 0x25, 0x04, 0x00, 0x00, 0x00, 0x2D, 0x05, 0x00, 0x00, 0x00,
    0x30, 0x06, 0x38, 0x07, 0x40, 0x10, 0x49, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51,
    0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x58, 0x01, 0x65, 0x9A, 0x99, 0x31, 0x41, 0x69,
    0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x28, 0x40, 0xA8, 0x01, 0x65, 0xA8, 0x01, 0x97, 0x01, 0xB0,
    0x01, 0x66, 0xB0, 0x01, 0x98, 0x01, 0xB8, 0x01, 0xCE, 0x01, 0xB8, 0x01, 0xB2, 0x02, 0xC5, 0x01,
    0x68, 0x00, 0x00, 0x00, 0xC5, 0x01, 0x9A, 0x00, 0x00, 0x00, 0xCD, 0x01, 0x69, 0x00, 0x00, 0x00,
    0xCD, 0x01, 0x9B, 0x00, 0x00, 0x00, 0xD0, 0x01, 0x6A, 0xD0, 0x01, 0x9C, 0x01, 0xD8, 0x01, 0x6B,
    0xD8, 0x01, 0x9D, 0x01

    bool              extraValueJob;
};

ItemAlbumModel::ItemAlbumModel(QObject* const parent)
    : ItemThumbnailModel(parent),
      d(new Private)
{
    qRegisterMetaType<QList<ItemListerRecord>>("QList<ItemListerRecord>");

    d->refreshTimer     = new QTimer(this);
    d->refreshTimer->setSingleShot(true);

    d->incrementalTimer = new QTimer(this);
    d->incrementalTimer->setSingleShot(true);

    connect(d->refreshTimer, SIGNAL(timeout()),
            this, SLOT(slotNextRefresh()));

    connect(d->incrementalTimer, SIGNAL(timeout()),
            this, SLOT(slotNextIncrementalRefresh()));

    connect(this, SIGNAL(readyForIncrementalRefresh()),
            this, SLOT(incrementalRefresh()));

    connect(CoreDbAccess::databaseWatch(), SIGNAL(collectionImageChange(CollectionImageChangeset)),
            this, SLOT(slotCollectionImageChange(CollectionImageChangeset)));

    connect(CoreDbAccess::databaseWatch(), SIGNAL(searchChange(SearchChangeset)),
            this, SLOT(slotSearchChange(SearchChangeset)));

    connect(AlbumManager::instance(), SIGNAL(signalAlbumAdded(Album*)),
            this, SLOT(slotAlbumAdded(Album*)));

    connect(AlbumManager::instance(), SIGNAL(signalAlbumDeleted(Album*)),
            this, SLOT(slotAlbumDeleted(Album*)));

    connect(AlbumManager::instance(), SIGNAL(signalAlbumRenamed(Album*)),
            this, SLOT(slotAlbumRenamed(Album*)));

    connect(AlbumManager::instance(), SIGNAL(signalAlbumsCleared()),
            this, SLOT(slotAlbumsCleared()));

    connect(AlbumManager::instance(), SIGNAL(signalShowOnlyAvailableAlbumsChanged(bool)),
            this, SLOT(setListOnlyAvailableImages(bool)));
}

ItemAlbumModel::~ItemAlbumModel()
{
    if (d->jobThread)
    {
        d->jobThread->cancel();
        d->jobThread = nullptr;
    }

    delete d;
}

QList

    if( h != 0 )
    {
        *thread = h;
        return 0;
    }
    else
    {
        return EAGAIN;
    }
}

int pthread_join( pthread_t thread, void ** /*value_ptr*/ )
{
    ::WaitForSingleObject( thread, INFINITE );
    ::CloseHandle( thread );
    return 0;
}

#endif

// template<class F> int lw_thread_create( pthread_t & pt, F f );

namespace boost
{

namespace detail
{

class lw_abstract_thread
{
public:

    virtual ~lw_abstract_thread() {}
    virtual void run() = 0;
};

#if defined( BOOST_HAS_PTHREADS )

extern "C" void * lw_thread_routine( void * pv )
{
    std::auto_ptr<lw_abstract_thread> pt( static_cast<lw_abstract_thread *>( pv ) );

    pt->run();

    return 0;
}

#else

unsigned __stdcall lw_thread_routine( void * pv )
{
    std::auto_ptr<lw_abstract_thread> pt( static_cast<lw_abstract_thread *>( pv ) );

    pt->run();

    return 0;
}

#endif

template<class F> class lw_thread_impl: public lw_abstract_thread
{
public:

    explicit lw_thread_impl( F f ): f_( f )
    {
    }

    void run()
    {
        f_();
    }

private:

    F f_;
};

template<class F> int lw_thread_create( pthread_t & pt, F f )
{
    std::auto_ptr<lw_abstract_thread> p( new lw_thread_impl<F>( f ) );

    int r = pthread_create( &pt, 0, lw_thread_routine, p.get() );

    if( r == 0 )
    {
        p.release

        "raw": "escope@^3.6.0",
        "scope": null,
        "escapedName": "escope",
        "name": "escope",
        "rawSpec": "^3.6.0",
        "spec": ">=3.6.0 <4.0.0",
        "type": "range"
      },
      "/Users/trott/io.js/tools/node_modules/eslint"
    ]
  ],
  "_from": "escope@>=3.6.0 <4.0.0",
  "_id": "escope@3.6.0",
  "_inCache": true,
  "_location": "/escope",
  "_nodeVersion": "0.12.9",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/escope-3.6.0.tgz_1457720018969_0.025237560039386153"
  },
  "_npmUser": {
    "name": "nzakas",
    "email": "nicholas@nczconsulting.com"
  },
  "_npmVersion": "2.14.9",
  "_phantomChildren": {},
  "_requested": {
    "raw": "escope@^3.6.0",
    "scope": null,
    "escapedName": "escope",
    "name": "escope",
    "rawSpec": "^3.6.0",
    "spec": ">=3.6.0 <4.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/eslint"
  ],
  "_resolved": "https://registry.npmjs.org/escope/-/escope-3.6.0.tgz",
  "_shasum": "e01975e812781a163a6dadfdd80398dc64c889c3",
  "_shrinkwrap": null,
  "_spec": "escope@^3.6.0",
  "_where": "/Users/trott/io.js/tools/node

    def close(self):
        if self.dict is None:
            return
        try:
            self.sync()
            try:
                self.dict.close()
            except AttributeError:
                pass
        finally:
            # Catch errors that may happen when close is called from __del__
            # because CPython is in interpreter shutdown.
            try:
                self.dict = _ClosedDict()
            except:
                self.dict = None

    def __del__(self):
        if not hasattr(self, 'writeback'):
            # __init__ didn't succeed, so don't bother closing
            # see http://bugs.python.org/issue1339007 for details
            return
        self.close()

    def sync(self):
        if self.writeback and self.cache:
            self.writeback = False
            for key, entry in self.cache.items():
                self[key] = entry
            self.writeback = True
            self.cache = {}
        if hasattr(self.dict, 'sync'):
            self.dict.sync()


class BsdDbShelf(Shelf):
    """Shelf implementation using the "BSD" db interface.

    This adds methods first(), next(), previous(), last() and
    set_location() that have no counterpart in [g]dbm databases.

    The actual database must be opened using one of the "bsddb"
    modules "open" routines (i.e. bsddb.hashopen, bsddb.btopen or
    bsddb.rnopen) and passed to the constructor.

    See the module's __doc__ string for an overview of the interface.
    """

    def __init__(self, dict, protocol=None, writeback=False,
                 keyencoding="utf-8"):
        Shelf.__init__(self, dict, protocol, writeback, keyencoding)

    def set_location(self, key):
        (key, value) = self.dict.set_location(key)
        f = BytesIO(value)
        return (key.decode(self.keyencoding), Unpickler(f).load())

    def next(self):
        (key, value

